{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/composant/global/erreur-pop-up/erreur-pop-up.component.html","webpack:///./src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts","webpack:///./src/app/composant/global/global.module.ts","webpack:///./src/app/mock-backend/mock-api.ts","webpack:///./src/app/mock-backend/mock-backend-interceptor.ts","webpack:///./src/app/pipes/pipes.module.ts","webpack:///./src/app/services/log.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./composant/main/main.module.ngfactory\": [\n\t\t\"./src/app/composant/main/main.module.ngfactory.js\",\n\t\t\"composant-main-main-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"app\",\r\n    loadChildren: './composant/main/main.module#MainModule',\r\n  },\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"app\",\r\n    pathMatch: \"full\"\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cl-app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { mockBackEndInterceptorFactory } from './mock-backend/mock-backend-interceptor';\r\nimport { AppComponent } from './app.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { GlobalModule } from './composant/global/global.module';\r\nimport { LogService } from 'services/log.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    GlobalModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useFactory: mockBackEndInterceptorFactory,\r\n      deps: [LogService],\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  declarations: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<h1 mat-dialog-title>Oups...</h1>\r\n<div mat-dialog-content>\r\n  <p>{{data.message}}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close cdkFocusInitial>Ok</button>\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'cl-erreur-pop-up',\r\n  templateUrl: './erreur-pop-up.component.html',\r\n  styleUrls: ['./erreur-pop-up.component.scss']\r\n})\r\nexport class ErreurPopUpComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ErreurPopUpComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { message: string }\r\n  ) { }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonComponent } from './button/button.component';\r\nimport { InputComponent } from './input/input.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ErreurPopUpComponent } from './erreur-pop-up/erreur-pop-up.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { PipesModule } from 'src/app/pipes/pipes.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ButtonComponent,\r\n    InputComponent,\r\n    ErreurPopUpComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatAutocompleteModule,\r\n    PipesModule\r\n  ],\r\n  exports: [\r\n    ButtonComponent,\r\n    InputComponent\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  entryComponents: [\r\n    ErreurPopUpComponent\r\n  ]\r\n})\r\nexport class GlobalModule { }\r\n","import { Position } from 'model/position';\r\nimport { Path } from 'model/path';\r\nimport { City } from 'model/city';\r\n\r\nexport const paris: Position = { id: 1, lon: 48.856783, lat: 2.348773 };\r\nexport const metz: Position = { id: 2, lon: 49.119457, lat: 6.175982 };\r\nexport const charleville: Position = { id: 3, lon: 49.762460, lat: 4.722300 };\r\nexport const path1: Path = { start: paris, end: metz };\r\nexport const path2: Path = { start: metz, end: charleville };\r\nexport const path3: Path = { start: charleville, end: paris };\r\nexport const path4: Path = { start: charleville, end: metz };\r\nexport const path5: Path = { start: metz, end: paris };\r\nexport const path6: Path = { start: paris, end: charleville };\r\n\r\nexport const cities: City[] =\r\n    [\r\n        { name: \"metz\", position: metz },\r\n        { name: \"paris\", position: paris },\r\n        { name: \"charleville\", position: charleville },\r\n    ];\r\nconst paths: Path[] = [path1, path2, path3, path4, path5, path6];\r\n\r\nexport const ApiRest: RestApi[] = [\r\n    {\r\n        url: \"/nearestpoint\",\r\n        method: \"GET\",\r\n        objectToReturn: () => metz\r\n    },\r\n    {\r\n        url: \"/positions\",\r\n        method: \"GET\",\r\n        objectToReturn: (req) => [paris, metz, charleville]\r\n    },\r\n    {\r\n        url: \"/path\",\r\n        method: \"GET\",\r\n        objectToReturn: (req) => {\r\n            const idStart: number = +req.params.get('idStart');\r\n            const idEnd: number = +req.params.get('idEnd');\r\n            return paths.find(path => path.start.id === idStart && path.end.id === idEnd);\r\n        }\r\n    },\r\n    {\r\n        url: \"/tsp\",\r\n        method: \"GET\",\r\n        objectToReturn: (req) => {\r\n            const params: string[] = req.params.getAll('id');\r\n            const pathsBuild: { start: number, end: number }[] = [];\r\n            for (let i = 0; i < params.length - 1; i++) {\r\n                pathsBuild.push({ start: +params[i], end: +params[i + 1] });\r\n            }\r\n            pathsBuild.push({ start: +params[params.length - 1], end: +params[0] });\r\n            return pathsBuild.map((pathsId) => paths.find(path => path.start.id === pathsId.start && path.end.id === pathsId.end));\r\n        }\r\n    },\r\n    {\r\n        url: \"/cities\",\r\n        method: \"GET\",\r\n        objectToReturn: (req) => cities\r\n    }\r\n];\r\n\r\nexport interface RestApi {\r\n    url: string;\r\n    method: 'GET' | 'POST' | 'PATCH' | 'DELETE';\r\n    objectToReturn: any;\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { of, Observable, throwError } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { ApiRest, RestApi } from './mock-api';\r\nimport { LogService } from 'services/log.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { TouchSequence } from 'selenium-webdriver';\r\n\r\n@Injectable()\r\nclass MockBackendInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private logService: LogService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const api: RestApi = ApiRest.find(apiRest => request.url.endsWith(apiRest.url) && request.method === apiRest.method);\r\n        if (api) {\r\n            return of(new HttpResponse({ status: 200, body: api.objectToReturn.call(undefined, request) }));\r\n        } else {\r\n            this.logService.set(\"Une erreur c'est produite lors \", \" : l'url n'est pas connu : \" + request.url).asError().and.showPopUp().and.log();\r\n            return of(new HttpResponse({ status: 404, body: {} }));\r\n        }\r\n    }\r\n}\r\n\r\n@Injectable()\r\nclass EmptyBackendInterceptor implements HttpInterceptor {\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        request = request.clone({\r\n            url: \"http://\" + environment.urlServeur + request.url\r\n        });\r\n        return next.handle(request);\r\n    }\r\n}\r\n\r\nexport function mockBackEndInterceptorFactory(logService: LogService) {\r\n    if (environment.isServeurMock) {\r\n        return new MockBackendInterceptor(logService);\r\n    } else {\r\n        return new EmptyBackendInterceptor();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CapitalizePipe } from './capitalize.pipe';\r\n\r\n@NgModule({\r\n  declarations: [CapitalizePipe],\r\n  exports: [CapitalizePipe],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class PipesModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ErreurPopUpComponent } from \"../composant/global/erreur-pop-up/erreur-pop-up.component\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LogService {\r\n    constructor(private dialog: MatDialog) {\r\n    }\r\n\r\n    set(message: string, info: any = {}) {\r\n        return new Log(this.dialog, message, info);\r\n    }\r\n}\r\n\r\nclass Log {\r\n    private message: string;\r\n    private info: any;\r\n    public and: Log;\r\n    private flags: 'error' | 'warn' | 'info';\r\n\r\n    constructor(public dialog: MatDialog, message: string, info: any) {\r\n        this.message = message;\r\n        this.info = info;\r\n        this.and = this;\r\n    }\r\n\r\n    public asError() {\r\n        this.setFlags('error');\r\n        return this;\r\n    }\r\n\r\n    public asWarn() {\r\n        this.setFlags('warn');\r\n        return this;\r\n    }\r\n\r\n    public asInfo() {\r\n        this.setFlags('info');\r\n        return this;\r\n    }\r\n\r\n    private setFlags(flags: 'error' | 'warn' | 'info') {\r\n        this.flags = flags;\r\n    }\r\n\r\n    public showPopUp() {\r\n        this.dialog.open(ErreurPopUpComponent, {\r\n            data: { message: this.message }\r\n        });\r\n        return this;\r\n    }\r\n\r\n    public log() {\r\n        switch (this.flags) {\r\n            case \"error\":\r\n                console.error(this.message, this.info);\r\n                break;\r\n            case \"warn\":\r\n                console.warn(this.message, this.info);\r\n                break;\r\n            case \"info\":\r\n                console.info(this.message, this.info);\r\n                break;\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  isServeurMock: true,\r\n  urlServeur: \"127.0.0.1\"\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}