var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.637,1,1.114]],["body/components/AppComponent.html",[0,1.086,1,2.002,2,2.121,3,0.336,4,0.336,5,1.782,6,1.782,7,1.782,8,1.782,9,0.257,10,3.437,11,2.121,12,3.177,13,1.658,14,2.955,15,2.749,16,3.863,17,2.28,18,5.741,19,2.28,20,5.207,21,0.608,22,1.223,23,3.349,24,1.658,25,0.984,26,4.07,27,4.07,28,0.891,29,0.027,30,1.347,31,0.42,32,0.42,33,0.336,34,0.183,35,1.098,36,2.28,37,2.28,38,1.782,39,2.65,40,1.782,41,0.912,42,1.782,43,1.347,44,1.782,45,1.175,46,1.347,47,1.347,48,1.782,49,1.258,50,1.782,51,1.347,52,1.782,53,1.347,54,1.782,55,1.347,56,1.782,57,1.347,58,1.782,59,1.258,60,1.545,61,1.782,62,1.782,63,0.016,64,0.02,65,0.016]],["title/modules/AppModule.html",[66,0.972,67,2.24]],["body/modules/AppModule.html",[1,2.233,3,0.324,4,0.324,9,0.248,16,2.914,29,0.027,31,0.688,32,0.405,33,0.324,34,0.177,35,1.059,63,0.015,64,0.019,65,0.015,66,1.134,67,4.466,68,1.491,69,1.719,70,2.878,71,2.878,72,2.4,73,1.719,74,3.316,75,3.316,76,3.316,77,3.316,78,3.829,79,3.507,80,2.4,81,2.002,82,1.852,83,3.927,84,2.4,85,5.088,86,4.296,87,2.914,88,2.4,89,3.316,90,5.088,91,3.927,92,5.088,93,5.088,94,2.613,95,3.775,96,3.316,97,2.373,98,2.373,99,2.613,100,3.927,101,4.296,102,2.373,103,3.927,104,1.683,105,2.002,106,3.316,107,3.927,108,3.927,109,3.316,110,2.914]],["title/modules/AppRoutingModule.html",[66,0.972,78,2.034]],["body/modules/AppRoutingModule.html",[3,0.398,4,0.398,9,0.305,16,4.291,29,0.027,31,0.597,32,0.498,33,0.398,34,0.217,63,0.018,64,0.022,65,0.018,68,1.831,73,2.112,78,3.495,84,2.275,88,2.728,111,4.823,112,4.072,113,3.744,114,4.291,115,3.209,116,1.965,117,2.196,118,4.823,119,4.823,120,4.072,121,4.072,122,4.072,123,4.823]],["title/components/ButtonComponent.html",[0,0.637,43,1.114]],["body/components/ButtonComponent.html",[0,1.005,1,1.151,2,1.913,3,0.287,4,0.287,5,1.523,6,1.523,7,1.523,8,1.523,9,0.22,11,1.913,12,2.942,13,1.417,14,2.881,15,2.68,17,2.056,19,2.056,21,0.519,22,1.103,23,3.15,24,1.535,25,1.158,28,0.761,29,0.027,30,1.151,31,0.359,32,0.359,33,0.287,34,0.157,35,0.938,36,2.056,37,2.056,38,1.523,39,2.492,40,1.523,41,0.823,42,1.523,43,1.883,44,1.523,45,1.004,46,1.151,47,1.151,48,1.523,49,1.075,50,1.523,51,1.151,52,1.523,53,1.151,54,1.523,55,1.151,56,1.523,57,1.151,58,1.523,59,1.075,60,1.321,61,1.523,62,1.523,63,0.013,64,0.018,65,0.013,124,2.937,125,0.658,126,2.215,127,1.451,128,4.696,129,2.215,130,4.696,131,3.484,132,3.484,133,4.696,134,4.696,135,4.223,136,5.316,137,4.696,138,3.124,139,3.537,140,4.489,141,4.489,142,1.042,143,4.696,144,1.883,145,1.758,146,4.696,147,3.478,148,3.965,149,3.478,150,5.691,151,4.696,152,4.696,153,3.478,154,3.478,155,3.592]],["title/pipes/CapitalizePipe.html",[156,2.034,157,2.034]],["body/pipes/CapitalizePipe.html",[3,0.375,4,0.375,9,0.287,11,1.849,13,1.849,22,1.066,25,0.858,28,0.993,29,0.027,31,0.469,32,0.469,33,0.375,34,0.205,41,1.057,63,0.017,64,0.021,65,0.017,125,0.858,127,1.723,142,0.795,145,1.502,156,3.803,157,3.369,158,4.539,159,3.833,160,2.63,161,1.504,162,4.708,163,3.085,164,5.575,165,5.575,166,4.137,167,5.575,168,4.708,169,3.833,170,5.575,171,1.996,172,4.539,173,1.066,174,1.066,175,5.575,176,1.502,177,4.539,178,4.539]],["title/injectables/DrawerService.html",[179,1.04,180,2.24]],["body/injectables/DrawerService.html",[3,0.212,4,0.212,9,0.163,21,0.384,22,0.89,24,1.301,25,1.187,28,1.289,29,0.027,30,1.949,31,0.391,32,0.265,33,0.212,34,0.116,41,0.929,63,0.01,64,0.015,65,0.01,116,2.16,117,1.439,125,0.486,127,1.172,142,1.006,161,1.341,163,2.098,173,1.245,174,1.245,179,1.172,180,2.523,181,1.422,182,1.907,183,2.098,184,2.813,185,3.202,186,1.71,187,3.792,188,3.792,189,2.813,190,1.095,191,2.283,192,4.505,193,4.505,194,4.505,195,1.895,196,4.973,197,4.973,198,4.973,199,3.792,200,3.792,201,3.792,202,3.792,203,3.792,204,2.57,205,2.57,206,2.57,207,3.792,208,2.57,209,2.493,210,3.792,211,3.342,212,2.57,213,1.907,214,3.792,215,2.57,216,3.792,217,2.57,218,3.792,219,2.57,220,3.792,221,4.973,222,2.57,223,2.57,224,2.813,225,2.813,226,2.57,227,2.17,228,2.17,229,1.907,230,2.17,231,1.907,232,2.17,233,3.804,234,3.804,235,3.804,236,2.17,237,2.17,238,2.17,239,2.17,240,2.17,241,1.553,242,2.17,243,3.202,244,2.17,245,1.422,246,1.422,247,2.57,248,2.57,249,2.57,250,1.172,251,3.792,252,2.57,253,2.57,254,2.57,255,2.57,256,2.57,257,2.57,258,2.57,259,2.013,260,1.907,261,2.17,262,4.973,263,3.792,264,3.696,265,2.813,266,4.973,267,3.792,268,2.57,269,3.202,270,4.686,271,2.57,272,5.303,273,4.973,274,1.933,275,5.303,276,3.792,277,4.973,278,2.17,279,4.973,280,5.303,281,2.57,282,1.907,283,2.57,284,2.17,285,2.57,286,2.17,287,2.57,288,2.57,289,2.57,290,2.57]],["title/interceptors/EmptyBackendInterceptor.html",[99,2.24,291,2.24]],["body/interceptors/EmptyBackendInterceptor.html",[3,0.272,4,0.272,9,0.208,11,1.842,21,0.491,22,1.062,25,0.622,28,0.72,29,0.027,31,0.622,32,0.34,33,0.272,34,0.204,41,0.577,46,1.496,63,0.013,64,0.017,65,0.013,94,2.189,97,2.732,98,2.732,104,1.84,105,1.677,116,1.842,125,0.622,142,0.577,160,1.552,161,0.887,173,0.773,174,0.773,176,1.993,179,1.596,250,1.397,291,3.437,292,2.778,293,2.502,294,2.189,295,2.633,296,2.701,297,4.362,298,4.362,299,4.126,300,3.361,301,3.818,302,4.362,303,4.923,304,4.696,305,4.923,306,3.29,307,4.362,308,3.701,309,2.778,310,4.362,311,4.696,312,1.552,313,2.189,314,2.778,315,2.502,316,2.189,317,4.362,318,3.008,319,2.189,320,1.677,321,2.778,322,2.778,323,2.778,324,2.778,325,5.086,326,2.778,327,4.362,328,4.362,329,2.778,330,3.354,331,3.818,332,2.778,333,2.441,334,2.778,335,2.778,336,2.441,337,2.189,338,2.778,339,2.778,340,2.778,341,2.778,342,2.189,343,1.552,344,2.778,345,2.778,346,2.778,347,2.441,348,1.988,349,2.189,350,2.441,351,1.677,352,2.441,353,2.778,354,2.778]],["title/components/ErreurPopUpComponent.html",[0,0.637,45,0.972]],["body/components/ErreurPopUpComponent.html",[0,0.984,1,1.105,2,1.861,3,0.276,4,0.276,5,1.462,6,1.462,7,1.462,8,1.462,9,0.211,13,1.36,14,2.86,15,2.661,17,2,19,2,21,0.499,24,1.319,25,0.984,29,0.027,31,0.472,32,0.345,33,0.276,34,0.15,35,0.901,36,2,37,2,38,1.462,39,2.45,40,1.462,41,0.912,42,1.462,43,1.105,44,1.462,45,1.616,46,2.086,47,2.228,48,1.462,49,1.032,50,1.462,51,1.105,52,1.462,53,1.105,54,1.462,55,1.105,56,1.462,57,1.105,58,1.462,59,1.032,60,1.268,61,1.462,62,1.462,63,0.013,64,0.017,65,0.013,102,2.018,125,0.631,126,2.155,127,1.412,129,2.64,141,2.82,142,1.06,160,2.155,171,1.032,173,0.784,174,0.784,190,1.319,195,1.747,259,1.268,355,4.726,356,3.382,357,2.82,358,4.567,359,3.857,360,3.857,361,3.862,362,4.567,363,4.567,364,5.205,365,4.567,366,4.348,367,5.596,368,3.34,369,5.86,370,3.862,371,3.34,372,2.82,373,4.567,374,3.34,375,3.34,376,3.34,377,3.34,378,4.567,379,4.567,380,4.567,381,3.34,382,1.848,383,3.34,384,3.34,385,2.478]],["title/classes/FormPanelUtils.html",[34,0.152,386,2.034]],["body/classes/FormPanelUtils.html",[3,0.191,4,0.191,9,0.146,11,1.427,12,2.341,21,0.345,22,0.823,23,2.611,24,0.668,25,1.186,28,1.213,29,0.027,30,1.561,31,0.589,32,0.239,33,0.191,34,0.104,41,0.741,63,0.009,64,0.013,65,0.009,104,1.834,105,1.179,116,2.258,117,0.878,125,0.437,142,1,144,1.241,145,1.159,155,2.117,161,1.439,171,1.649,173,0.993,174,0.993,176,1.561,186,1.33,190,1.012,191,1.89,195,1.894,250,1.083,259,1.606,264,2.117,274,1.179,296,1.534,330,1.716,343,1.653,351,1.179,386,2.117,387,1.398,388,4.695,389,4.211,390,1.953,391,2.6,392,3.504,393,3.504,394,2.6,395,3.504,396,3.504,397,2.332,398,2.117,399,2.341,400,4.112,401,2.556,402,3.138,403,3.138,404,3.138,405,3.138,406,3.501,407,3.501,408,3.501,409,3.501,410,3.762,411,2.815,412,2.6,413,2.6,414,1.398,415,2.226,416,2.815,417,2.406,418,3.504,419,1.888,420,1.939,421,2.313,422,2.406,423,2.313,424,2.815,425,2.313,426,3.138,427,2.313,428,2.313,429,2.313,430,2.313,431,2.313,432,2.313,433,2.341,434,2.313,435,2.6,436,1.786,437,2.313,438,1.539,439,2.6,440,2.313,441,2.6,442,2.313,443,1.716,444,1.179,445,1.539,446,1.539,447,1.28,448,1.716,449,1.398,450,1.398,451,2.6,452,2.313,453,2.313,454,2.6,455,2.313,456,2.313,457,2.313,458,1.953,459,2.313,460,2.313,461,2.313,462,2.313,463,2.313,464,2.313,465,2.313,466,3.504,467,1.953,468,2.313,469,1.953,470,1.716,471,2.313,472,2.313,473,2.313,474,1.716,475,2.313,476,2.313,477,2.313,478,2.313,479,3.504,480,2.313,481,1.539,482,2.313,483,2.313,484,2.313,485,2.313,486,2.313,487,2.313,488,2.313,489,2.313,490,3.504,491,2.313,492,2.313,493,3.504,494,2.313,495,2.313,496,2.313,497,2.313,498,3.504,499,1.716,500,2.313,501,2.313,502,2.313,503,1.398,504,1.716,505,2.313,506,2.313,507,2.313,508,2.313,509,2.313,510,2.313,511,2.313,512,2.313]],["title/modules/GlobalModule.html",[66,0.972,79,1.863]],["body/modules/GlobalModule.html",[3,0.297,4,0.297,9,0.227,29,0.027,31,0.688,32,0.371,33,0.297,34,0.162,35,0.97,43,2.204,45,1.852,46,1.19,47,1.589,51,2.204,63,0.014,64,0.018,65,0.014,66,1.038,68,1.365,69,1.575,70,2.756,71,1.834,72,1.697,73,2.367,79,3.688,80,2.265,81,1.834,82,1.697,84,1.697,88,2.265,101,4.055,102,2.173,125,0.68,126,2.265,127,1.484,161,1.295,295,2.448,356,2.173,444,1.834,513,3.037,514,3.037,515,3.037,516,3.597,517,4.055,518,4.802,519,4.802,520,4.802,521,4.055,522,4.055,523,4.802,524,3.195,525,4.802,526,4.055,527,4.565,528,2.902,529,1.99,530,3.597,531,3.597,532,4.055,533,3.563,534,2.669,535,3.195,536,2.393,537,4.802,538,3.597,539,2.669,540,4.802,541,3.597,542,2.902,543,3.597]],["title/components/GpsComponent.html",[0,0.637,49,1.04]],["body/components/GpsComponent.html",[0,0.816,1,0.791,2,1.463,3,0.197,4,0.197,5,1.046,6,1.046,7,1.046,8,1.046,9,0.151,11,1.463,12,2.388,13,0.974,14,2.672,15,2.486,17,1.573,19,1.573,21,0.357,22,0.843,23,3.101,24,0.69,25,1.228,28,1.291,29,0.027,30,1.701,31,0.558,32,0.247,33,0.197,34,0.108,35,0.645,36,1.573,37,1.573,38,1.046,39,2.101,40,1.046,41,0.901,42,1.046,43,0.791,44,1.046,45,0.69,46,0.791,47,0.791,48,1.046,49,1.483,50,1.046,51,0.791,52,1.046,53,0.791,54,1.046,55,0.791,56,1.046,57,0.791,58,1.046,59,0.739,60,0.907,61,1.046,62,1.046,63,0.009,64,0.014,65,0.009,104,1.907,105,1.218,125,0.452,126,1.694,135,1.773,138,2.39,142,1.053,144,1.528,145,1.427,155,2.17,171,1.11,173,1.013,174,1.013,190,1.037,191,1.7,195,1.894,250,1.333,259,1.364,296,1.573,343,1.127,351,1.218,382,1.323,386,3.875,389,1.59,394,2.665,398,2.17,399,1.988,400,3.56,401,3.108,402,2.665,403,2.665,404,3.816,405,2.665,406,3.201,407,3.201,408,3.201,409,3.201,410,2.665,411,3.422,412,4.008,413,2.665,414,2.17,415,2.263,416,3.192,417,2.446,419,1.188,420,1.323,422,2.622,424,1.59,426,3.201,433,1.323,435,1.773,436,1.218,438,1.59,439,1.773,441,1.773,443,1.773,444,1.218,445,1.59,446,1.59,449,1.444,450,1.444,454,2.665,474,2.665,544,2.018,545,3.033,546,4.051,547,3.592,548,3.033,549,4.315,550,3.592,551,3.592,552,2.39,553,2.39,554,2.39,555,5.278,556,2.018,557,2.018,558,2.018,559,2.018,560,2.018,561,2.018,562,2.018,563,2.018,564,2.018,565,2.018,566,2.018,567,2.018,568,2.018,569,2.665,570,2.018,571,2.018,572,2.018,573,2.018,574,2.018,575,2.39,576,2.39,577,3.033,578,3.592,579,1.323,580,2.607,581,1.444,582,1.773,583,3.56,584,3.033,585,2.018,586,2.39,587,2.17,588,1.773,589,2.018,590,2.39]],["title/injectables/HttpService.html",[179,1.04,415,1.588]],["body/injectables/HttpService.html",[3,0.189,4,0.189,9,0.145,21,0.628,22,0.816,24,0.661,25,1.102,28,1.245,29,0.027,31,0.57,32,0.236,33,0.189,34,0.103,41,1.041,63,0.009,64,0.013,65,0.009,94,1.523,104,1.827,116,1.712,117,1.596,125,0.433,127,1.074,142,1.021,156,2.101,160,1.64,161,1.535,171,1.707,173,1.336,174,1.336,176,1.928,179,1.074,181,1.267,183,1.924,186,1.916,191,2.064,195,1.768,209,1.267,245,1.267,246,1.267,250,1.801,259,0.869,296,1.522,300,2.101,308,3.123,312,1.08,320,1.167,343,1.64,370,1.698,397,1.523,414,1.383,415,1.64,419,2.157,433,3.289,436,2.709,447,1.267,448,1.698,503,1.383,504,1.698,591,5.018,592,1.933,593,3.477,594,3.477,595,2.936,596,3.477,597,1.933,598,3.477,599,3.477,600,3.477,601,4.694,602,3.477,603,3.477,604,3.477,605,3.477,606,4.694,607,2.289,608,3.477,609,2.289,610,2.289,611,2.289,612,3.477,613,2.289,614,2.289,615,3.477,616,2.289,617,2.289,618,3.477,619,2.289,620,3.477,621,2.289,622,3.477,623,2.289,624,4.694,625,4.203,626,2.289,627,2.289,628,2.289,629,1.933,630,2.289,631,1.933,632,1.933,633,1.698,634,1.523,635,1.933,636,2.289,637,4.203,638,5.1,639,2.289,640,2.289,641,2.289,642,2.289,643,2.289,644,2.289,645,3.549,646,5.048,647,4.694,648,2.289,649,2.289,650,2.289,651,1.933,652,4.694,653,4.203,654,2.289,655,3.477,656,3.477,657,3.477,658,2.289,659,3.477,660,2.936,661,3.477,662,3.477,663,3.477,664,2.289,665,2.289,666,2.289,667,2.289,668,2.289,669,2.289,670,2.289,671,2.289,672,2.289,673,2.289,674,2.289,675,3.477,676,3.477,677,2.289,678,2.289,679,2.289,680,2.289,681,2.289,682,2.289,683,2.289,684,2.289,685,2.289,686,1.698,687,2.289,688,2.289]],["title/interfaces/IApiRest.html",[315,1.863,689,2.24]],["body/interfaces/IApiRest.html",[3,0.394,4,0.394,9,0.301,21,0.711,29,0.027,33,0.394,63,0.018,64,0.022,65,0.018,142,1.08,171,1.905,190,1.658,293,2.637,315,3.178,342,4.258,689,3.171,690,4.766,691,4.024,692,5.403,693,5.403,694,6.164,695,6.164,696,6.164]],["title/components/InputComponent.html",[0,0.637,51,1.114]],["body/components/InputComponent.html",[0,0.745,1,0.683,2,1.309,3,0.171,4,0.171,5,0.904,6,0.904,7,0.904,8,0.904,9,0.131,11,1.309,13,0.841,14,2.578,15,2.398,17,1.407,19,1.407,21,0.308,22,0.754,24,0.596,25,1.221,28,1.237,29,0.027,30,1.912,31,0.527,32,0.213,33,0.171,34,0.093,35,0.557,36,1.407,37,1.407,38,0.904,39,1.947,40,0.904,41,0.965,42,0.904,43,0.683,44,0.904,45,0.596,46,0.683,47,0.683,48,0.904,49,0.638,50,0.904,51,1.687,52,0.904,53,0.683,54,0.904,55,0.683,56,0.904,57,0.683,58,0.904,59,0.638,60,0.784,61,0.904,62,0.904,63,0.008,64,0.012,65,0.008,72,1.515,106,2.713,109,2.713,110,2.384,116,0.841,125,0.391,126,1.515,127,0.993,132,2.384,138,2.138,140,3.329,142,1.062,144,1.575,145,1.912,155,3.493,168,3.329,169,1.744,171,1.995,173,1.198,174,1.198,176,1.063,186,1.22,190,0.928,191,2.147,195,1.864,209,1.143,250,1.218,312,0.974,320,1.053,343,1.515,351,1.053,399,2.182,414,1.248,415,2.098,419,1.594,433,2.461,438,2.138,444,1.053,447,1.143,449,1.248,450,1.248,469,3.329,499,2.384,503,1.941,569,1.533,579,1.143,697,1.744,698,3.213,699,3.213,700,3.213,701,2.384,702,3.942,703,3.942,704,3.213,705,3.942,706,3.942,707,3.213,708,3.942,709,3.942,710,3.942,711,3.213,712,3.755,713,4.447,714,3.213,715,3.213,716,4.447,717,4.447,718,3.213,719,3.942,720,3.942,721,3.942,722,3.213,723,3.942,724,3.213,725,3.217,726,2.066,727,2.066,728,2.066,729,3.3,730,2.066,731,2.066,732,2.066,733,2.066,734,4.447,735,2.066,736,3.213,737,2.066,738,2.066,739,2.066,740,3.213,741,2.066,742,3.213,743,5.101,744,2.066,745,2.066,746,2.066,747,3.213,748,2.066,749,2.066,750,2.066,751,3.574,752,2.066,753,2.066,754,2.066,755,2.066,756,2.066,757,3.213,758,1.744,759,1.374,760,1.744,761,2.066,762,3.213,763,1.744,764,2.066,765,2.066,766,2.066,767,3.213,768,2.066,769,2.066,770,2.066,771,2.066,772,3.213,773,2.066,774,2.066,775,2.066,776,1.744,777,1.744,778,2.066,779,2.066,780,2.713,781,2.713,782,3.213,783,3.213,784,2.138,785,2.384,786,1.744,787,2.066,788,1.744]],["title/classes/Log.html",[34,0.152,789,2.24]],["body/classes/Log.html",[3,0.546,4,0.25,9,0.191,21,0.451,22,1.001,24,0.873,25,1.224,28,1.283,29,0.027,30,1,31,0.51,32,0.312,33,0.25,34,0.192,41,0.747,45,0.873,47,1.41,63,0.012,64,0.016,65,0.012,102,1.827,104,1,125,0.572,127,0.934,129,2.011,142,1.056,161,0.815,171,1.813,173,1.001,174,1.001,176,1.94,179,1.317,183,1.673,184,2.243,186,1.148,190,1.231,191,2.293,195,1.95,245,1.673,246,1.673,250,0.934,320,1.541,356,1.827,361,4.643,366,2.243,387,1.827,391,3.162,539,2.243,789,4.095,790,2.243,791,3.599,792,4.169,793,4.773,794,4.773,795,4.527,796,4.527,797,4.527,798,4.262,799,4.527,800,2.553,801,4.953,802,4.262,803,3.023,804,3.023,805,4.773,806,4.773,807,3.023,808,3.023,809,3.023,810,3.023,811,3.023,812,3.023,813,3.599,814,3.023,815,3.023,816,2.553,817,2.553,818,2.553,819,2.553,820,2.243,821,3.599,822,3.599,823,2.553,824,2.553,825,2.553,826,2.553,827,2.553,828,2.553,829,2.553]],["title/injectables/LogService.html",[104,1.114,179,1.04]],["body/injectables/LogService.html",[3,0.541,4,0.294,9,0.225,21,0.532,22,1.121,24,1.029,25,0.903,28,0.78,29,0.027,31,0.556,32,0.368,33,0.294,34,0.215,41,0.837,45,1.029,47,1.579,63,0.014,64,0.018,65,0.014,102,2.154,104,1.579,125,0.674,127,1.475,129,1.682,142,0.837,144,1.263,145,1.179,161,1.287,171,1.852,173,1.121,174,1.121,176,2.041,179,1.475,181,1.973,183,2.642,184,3.542,186,1.812,191,2.036,195,1.781,245,1.973,246,1.973,250,1.102,320,1.817,356,2.154,361,4.577,366,2.645,391,2.645,539,2.645,763,4.031,789,3.825,790,2.645,791,3.01,792,4.545,793,4.545,794,4.031,795,3.01,796,3.01,797,3.01,799,3.01,800,3.01,801,5.061,805,4.031,806,4.031,813,3.01,816,3.01,817,4.031,818,4.031,819,3.01,820,2.645,821,4.031,822,4.031,823,3.01,824,3.01,825,3.01,826,3.01,827,3.01,828,3.01,829,3.01,830,3.565,831,3.565]],["title/components/MainComponent.html",[0,0.637,53,1.114]],["body/components/MainComponent.html",[0,0.918,1,0.969,2,1.698,3,0.242,4,0.242,5,1.283,6,1.283,7,1.283,8,1.283,9,0.185,13,1.194,14,2.791,15,2.681,17,1.825,19,1.825,21,0.789,22,0.979,25,1.056,28,1.157,29,0.027,30,1.379,31,0.303,32,0.303,33,0.242,34,0.132,35,0.79,36,1.825,37,1.825,38,1.283,39,2.315,40,1.283,41,0.731,42,1.283,43,0.969,44,1.283,45,0.846,46,0.969,47,0.969,48,1.283,49,0.906,50,1.283,51,0.969,52,1.283,53,1.749,54,1.283,55,0.969,56,1.283,57,0.969,58,1.283,59,0.906,60,1.112,61,1.283,62,1.283,63,0.011,64,0.016,65,0.011,125,0.554,139,2.774,144,1.038,145,0.969,148,2.474,161,1.124,171,1.289,176,0.969,190,1.204,191,1.719,195,1.794,209,3.092,241,1.771,259,1.112,260,2.174,274,2.126,286,2.474,333,2.174,382,1.622,385,2.174,420,2.307,524,2.774,579,1.622,580,2.933,581,1.771,582,2.174,583,2.174,587,2.519,634,2.774,729,3.093,784,4.284,785,4.308,786,2.474,788,2.474,832,2.474,833,3.093,834,4.169,835,4.169,836,4.853,837,4.169,838,4.853,839,4.853,840,4.853,841,5.287,842,4.853,843,2.93,844,2.93,845,2.93,846,2.93,847,2.93,848,3.717,849,4.169,850,3.093,851,4.464,852,2.474,853,5.287,854,3.229,855,4.853,856,4.169,857,3.521,858,3.521,859,2.174,860,2.93,861,4.169,862,2.93,863,2.93,864,2.174,865,2.93,866,2.93,867,4.169,868,2.474,869,3.521,870,2.93,871,2.474,872,2.474,873,2.474,874,2.93,875,3.521,876,3.521,877,2.93,878,2.474,879,2.474,880,2.93,881,2.93,882,2.93,883,2.93]],["title/modules/MainModule.html",[66,0.972,884,2.24]],["body/modules/MainModule.html",[0,0.789,3,0.345,4,0.345,9,0.264,29,0.027,31,0.69,32,0.431,33,0.345,34,0.188,35,1.125,53,2.164,63,0.016,64,0.02,65,0.016,66,1.205,68,1.584,69,1.827,70,2.961,71,2.127,72,1.968,73,1.827,80,2.495,81,2.127,82,1.968,84,2.495,88,2.495,114,3.095,115,2.776,117,1.584,528,3.196,529,2.309,533,3.924,534,3.095,535,3.519,536,2.776,884,4.479,885,3.523,886,3.523,887,3.523,888,3.891,889,3.891,890,4.172,891,4.172,892,4.172,893,4.172,894,5.289,895,4.172,896,4.172]],["title/components/MapComponent.html",[0,0.637,55,1.114]],["body/components/MapComponent.html",[0,0.574,1,0.465,2,0.958,3,0.116,4,0.116,5,0.615,6,0.615,7,0.615,8,0.615,9,0.089,11,0.958,12,1.68,13,0.572,14,2.298,15,2.138,17,1.03,19,1.03,21,0.21,22,0.553,23,1.964,24,0.679,25,1.205,28,1.22,29,0.027,30,1.69,31,0.491,32,0.145,33,0.116,34,0.063,35,0.379,36,1.03,37,1.03,38,0.615,39,1.554,40,0.615,41,0.749,42,0.615,43,0.465,44,0.615,45,0.406,46,0.465,47,0.465,48,0.615,49,0.434,50,0.615,51,0.465,52,0.615,53,0.465,54,0.615,55,1.174,56,0.615,57,0.465,58,0.615,59,0.434,60,0.533,61,0.615,62,0.615,63,0.005,64,0.009,65,0.005,80,0.663,116,2.232,125,0.266,126,1.11,127,1.097,132,1.746,139,0.935,142,1.006,144,1.075,145,1.004,161,0.635,163,2.634,171,0.938,173,0.713,174,0.713,176,0.778,180,3.02,186,0.893,189,1.746,190,0.679,191,2.418,195,1.311,209,2.365,241,1.834,250,0.938,259,1.348,260,1.043,261,1.187,264,1.834,265,1.043,269,1.187,270,1.187,282,1.043,295,1.2,296,1.03,312,0.663,343,1.432,359,3.609,370,1.043,372,2.997,382,0.778,385,1.043,411,2.844,415,1.674,416,2.019,417,1.81,419,1.736,420,2.634,422,2.179,433,1.302,436,1.547,445,0.935,446,0.935,447,0.778,449,0.849,450,0.849,467,1.187,470,1.746,481,1.566,499,1.043,579,0.778,580,2.145,581,1.422,586,0.935,587,0.849,701,1.746,725,2.583,758,1.187,759,0.935,760,1.187,776,1.187,780,1.987,781,1.987,784,0.935,833,1.746,848,2.629,851,1.187,852,1.187,857,1.987,858,2.563,864,1.746,868,1.987,869,2.563,871,2.997,872,1.187,873,1.187,897,1.043,898,3.035,899,2.353,900,3.035,901,3.035,902,3.035,903,3.035,904,3.035,905,2.997,906,3.035,907,3.035,908,3.035,909,3.035,910,3.337,911,3.035,912,3.549,913,2.353,914,3.549,915,3.549,916,3.549,917,3.549,918,3.549,919,3.549,920,2.353,921,3.549,922,3.549,923,3.549,924,3.549,925,2.353,926,3.035,927,1.405,928,3.035,929,3.549,930,1.405,931,1.405,932,2.353,933,2.353,934,1.987,935,2.353,936,2.353,937,1.405,938,2.353,939,1.405,940,1.405,941,1.405,942,1.405,943,1.405,944,1.405,945,1.405,946,2.353,947,1.405,948,1.405,949,1.405,950,1.405,951,1.405,952,2.353,953,1.987,954,2.353,955,2.353,956,1.987,957,2.353,958,1.405,959,5.248,960,1.405,961,1.405,962,1.405,963,1.405,964,1.405,965,1.405,966,3.035,967,1.405,968,4.274,969,3.951,970,1.405,971,1.405,972,1.405,973,1.405,974,1.405,975,1.405,976,1.405,977,1.405,978,1.405,979,1.405,980,1.405,981,1.405,982,1.405,983,1.405,984,1.405,985,1.187,986,1.405,987,1.746,988,1.187,989,1.405,990,1.405,991,1.405,992,1.405,993,1.405,994,1.405,995,2.353,996,2.353,997,2.353,998,2.353,999,1.987,1000,2.353,1001,1.405,1002,1.405,1003,1.405,1004,1.405,1005,3.035,1006,2.353,1007,1.405,1008,1.405,1009,1.405,1010,1.187,1011,1.405,1012,1.405,1013,1.405,1014,1.405,1015,1.405,1016,2.353,1017,1.405,1018,1.405,1019,1.405,1020,1.405,1021,1.405,1022,1.405,1023,1.405,1024,1.405,1025,1.405,1026,1.405,1027,3.035,1028,4.274,1029,1.405,1030,1.187,1031,3.035,1032,1.405,1033,1.405,1034,1.405,1035,1.405,1036,1.405,1037,1.405,1038,1.405,1039,1.405,1040,2.353,1041,3.549,1042,1.405,1043,2.353,1044,2.353,1045,2.353,1046,1.405,1047,1.405,1048,1.405,1049,1.405,1050,1.405,1051,1.405,1052,1.405,1053,1.405,1054,1.405,1055,1.405,1056,1.405,1057,1.405,1058,1.405,1059,2.353,1060,1.405,1061,1.405,1062,1.405,1063,1.405,1064,1.405,1065,1.405,1066,1.405,1067,1.405,1068,1.405,1069,1.405,1070,1.405,1071,1.405,1072,1.405,1073,1.405,1074,1.405,1075,1.405,1076,1.405,1077,1.405,1078,1.405,1079,1.405,1080,1.405,1081,1.405,1082,1.405,1083,1.405,1084,2.353,1085,1.405,1086,1.405,1087,1.405,1088,1.405,1089,3.035,1090,1.405,1091,1.405,1092,1.405,1093,1.405,1094,1.405,1095,2.353,1096,2.353,1097,1.405,1098,1.405,1099,1.405,1100,1.405,1101,1.405,1102,1.405,1103,1.405,1104,3.035,1105,3.035,1106,2.353,1107,1.405,1108,2.353]],["title/injectables/MapDataService.html",[179,1.04,417,1.716]],["body/injectables/MapDataService.html",[3,0.2,4,0.2,9,0.154,21,0.362,22,0.853,25,1.186,28,1.296,29,0.027,30,1.864,31,0.499,32,0.251,33,0.2,34,0.109,41,0.763,63,0.009,64,0.014,65,0.009,117,2.063,125,0.823,127,1.123,129,1.714,131,2.696,142,0.987,144,1.713,145,1.6,160,2.563,161,0.98,163,3.338,166,2.696,173,1.023,174,1.023,176,1.202,179,1.123,181,1.343,183,2.011,185,3.068,186,2.063,189,3.587,190,1.049,191,2.306,195,1.906,245,1.343,246,1.343,250,1.494,274,1.238,295,1.853,312,1.145,349,2.418,397,2.418,398,2.196,417,1.853,419,1.959,436,1.238,447,1.343,448,1.801,470,2.696,481,3.217,521,3.068,522,3.068,686,3.587,701,2.696,751,4.395,848,2.418,1109,5.345,1110,2.05,1111,3.634,1112,3.068,1113,4.355,1114,4.355,1115,3.842,1116,4.355,1117,3.634,1118,3.634,1119,4.835,1120,4.835,1121,4.835,1122,3.634,1123,4.835,1124,4.835,1125,4.835,1126,2.427,1127,2.427,1128,3.634,1129,3.634,1130,3.634,1131,4.835,1132,2.427,1133,2.427,1134,2.427,1135,2.427,1136,4.835,1137,3.634,1138,4.835,1139,3.634,1140,2.427,1141,4.835,1142,3.634,1143,3.634,1144,3.634,1145,2.427,1146,3.634,1147,3.634,1148,2.427,1149,3.634,1150,3.068,1151,3.634,1152,2.427,1153,2.427,1154,2.427,1155,2.427,1156,2.427,1157,2.427,1158,3.634,1159,2.427,1160,2.427,1161,2.427,1162,2.427,1163,2.427,1164,2.427,1165,2.427,1166,2.427,1167,2.427,1168,2.427,1169,2.427,1170,2.427,1171,4.835,1172,2.427,1173,2.427,1174,2.427,1175,2.427,1176,2.427,1177,2.427,1178,2.427,1179,2.427,1180,2.427,1181,2.427]],["title/modules/MapModule.html",[66,0.972,888,2.034]],["body/modules/MapModule.html",[3,0.364,4,0.364,9,0.279,29,0.027,31,0.674,32,0.455,33,0.364,34,0.199,35,1.189,55,2.269,63,0.017,64,0.021,65,0.017,66,1.273,68,1.674,69,1.931,70,3.037,71,2.248,72,2.08,73,2.608,80,2.583,81,2.248,82,2.08,84,2.08,88,2.583,528,3.309,529,2.44,533,4.063,534,3.272,535,3.644,536,2.934,888,4,1182,3.724,1183,3.724,1184,3.724,1185,4.41,1186,4.41,1187,5.476,1188,4.41]],["title/interceptors/MockBackendInterceptor.html",[99,2.24,319,2.24]],["body/interceptors/MockBackendInterceptor.html",[3,0.265,4,0.265,9,0.203,11,1.809,21,0.479,22,1.043,24,0.926,25,0.84,28,0.702,29,0.027,31,0.617,32,0.331,33,0.265,34,0.2,41,0.778,46,1.469,63,0.012,64,0.017,65,0.012,94,2.133,97,3.079,98,3.079,104,2.027,105,1.635,116,1.809,125,0.606,142,0.778,160,1.512,161,0.865,173,1.043,174,1.043,176,1.977,179,1.575,250,1.373,291,2.955,292,2.707,293,2.82,294,2.133,295,2.598,296,2.683,297,4.303,298,4.303,299,4.081,300,3.324,301,3.75,302,4.303,303,4.877,304,4.645,305,4.877,307,4.303,308,3.66,309,2.707,310,4.303,311,4.645,312,1.512,313,2.133,314,2.707,315,2.458,316,2.133,317,4.303,318,3.391,319,2.955,320,1.635,321,2.707,322,2.707,323,2.707,324,2.707,325,5.046,326,2.707,327,4.303,328,4.303,329,2.707,330,3.295,331,3.75,332,2.707,333,2.379,334,2.707,335,2.707,336,2.379,337,2.133,338,2.707,339,2.707,340,2.707,341,2.707,342,2.133,343,1.512,344,2.707,345,2.707,346,2.707,347,2.379,348,1.938,349,2.133,350,2.379,351,1.635,352,2.379,353,2.707,354,2.707,1189,2.707,1190,3.206,1191,3.206]],["title/components/PanelComponent.html",[0,0.637,57,1.114]],["body/components/PanelComponent.html",[0,0.995,1,1.129,2,1.888,3,0.282,4,0.282,5,1.494,6,1.494,7,1.494,8,1.494,9,0.216,13,1.39,14,2.871,15,2.671,17,2.03,19,2.03,21,0.786,22,1.089,25,0.877,28,0.747,29,0.027,30,1.129,31,0.352,32,0.352,33,0.282,34,0.154,35,0.921,36,2.03,37,2.03,38,1.494,39,2.473,40,1.494,41,0.923,42,1.494,43,1.129,44,1.494,45,0.986,46,1.129,47,1.129,48,1.494,49,1.055,50,1.494,51,1.129,52,1.494,53,1.129,54,1.494,55,1.129,56,1.494,57,1.868,58,1.494,59,1.055,60,1.296,61,1.494,62,1.494,63,0.013,64,0.018,65,0.013,125,0.645,126,2.187,127,1.433,139,2.271,142,0.598,144,1.209,145,1.129,161,1.25,173,0.802,174,0.802,186,1.76,190,1.339,195,1.759,241,2.063,259,1.76,382,1.889,397,3.085,401,3.181,422,1.74,458,2.882,579,1.889,580,2.063,581,2.063,586,2.271,587,2.063,784,3.503,854,3.085,864,2.532,875,2.882,876,2.882,878,2.882,879,2.882,1192,2.882,1193,4.636,1194,4.636,1195,5.265,1196,4.636,1197,4.636,1198,4.636,1199,3.413,1200,3.413,1201,3.413,1202,3.413,1203,4.636,1204,3.413,1205,3.413,1206,3.413,1207,5.647,1208,5.647,1209,5.647,1210,5.647,1211,4.636,1212,4.636,1213,3.413,1214,5.647,1215,4.636]],["title/modules/PanelModule.html",[66,0.972,889,2.034]],["body/modules/PanelModule.html",[3,0.321,4,0.321,9,0.245,29,0.027,31,0.687,32,0.401,33,0.321,34,0.175,35,1.047,49,1.952,57,2.23,59,1.952,63,0.015,64,0.019,65,0.015,66,1.121,68,1.474,69,1.699,70,2.862,71,1.979,72,1.831,73,2.457,79,3.496,80,2.382,81,1.979,82,1.831,84,2.382,88,2.382,89,3.278,444,1.979,526,4.264,527,4.74,528,3.051,529,2.148,532,4.264,535,3.36,536,2.583,854,2.583,889,4.128,1216,3.278,1217,3.278,1218,3.278,1219,3.278,1220,3.817,1221,3.882,1222,3.882,1223,3.278,1224,3.278,1225,5.05,1226,3.882,1227,3.882,1228,5.05]],["title/modules/PanelRoutingModule.html",[66,0.972,1220,2.034]],["body/modules/PanelRoutingModule.html",[0,1.063,3,0.38,4,0.38,9,0.291,29,0.027,31,0.653,32,0.475,33,0.38,34,0.207,49,1.737,59,1.737,60,1.747,63,0.018,64,0.022,65,0.018,68,1.747,73,2.015,84,2.171,88,2.652,112,3.886,113,3.668,114,4.171,115,3.062,116,1.875,117,2.305,120,3.886,121,3.886,122,3.886,546,4.747,854,4.039,1220,3.397,1223,3.886,1224,3.886,1229,4.602,1230,6.071,1231,4.602]],["title/classes/Path.html",[34,0.152,117,1.278]],["body/classes/Path.html",[3,0.391,4,0.391,9,0.299,21,0.706,25,1.081,29,0.027,31,0.489,33,0.391,34,0.213,63,0.018,64,0.022,65,0.018,117,2.171,125,0.895,129,2.697,142,1.002,190,1.651,387,2.859,398,3.455,419,2.222,597,3.996,631,3.996,1112,4.828,1232,3.996,1233,4.828,1234,5.718,1235,5.718,1236,5.189,1237,5.189,1238,4.732,1239,4.732]],["title/modules/PipesModule.html",[66,0.972,542,2.034]],["body/modules/PipesModule.html",[3,0.381,4,0.381,9,0.292,29,0.027,31,0.627,32,0.476,33,0.381,34,0.208,35,1.244,63,0.018,64,0.022,65,0.018,66,1.332,68,1.751,69,2.019,70,3.098,71,2.352,72,2.176,73,2.661,80,2.656,81,2.352,82,2.176,84,2.176,88,2.656,157,4.168,528,3.402,529,2.553,542,4.038,1240,3.895,1241,3.895,1242,3.895,1243,4.612,1244,4.612]],["title/classes/Place.html",[34,0.152,419,1.114]],["body/classes/Place.html",[3,0.361,4,0.361,9,0.276,21,0.653,24,1.262,25,1.208,29,0.026,33,0.361,34,0.197,41,1.142,63,0.017,64,0.021,65,0.017,125,0.827,129,2.062,142,1.12,171,1.919,173,1.027,174,1.027,190,1.573,195,1.969,387,2.642,419,1.802,422,3.493,820,3.243,1233,3.691,1245,3.691,1246,4.372,1247,5.244,1248,5.396,1249,5.396,1250,4.372,1251,4.372,1252,6.211]],["title/components/TspComponent.html",[0,0.637,59,1.04]],["body/components/TspComponent.html",[0,0.816,1,0.792,2,1.464,3,0.198,4,0.198,5,1.048,6,1.048,7,1.048,8,1.048,9,0.151,11,1.464,12,2.39,13,0.975,14,2.672,15,2.486,17,1.574,19,1.574,21,0.357,22,0.844,23,3.103,24,0.691,25,1.228,28,1.291,29,0.027,30,1.702,31,0.558,32,0.247,33,0.198,34,0.108,35,0.645,36,1.574,37,1.574,38,1.048,39,2.102,40,1.048,41,0.902,42,1.048,43,0.792,44,1.048,45,0.691,46,0.792,47,0.792,48,1.048,49,0.739,50,1.048,51,0.792,52,1.048,53,0.792,54,1.048,55,0.792,56,1.048,57,0.792,58,1.048,59,1.484,60,1.954,61,1.048,62,1.048,63,0.009,64,0.014,65,0.009,104,1.908,105,1.22,125,0.452,126,1.696,127,1.111,135,1.775,138,2.392,142,1.053,144,1.53,145,1.428,155,2.172,160,1.696,171,1.111,173,1.014,174,1.014,190,1.038,191,1.701,195,1.894,250,1.111,274,1.833,296,1.574,343,1.129,351,1.22,382,1.324,386,3.876,389,1.592,398,2.172,399,1.989,400,3.562,401,3.11,402,2.667,403,2.667,404,3.818,405,2.667,406,3.204,407,3.204,408,3.204,409,3.204,410,2.667,411,3.424,412,4.01,413,2.667,414,2.172,415,2.264,416,3.194,417,2.447,419,1.189,420,1.324,422,2.623,424,1.592,426,3.204,433,1.324,435,1.775,436,1.22,438,1.592,439,1.775,441,1.775,443,1.775,444,1.22,445,1.592,446,1.592,449,1.446,450,1.446,454,1.775,474,1.775,545,3.036,548,3.036,555,5.28,556,2.021,557,2.021,558,2.021,559,2.021,560,2.021,561,2.021,562,2.021,563,2.021,564,2.021,565,2.021,566,2.021,567,2.021,568,2.021,569,2.667,570,2.021,571,2.021,572,2.021,573,2.021,574,2.021,577,3.036,579,1.324,580,2.609,581,1.446,582,2.667,583,3.562,584,3.036,585,2.021,586,2.392,587,2.172,588,1.775,589,2.021,1253,2.021,1254,3.036,1255,4.318,1256,3.595,1257,3.595,1258,2.393,1259,2.393,1260,2.393,1261,2.393,1262,2.393,1263,3.595]],["title/injectables/UserLocationService.html",[179,1.04,725,2.034]],["body/injectables/UserLocationService.html",[3,0.277,4,0.277,9,0.212,21,0.5,22,1.075,24,0.967,25,1.109,28,1.141,29,0.027,30,1.108,31,0.606,32,0.346,33,0.277,34,0.151,41,0.587,63,0.013,64,0.018,65,0.013,104,2.004,105,1.708,125,0.634,142,0.802,144,1.187,145,1.108,161,1.633,163,3.352,173,0.787,174,0.787,176,1.108,179,1.415,181,1.854,183,2.533,190,1.322,191,2.146,195,1.749,209,3.352,245,1.854,246,1.854,250,1.612,259,2.396,308,3.47,312,1.581,318,3.046,320,1.708,337,3.046,348,2.766,394,3.397,419,1.108,420,3.247,447,1.854,629,2.829,645,2.829,712,4.732,725,2.766,759,4.03,910,4.403,934,4.732,999,2.829,1010,4.954,1189,2.829,1264,5.114,1265,2.829,1266,4.578,1267,5.214,1268,5.214,1269,5.604,1270,4.578,1271,3.351,1272,4.578,1273,3.351,1274,5.604,1275,3.351,1276,3.351,1277,3.351,1278,3.351,1279,3.351,1280,3.351,1281,3.351,1282,3.351,1283,4.578,1284,4.578,1285,4.578,1286,3.351,1287,4.578,1288,2.829,1289,2.829,1290,3.351,1291,3.351]],["title/coverage.html",[1292,3.878]],["body/coverage.html",[0,1.177,1,0.979,9,0.187,10,2.5,29,0.027,34,0.239,43,0.979,45,0.855,47,1.389,49,0.915,51,0.979,53,0.979,55,0.979,57,0.979,59,0.915,63,0.011,64,0.016,65,0.011,95,2.197,97,2.949,98,2.949,99,2.795,104,0.979,117,1.124,124,2.5,142,0.519,156,1.789,157,1.789,159,2.5,179,1.733,180,1.97,182,3.116,224,2.197,225,2.197,231,2.197,250,0.915,259,2.528,265,2.197,282,2.197,291,1.97,293,3.668,294,3.248,313,3.248,315,1.638,316,1.97,319,1.97,351,2.141,355,2.5,356,1.789,357,2.5,386,1.789,388,3.116,389,1.97,390,2.5,399,1.638,415,1.397,417,1.509,419,0.979,451,2.197,544,2.5,591,2.5,592,2.5,689,1.97,691,2.5,697,2.5,725,1.789,759,1.97,785,4.445,789,1.97,790,3.116,832,2.5,850,2.197,859,3.621,897,3.116,987,2.197,1109,2.5,1110,2.5,1115,2.197,1192,2.5,1232,2.5,1245,2.5,1253,2.5,1264,2.5,1265,2.5,1292,2.5,1293,2.961,1294,2.961,1295,2.961,1296,2.961,1297,2.961,1298,2.961,1299,2.961,1300,2.961,1301,4.881,1302,4.881,1303,3.546,1304,6.715,1305,6.591,1306,2.5,1307,2.961,1308,2.961,1309,2.5,1310,5.991,1311,4.2,1312,5.311,1313,5.311,1314,2.5,1315,2.961,1316,5.394,1317,5.394,1318,2.5,1319,2.197,1320,2.5,1321,2.5,1322,2.5,1323,2.5,1324,2.5,1325,2.5,1326,2.5,1327,2.961,1328,2.961,1329,4.2,1330,4.2,1331,2.961,1332,2.961,1333,2.961,1334,2.5,1335,2.5,1336,2.5,1337,2.961,1338,2.961]],["title/dependencies.html",[69,1.772,1339,2.812]],["body/dependencies.html",[29,0.027,32,0.496,63,0.018,64,0.022,65,0.018,69,2.102,86,4.87,87,4.279,115,3.194,312,2.264,444,2.447,529,2.656,905,4.053,985,4.053,1340,4.8,1341,6.84,1342,4.8,1343,5.767,1344,4.8,1345,4.8,1346,4.8,1347,4.8,1348,4.8,1349,4.053,1350,4.8,1351,4.8,1352,4.8,1353,4.8,1354,4.8]],["title/miscellaneous/functions.html",[1355,1.871,1356,3.418]],["body/miscellaneous/functions.html",[21,0.729,28,1.068,29,0.025,41,0.855,63,0.019,64,0.022,65,0.019,95,4.322,97,2.95,98,3.521,104,1.615,160,2.303,161,1.316,173,1.146,174,1.146,293,2.701,294,3.877,296,2.551,299,3.622,300,2.95,318,3.248,337,3.248,347,3.622,348,3.521,349,3.248,350,3.622,352,3.622,388,3.622,424,3.248,451,4.62,481,3.248,1309,4.122,1355,3.248,1356,4.122,1357,4.122,1358,4.881,1359,4.881,1360,4.881,1361,4.881]],["title/index.html",[21,0.42,1362,2.375,1363,2.375]],["body/index.html",[9,0.168,15,1.585,29,0.026,46,0.881,63,0.01,64,0.015,65,0.01,96,2.248,127,1.202,129,1.256,131,4.576,161,1.451,162,3.285,163,2.799,166,3.992,186,2.341,211,1.975,213,2.887,229,3.752,295,3.094,296,2.768,300,3.251,336,1.975,348,3.251,360,2.248,401,1.609,503,2.778,517,3.285,524,2.589,595,3.285,632,2.248,633,1.975,634,1.772,635,2.248,651,2.248,686,4.169,833,1.975,848,1.772,953,2.248,956,2.248,1150,2.248,1254,3.883,1288,3.883,1289,2.248,1349,2.248,1364,3.891,1365,2.662,1366,2.662,1367,2.662,1368,2.662,1369,3.891,1370,2.662,1371,3.891,1372,2.662,1373,4.598,1374,2.662,1375,5.057,1376,3.891,1377,2.662,1378,2.662,1379,2.662,1380,2.662,1381,2.662,1382,2.662,1383,5.38,1384,6.562,1385,5.057,1386,3.891,1387,2.662,1388,3.891,1389,2.662,1390,2.662,1391,2.662,1392,3.891,1393,2.662,1394,4.598,1395,2.662,1396,2.662,1397,4.598,1398,2.662,1399,2.662,1400,2.662,1401,2.662,1402,2.662,1403,2.662,1404,3.891,1405,4.598,1406,2.662,1407,6.25,1408,2.662,1409,2.662,1410,2.662,1411,2.662,1412,2.662,1413,2.662,1414,3.891,1415,3.891,1416,2.662,1417,2.662,1418,2.662,1419,2.662,1420,5.38,1421,2.662,1422,2.662,1423,5.619,1424,2.662,1425,2.662,1426,5.619,1427,4.598,1428,2.662,1429,4.598,1430,2.662,1431,2.662,1432,2.662,1433,2.662,1434,5.057,1435,3.891,1436,3.891,1437,3.891,1438,2.662,1439,5.057,1440,2.662,1441,2.662,1442,2.662,1443,3.891,1444,2.662,1445,5.057,1446,4.598,1447,2.662,1448,3.891,1449,2.662,1450,3.891,1451,3.891,1452,4.598,1453,3.891,1454,2.662,1455,2.662,1456,2.662,1457,2.662,1458,2.662,1459,2.662,1460,2.662,1461,2.662,1462,2.662,1463,2.662,1464,2.662,1465,2.662,1466,3.891,1467,3.891,1468,2.662,1469,2.662,1470,2.662,1471,2.662,1472,2.662,1473,2.662,1474,2.662,1475,3.891,1476,2.662,1477,3.891,1478,2.662,1479,2.662,1480,3.891,1481,2.662,1482,2.662,1483,2.662,1484,2.662,1485,2.662,1486,2.662,1487,2.662,1488,2.662,1489,2.662,1490,2.662,1491,2.662,1492,2.662,1493,2.662,1494,2.662,1495,3.891,1496,2.662,1497,2.662,1498,2.662,1499,2.662,1500,2.662,1501,2.662,1502,2.662]],["title/license.html",[1362,2.375,1363,2.375,1503,2.375]],["body/license.html",[29,0.021,63,0.017,64,0.021,65,0.017,82,2.049,588,3.222,633,3.222,634,2.89,751,3.222,850,3.222,1030,3.667,1319,3.222,1503,3.667,1504,4.343,1505,5.916,1506,4.343,1507,5.425,1508,5.425,1509,4.343,1510,4.343,1511,4.343,1512,4.343,1513,4.343,1514,4.343,1515,5.425,1516,6.728,1517,4.343,1518,4.343,1519,4.343,1520,5.916,1521,4.343,1522,5.425,1523,4.343,1524,4.343,1525,5.425,1526,4.343,1527,4.343,1528,4.343,1529,4.343,1530,4.343,1531,4.343,1532,4.343,1533,5.425,1534,4.343,1535,4.343,1536,4.343,1537,4.343,1538,4.343,1539,4.343,1540,5.425,1541,5.425,1542,4.343,1543,4.343,1544,4.343,1545,4.343,1546,4.343,1547,4.343,1548,4.343,1549,4.343,1550,4.343,1551,4.343,1552,4.343,1553,4.343,1554,4.343,1555,4.343,1556,4.343,1557,4.343,1558,4.343,1559,4.343,1560,4.343,1561,4.343,1562,4.343,1563,4.343,1564,4.343,1565,4.343,1566,4.343,1567,4.343,1568,4.343,1569,4.343]],["title/modules.html",[68,1.744]],["body/modules.html",[29,0.022,63,0.019,64,0.022,65,0.019,67,3.288,68,1.876,78,2.986,79,2.735,87,4.976,542,2.986,884,3.288,888,2.986,889,2.986,1220,2.986,1570,6.707,1571,6.707,1572,6.829,1573,5.868,1574,5.868]],["title/overview.html",[1575,3.878]],["body/overview.html",[1,2.097,2,1.489,29,0.027,35,0.986,43,2.097,45,1.574,49,1.684,51,2.097,53,1.803,55,2.097,57,2.097,59,1.684,63,0.014,64,0.019,65,0.014,66,1.055,67,4.336,68,1.388,69,1.601,70,1.864,71,1.864,72,1.724,73,1.601,74,3.087,75,3.087,76,3.087,77,3.087,78,3.294,79,3.697,80,2.29,81,1.864,82,1.724,113,2.209,156,2.209,157,3.831,181,2.023,264,2.209,274,2.475,278,3.087,284,3.087,387,2.209,513,3.087,514,3.087,515,3.087,542,3.652,689,2.432,859,2.712,884,4.284,885,3.087,886,3.087,887,3.087,888,3.754,889,4.081,1182,3.087,1183,3.087,1184,3.087,1216,3.087,1217,3.087,1218,3.087,1219,3.087,1220,3.294,1240,3.087,1241,3.087,1242,3.087,1306,3.087,1575,3.087]],["title/routes.html",[113,2.775]],["body/routes.html",[29,0.024,63,0.021,64,0.024,65,0.021,113,3.294]],["title/miscellaneous/variables.html",[1355,1.871,1576,3.418]],["body/miscellaneous/variables.html",[21,0.375,29,0.027,41,0.778,60,0.953,63,0.01,64,0.014,65,0.01,110,2.764,116,2.002,117,2.221,142,1.14,144,2.329,145,2.175,171,1.151,176,0.83,182,1.862,186,1.414,211,1.862,213,1.862,224,2.764,225,2.764,227,2.119,228,3.751,229,1.862,230,2.119,231,2.764,232,2.119,233,3.751,234,3.751,235,3.751,236,2.119,237,2.119,238,2.119,239,2.119,240,2.119,241,1.516,242,2.119,243,3.145,244,2.119,259,1.414,264,1.516,274,1.279,293,2.061,295,1.899,313,3.66,315,1.389,316,2.478,342,3.494,399,2.061,419,0.83,422,2.506,436,1.279,503,1.516,504,1.862,524,2.478,638,2.119,660,3.145,692,4.434,693,4.434,729,3.647,777,2.119,897,1.862,987,2.764,988,2.119,1115,2.764,1236,4.645,1237,4.645,1247,3.751,1248,3.751,1249,3.751,1303,2.119,1314,2.119,1316,2.119,1317,5.274,1318,5.046,1319,4.512,1320,5.046,1321,3.751,1322,3.751,1323,3.751,1324,3.751,1325,3.751,1326,3.751,1334,2.119,1335,2.119,1336,2.119,1355,1.67,1357,5.21,1576,2.119,1577,2.509,1578,2.509,1579,2.509,1580,2.509,1581,2.509,1582,2.509,1583,3.725,1584,4.442,1585,3.725,1586,2.509,1587,3.725,1588,2.509,1589,3.725,1590,3.725,1591,3.725,1592,2.509,1593,2.509,1594,2.509,1595,2.509,1596,2.509,1597,2.509,1598,2.509,1599,5.695,1600,2.509,1601,2.509,1602,2.509,1603,2.509,1604,2.509,1605,2.509,1606,2.509,1607,2.509,1608,2.509,1609,4.442,1610,4.442,1611,4.442,1612,2.509,1613,2.509,1614,3.725]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":259,"title":{},"body":{"injectables/DrawerService.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.5",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":240,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["0.6",{"_index":244,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["0.7",{"_index":238,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["0.8.29",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":236,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["0/1",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1203,"title":{},"body":{"components/PanelComponent.html":{}}}],["1",{"_index":274,"title":{},"body":{"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"components/MainComponent.html":{},"injectables/MapDataService.html":{},"components/TspComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).tostring",{"_index":478,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["1)[0",{"_index":464,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["1.5s",{"_index":862,"title":{},"body":{"components/MainComponent.html":{}}}],["1/1",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["1/20",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":265,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["100",{"_index":785,"title":{},"body":{"components/InputComponent.html":{},"components/MainComponent.html":{},"coverage.html":{}}}],["1000",{"_index":856,"title":{},"body":{"components/MainComponent.html":{}}}],["10px",{"_index":869,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["127.0.0.1",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":1104,"title":{},"body":{"components/MapComponent.html":{}}}],["16",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["188",{"_index":235,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["19",{"_index":633,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{},"license.html":{}}}],["1].endplace",{"_index":1170,"title":{},"body":{"injectables/MapDataService.html":{}}}],["1].endplace.id",{"_index":1168,"title":{},"body":{"injectables/MapDataService.html":{}}}],["1].replace(\"city",{"_index":477,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["1px",{"_index":1204,"title":{},"body":{"components/PanelComponent.html":{}}}],["1rem",{"_index":582,"title":{},"body":{"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/TspComponent.html":{}}}],["1s",{"_index":883,"title":{},"body":{"components/MainComponent.html":{}}}],["2",{"_index":264,"title":{},"body":{"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"components/MapComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.348773",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.6.5",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":286,"title":{},"body":{"injectables/DrawerService.html":{},"components/MainComponent.html":{}}}],["200",{"_index":329,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["2018",{"_index":1507,"title":{},"body":{"license.html":{}}}],["20px",{"_index":1108,"title":{},"body":{"components/MapComponent.html":{}}}],["25",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":243,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["25px",{"_index":1100,"title":{},"body":{"components/MapComponent.html":{}}}],["2rem",{"_index":870,"title":{},"body":{"components/MainComponent.html":{}}}],["3",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/32",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":878,"title":{},"body":{"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["33",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":1215,"title":{},"body":{"components/PanelComponent.html":{}}}],["4",{"_index":278,"title":{},"body":{"injectables/DrawerService.html":{},"overview.html":{}}}],["4.722300",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":340,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["42",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":1213,"title":{},"body":{"components/PanelComponent.html":{}}}],["48.856783",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.119457",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.762460",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":873,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["5",{"_index":859,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{},"overview.html":{}}}],["50",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":333,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"components/MainComponent.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["56px",{"_index":882,"title":{},"body":{"components/MainComponent.html":{}}}],["5rem",{"_index":590,"title":{},"body":{"components/GpsComponent.html":{}}}],["6",{"_index":282,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["6.175982",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.0",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["6/14",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["640px",{"_index":879,"title":{},"body":{"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["7",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["7.2.8",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["7.3.3",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":284,"title":{},"body":{"injectables/DrawerService.html":{},"overview.html":{}}}],["81",{"_index":234,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":1306,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["90",{"_index":860,"title":{},"body":{"components/MainComponent.html":{}}}],["900px",{"_index":877,"title":{},"body":{"components/MainComponent.html":{}}}],["_",{"_index":761,"title":{},"body":{"components/InputComponent.html":{}}}],["_value",{"_index":719,"title":{},"body":{"components/InputComponent.html":{}}}],["above",{"_index":1539,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":853,"title":{},"body":{"components/MainComponent.html":{}}}],["abstract",{"_index":400,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["accessors",{"_index":724,"title":{},"body":{"components/InputComponent.html":{}}}],["accu.concat(x",{"_index":666,"title":{},"body":{"injectables/HttpService.html":{}}}],["action",{"_index":588,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{},"license.html":{}}}],["active",{"_index":1211,"title":{},"body":{"components/PanelComponent.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["add_circle",{"_index":577,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["addcity",{"_index":406,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["addpath",{"_index":1117,"title":{},"body":{"injectables/MapDataService.html":{}}}],["addpath(...paths",{"_index":1159,"title":{},"body":{"injectables/MapDataService.html":{}}}],["addpath(paths",{"_index":1126,"title":{},"body":{"injectables/MapDataService.html":{}}}],["addpointerslocations",{"_index":1118,"title":{},"body":{"injectables/MapDataService.html":{}}}],["addpointerslocations(...positions",{"_index":1172,"title":{},"body":{"injectables/MapDataService.html":{}}}],["addpointerslocations(positions",{"_index":1132,"title":{},"body":{"injectables/MapDataService.html":{}}}],["affiche",{"_index":128,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ajoute",{"_index":1128,"title":{},"body":{"injectables/MapDataService.html":{}}}],["ajouter",{"_index":1131,"title":{},"body":{"injectables/MapDataService.html":{}}}],["and/or",{"_index":1531,"title":{},"body":{"license.html":{}}}],["android",{"_index":1434,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1380,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":1387,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":529,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["angular/compiler",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":444,"title":{},"body":{"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"modules/PanelModule.html":{},"components/TspComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":541,"title":{},"body":{"modules/GlobalModule.html":{}}}],["angular/material/button",{"_index":534,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{}}}],["angular/material/dialog",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"classes/Log.html":{},"injectables/LogService.html":{}}}],["angular/material/icon",{"_index":536,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{}}}],["angular/material/input",{"_index":538,"title":{},"body":{"modules/GlobalModule.html":{}}}],["angular/material/tabs",{"_index":1226,"title":{},"body":{"modules/PanelModule.html":{}}}],["angular/material/toolbar",{"_index":895,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tooltip",{"_index":1188,"title":{},"body":{"modules/MapModule.html":{}}}],["angular/platform",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{},"modules/PanelRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":317,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["api.objecttoreturn.call(undefined",{"_index":326,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["apirest",{"_index":316,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apirest.find(apirest",{"_index":321,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["apirest.method",{"_index":324,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["app.component",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["apparaît",{"_index":1393,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appeles",{"_index":594,"title":{},"body":{"injectables/HttpService.html":{}}}],["appmodule",{"_index":67,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":78,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appuye",{"_index":1487,"title":{},"body":{"index.html":{}}}],["après",{"_index":1484,"title":{},"body":{"index.html":{}}}],["apt",{"_index":1401,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1567,"title":{},"body":{"license.html":{}}}],["arrivelcity",{"_index":493,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["arrow",{"_index":1102,"title":{},"body":{"components/MapComponent.html":{}}}],["aserror",{"_index":795,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["asinfo",{"_index":796,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["associated",{"_index":1517,"title":{},"body":{"license.html":{}}}],["aswarn",{"_index":797,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["async",{"_index":411,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["au",{"_index":595,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["aussi",{"_index":1451,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1557,"title":{},"body":{"license.html":{}}}],["auto",{"_index":587,"title":{},"body":{"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["automatiquement",{"_index":1444,"title":{},"body":{"index.html":{}}}],["available",{"_index":1574,"title":{},"body":{"modules.html":{}}}],["avant",{"_index":1458,"title":{},"body":{"index.html":{}}}],["avec",{"_index":360,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"index.html":{}}}],["await",{"_index":499,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["backend",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["backend/api/api.ts",{"_index":1314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["backend/api/apirestinterface.ts",{"_index":691,"title":{},"body":{"interfaces/IApiRest.html":{},"coverage.html":{}}}],["backend/api/mock",{"_index":1316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["backend/mock",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["background",{"_index":864,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{}}}],["bas",{"_index":1482,"title":{},"body":{"index.html":{}}}],["bien",{"_index":1409,"title":{},"body":{"index.html":{}}}],["block",{"_index":581,"title":{},"body":{"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["blue1",{"_index":232,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["blue2",{"_index":237,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["blue3",{"_index":239,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":325,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["bonus",{"_index":1465,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":148,"title":{},"body":{"components/ButtonComponent.html":{},"components/MainComponent.html":{}}}],["bootstrap",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["border",{"_index":871,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["bottom",{"_index":867,"title":{},"body":{"components/MainComponent.html":{}}}],["bouton",{"_index":130,"title":{},"body":{"components/ButtonComponent.html":{}}}],["box",{"_index":1201,"title":{},"body":{"components/PanelComponent.html":{}}}],["browse",{"_index":1572,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1397,"title":{},"body":{"index.html":{}}}],["build:apps",{"_index":1455,"title":{},"body":{"index.html":{}}}],["build:prod",{"_index":1454,"title":{},"body":{"index.html":{}}}],["build:prod(ou",{"_index":1457,"title":{},"body":{"index.html":{}}}],["build:prod:mock",{"_index":1450,"title":{},"body":{"index.html":{}}}],["button",{"_index":135,"title":{},"body":{"components/ButtonComponent.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["button'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["button.component.html",{"_index":137,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":136,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button/button.component",{"_index":530,"title":{},"body":{"modules/GlobalModule.html":{}}}],["buttoncomponent",{"_index":43,"title":{"components/ButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":1506,"title":{},"body":{"license.html":{}}}],["c'est",{"_index":331,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["calcul",{"_index":545,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["calculer",{"_index":1263,"title":{},"body":{"components/TspComponent.html":{}}}],["canvas",{"_index":900,"title":{},"body":{"components/MapComponent.html":{}}}],["canvastmp",{"_index":901,"title":{},"body":{"components/MapComponent.html":{}}}],["capitalize",{"_index":168,"title":{},"body":{"pipes/CapitalizePipe.html":{},"components/InputComponent.html":{}}}],["capitalize.pipe",{"_index":1244,"title":{},"body":{"modules/PipesModule.html":{}}}],["capitalizepipe",{"_index":157,"title":{"pipes/CapitalizePipe.html":{}},"body":{"pipes/CapitalizePipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["carte",{"_index":189,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{}}}],["cas",{"_index":297,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["catch",{"_index":1022,"title":{},"body":{"components/MapComponent.html":{}}}],["catcherror",{"_index":627,"title":{},"body":{"injectables/HttpService.html":{}}}],["catcherror(err",{"_index":659,"title":{},"body":{"injectables/HttpService.html":{}}}],["ce",{"_index":1289,"title":{},"body":{"injectables/UserLocationService.html":{},"index.html":{}}}],["champs",{"_index":698,"title":{},"body":{"components/InputComponent.html":{}}}],["change",{"_index":1113,"title":{},"body":{"injectables/MapDataService.html":{}}}],["changement",{"_index":1137,"title":{},"body":{"injectables/MapDataService.html":{}}}],["charge",{"_index":1512,"title":{},"body":{"license.html":{}}}],["charleville",{"_index":1318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["chemin",{"_index":398,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/MapDataService.html":{},"classes/Path.html":{},"components/TspComponent.html":{}}}],["chemin(s",{"_index":1130,"title":{},"body":{"injectables/MapDataService.html":{}}}],["chemins",{"_index":660,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":1016,"title":{},"body":{"components/MapComponent.html":{}}}],["choisis",{"_index":955,"title":{},"body":{"components/MapComponent.html":{}}}],["circle",{"_index":152,"title":{},"body":{"components/ButtonComponent.html":{}}}],["cities",{"_index":399,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cities.filter((city",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city",{"_index":470,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{}}}],["city.name",{"_index":783,"title":{},"body":{"components/InputComponent.html":{}}}],["city.name.indexof(req.params.get('name",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["citycontrolname",{"_index":479,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["citypushed",{"_index":1114,"title":{},"body":{"injectables/MapDataService.html":{}}}],["citytoremove",{"_index":441,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["cl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"index.html":{}}}],["claim",{"_index":1560,"title":{},"body":{"license.html":{}}}],["class",{"_index":34,"title":{"classes/FormPanelUtils.html":{},"classes/Log.html":{},"classes/Path.html":{},"classes/Place.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["classe",{"_index":391,"title":{},"body":{"classes/FormPanelUtils.html":{},"classes/Log.html":{},"injectables/LogService.html":{}}}],["classes",{"_index":387,"title":{},"body":{"classes/FormPanelUtils.html":{},"classes/Log.html":{},"classes/Path.html":{},"classes/Place.html":{},"overview.html":{}}}],["clear",{"_index":196,"title":{},"body":{"injectables/DrawerService.html":{}}}],["clearmap",{"_index":912,"title":{},"body":{"components/MapComponent.html":{}}}],["cli",{"_index":1381,"title":{},"body":{"index.html":{}}}],["client",{"_index":1441,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1388,"title":{},"body":{"index.html":{}}}],["close",{"_index":781,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["closepanel",{"_index":839,"title":{},"body":{"components/MainComponent.html":{}}}],["closepopup",{"_index":1107,"title":{},"body":{"components/MapComponent.html":{}}}],["cluster_appmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_globalmodule",{"_index":513,"title":{},"body":{"modules/GlobalModule.html":{},"overview.html":{}}}],["cluster_globalmodule_declarations",{"_index":514,"title":{},"body":{"modules/GlobalModule.html":{},"overview.html":{}}}],["cluster_globalmodule_exports",{"_index":515,"title":{},"body":{"modules/GlobalModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":885,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_declarations",{"_index":886,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_imports",{"_index":887,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mapmodule",{"_index":1182,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declarations",{"_index":1183,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_exports",{"_index":1184,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_panelmodule",{"_index":1216,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_declarations",{"_index":1217,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_exports",{"_index":1219,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_imports",{"_index":1218,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":1240,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1241,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1242,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["code",{"_index":1467,"title":{},"body":{"index.html":{}}}],["color",{"_index":139,"title":{},"body":{"components/ButtonComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{}}}],["colors",{"_index":231,"title":{},"body":{"injectables/DrawerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colors.blue1",{"_index":276,"title":{},"body":{"injectables/DrawerService.html":{}}}],["colors.blue2",{"_index":283,"title":{},"body":{"injectables/DrawerService.html":{}}}],["colors.blue3",{"_index":285,"title":{},"body":{"injectables/DrawerService.html":{}}}],["colors.white",{"_index":281,"title":{},"body":{"injectables/DrawerService.html":{}}}],["column",{"_index":585,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["commandes",{"_index":1435,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":528,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{}}}],["compile",{"_index":1404,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1412,"title":{},"body":{"index.html":{}}}],["compiler",{"_index":1445,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"modules/PanelRoutingModule.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"overview.html":{}}}],["comportant",{"_index":392,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["composant",{"_index":126,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["composant/global/erreur",{"_index":816,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["composant/global/global.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["composant/main/main.module#mainmodule",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["composant/main/map/icones/icones",{"_index":226,"title":{},"body":{"injectables/DrawerService.html":{}}}],["conditions",{"_index":1538,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":1428,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1568,"title":{},"body":{"license.html":{}}}],["connu",{"_index":338,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["console[this.flags](this.message",{"_index":829,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["const",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"modules/PanelRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/DrawerService.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["constructor(dialog",{"_index":800,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["constructor(dialogref",{"_index":368,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["constructor(http",{"_index":414,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{}}}],["constructor(id",{"_index":1250,"title":{},"body":{"classes/Place.html":{}}}],["constructor(logservice",{"_index":1189,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{}}}],["constructor(private",{"_index":320,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{}}}],["constructor(protected",{"_index":453,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["constructor(public",{"_index":820,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{},"classes/Place.html":{}}}],["constructor(userlocationservice",{"_index":927,"title":{},"body":{"components/MapComponent.html":{}}}],["container",{"_index":902,"title":{},"body":{"components/MapComponent.html":{}}}],["context",{"_index":220,"title":{},"body":{"injectables/DrawerService.html":{}}}],["contient",{"_index":1193,"title":{},"body":{"components/PanelComponent.html":{}}}],["contract",{"_index":1564,"title":{},"body":{"license.html":{}}}],["control.value",{"_index":466,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["controls",{"_index":460,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["controls.find(control",{"_index":465,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["controls.length",{"_index":462,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["controls.push(controls.splice(1",{"_index":463,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["controlvalueaccessor",{"_index":702,"title":{},"body":{"components/InputComponent.html":{}}}],["copier",{"_index":1459,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1533,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1515,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1505,"title":{},"body":{"license.html":{}}}],["cordova/www",{"_index":1464,"title":{},"body":{"index.html":{}}}],["core",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["cornflowerblue",{"_index":865,"title":{},"body":{"components/MainComponent.html":{}}}],["couleurs",{"_index":227,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":1292,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createpopup",{"_index":913,"title":{},"body":{"components/MapComponent.html":{}}}],["createpopup(name",{"_index":938,"title":{},"body":{"components/MapComponent.html":{}}}],["createrequestgps",{"_index":598,"title":{},"body":{"injectables/HttpService.html":{}}}],["createrequestgps(positions",{"_index":608,"title":{},"body":{"injectables/HttpService.html":{}}}],["createrequesttsp",{"_index":599,"title":{},"body":{"injectables/HttpService.html":{}}}],["createrequesttsp(positions",{"_index":610,"title":{},"body":{"injectables/HttpService.html":{}}}],["createtuple",{"_index":600,"title":{},"body":{"injectables/HttpService.html":{}}}],["createtuple(positions",{"_index":612,"title":{},"body":{"injectables/HttpService.html":{}}}],["crit",{"_index":1489,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":192,"title":{},"body":{"injectables/DrawerService.html":{}}}],["current",{"_index":401,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"index.html":{}}}],["current_position",{"_index":1011,"title":{},"body":{"components/MapComponent.html":{}}}],["custom_elements_schema",{"_index":527,"title":{},"body":{"modules/GlobalModule.html":{},"modules/PanelModule.html":{}}}],["d'afficher",{"_index":358,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["d'entrées",{"_index":699,"title":{},"body":{"components/InputComponent.html":{}}}],["d'erreur",{"_index":362,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["d'un",{"_index":547,"title":{},"body":{"components/GpsComponent.html":{}}}],["d'une",{"_index":1142,"title":{},"body":{"injectables/MapDataService.html":{}}}],["d'écouter",{"_index":1136,"title":{},"body":{"injectables/MapDataService.html":{}}}],["damages",{"_index":1561,"title":{},"body":{"license.html":{}}}],["dans",{"_index":295,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"modules/GlobalModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":366,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{}}}],["data.message",{"_index":379,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["data.service",{"_index":446,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["data.service.ts",{"_index":1110,"title":{},"body":{"injectables/MapDataService.html":{},"coverage.html":{}}}],["data.service.ts:13",{"_index":1156,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:14",{"_index":1157,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:15",{"_index":1154,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:16",{"_index":1155,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:22",{"_index":1127,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:37",{"_index":1133,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:45",{"_index":1148,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:50",{"_index":1152,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:55",{"_index":1153,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:63",{"_index":1135,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:67",{"_index":1134,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:74",{"_index":1140,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:82",{"_index":1145,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.ts",{"_index":1317,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data:image/svg+xml;utf8",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["de",{"_index":161,"title":{},"body":{"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"injectables/HttpService.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["deal",{"_index":1519,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1569,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1447,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["decoration",{"_index":874,"title":{},"body":{"components/MainComponent.html":{}}}],["decorators",{"_index":372,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"components/MapComponent.html":{}}}],["deep.mat",{"_index":1208,"title":{},"body":{"components/PanelComponent.html":{}}}],["default",{"_index":144,"title":{},"body":{"components/ButtonComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/variables.html":{}}}],["defaultplace",{"_index":1268,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["defined",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["delete",{"_index":696,"title":{},"body":{"interfaces/IApiRest.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["depuis",{"_index":1143,"title":{},"body":{"injectables/MapDataService.html":{}}}],["des",{"_index":503,"title":{},"body":{"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":125,"title":{},"body":{"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["dessiner",{"_index":185,"title":{},"body":{"injectables/DrawerService.html":{},"injectables/MapDataService.html":{}}}],["dessins",{"_index":230,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["dessus",{"_index":1436,"title":{},"body":{"index.html":{}}}],["deux",{"_index":1234,"title":{},"body":{"classes/Path.html":{}}}],["dev",{"_index":1405,"title":{},"body":{"index.html":{}}}],["devriez",{"_index":1410,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":793,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["dialogref",{"_index":367,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["différentes",{"_index":187,"title":{},"body":{"injectables/DrawerService.html":{}}}],["différents",{"_index":700,"title":{},"body":{"components/InputComponent.html":{}}}],["direction",{"_index":584,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["directions",{"_index":849,"title":{},"body":{"components/MainComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["directives",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["disabled",{"_index":140,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{}}}],["display",{"_index":580,"title":{},"body":{"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["dispo",{"_index":687,"title":{},"body":{"injectables/HttpService.html":{}}}],["disponible",{"_index":1285,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["disponibles",{"_index":228,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["distribute",{"_index":1529,"title":{},"body":{"license.html":{}}}],["doc",{"_index":863,"title":{},"body":{"components/MainComponent.html":{}}}],["document.getelementbyid(\"mapbox",{"_index":1021,"title":{},"body":{"components/MapComponent.html":{}}}],["documentation",{"_index":850,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["données",{"_index":1138,"title":{},"body":{"injectables/MapDataService.html":{}}}],["dossier",{"_index":1463,"title":{},"body":{"index.html":{}}}],["down",{"_index":1103,"title":{},"body":{"components/MapComponent.html":{}}}],["drawerservice",{"_index":180,"title":{"injectables/DrawerService.html":{}},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["drawlocation",{"_index":914,"title":{},"body":{"components/MapComponent.html":{}}}],["drawmap",{"_index":915,"title":{},"body":{"components/MapComponent.html":{}}}],["drawpaths",{"_index":916,"title":{},"body":{"components/MapComponent.html":{}}}],["drawpositions",{"_index":917,"title":{},"body":{"components/MapComponent.html":{}}}],["drawuserlocation",{"_index":918,"title":{},"body":{"components/MapComponent.html":{}}}],["droite",{"_index":1483,"title":{},"body":{"index.html":{}}}],["du",{"_index":1254,"title":{},"body":{"components/TspComponent.html":{},"index.html":{}}}],["dynamic",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["défini",{"_index":1501,"title":{},"body":{"index.html":{}}}],["définir",{"_index":347,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/functions.html":{}}}],["déj",{"_index":1360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["démarre",{"_index":1406,"title":{},"body":{"index.html":{}}}],["dépendances",{"_index":1392,"title":{},"body":{"index.html":{}}}],["e",{"_index":1023,"title":{},"body":{"components/MapComponent.html":{}}}],["electron",{"_index":1439,"title":{},"body":{"index.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["elementref",{"_index":959,"title":{},"body":{"components/MapComponent.html":{}}}],["emptybackendinterceptor",{"_index":291,"title":{"interceptors/EmptyBackendInterceptor.html":{}},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{}}}],["en",{"_index":166,"title":{},"body":{"pipes/CapitalizePipe.html":{},"injectables/MapDataService.html":{},"index.html":{}}}],["end",{"_index":211,"title":{},"body":{"injectables/DrawerService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["end.y",{"_index":290,"title":{},"body":{"injectables/DrawerService.html":{}}}],["endpixels",{"_index":1084,"title":{},"body":{"components/MapComponent.html":{}}}],["endplace",{"_index":1236,"title":{},"body":{"classes/Path.html":{},"miscellaneous/variables.html":{}}}],["entre",{"_index":1112,"title":{},"body":{"injectables/MapDataService.html":{},"classes/Path.html":{}}}],["entrer",{"_index":1492,"title":{},"body":{"index.html":{}}}],["entrycomponents",{"_index":525,"title":{},"body":{"modules/GlobalModule.html":{}}}],["environment",{"_index":313,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.isserveurmock",{"_index":353,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["environment.urlserveur",{"_index":344,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["environments/environment",{"_index":314,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["err",{"_index":645,"title":{},"body":{"injectables/HttpService.html":{},"injectables/UserLocationService.html":{}}}],["err).aserror().and.log",{"_index":688,"title":{},"body":{"injectables/HttpService.html":{}}}],["err).aserror().showpopup().and.log",{"_index":652,"title":{},"body":{"injectables/HttpService.html":{}}}],["err.message).aswarn().and.log",{"_index":1286,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["erreur",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"index.html":{}}}],["erreurpopupcomponent",{"_index":45,"title":{"components/ErreurPopUpComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["error",{"_index":805,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["error(\"ville",{"_index":509,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["essential",{"_index":1402,"title":{},"body":{"index.html":{}}}],["est",{"_index":1427,"title":{},"body":{"index.html":{}}}],["et",{"_index":131,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/MapDataService.html":{},"index.html":{}}}],["event",{"_index":1030,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["event.clienty",{"_index":1033,"title":{},"body":{"components/MapComponent.html":{}}}],["eventemitter",{"_index":734,"title":{},"body":{"components/InputComponent.html":{}}}],["example",{"_index":597,"title":{},"body":{"injectables/HttpService.html":{},"classes/Path.html":{}}}],["executer",{"_index":1383,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["exports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["express",{"_index":1548,"title":{},"body":{"license.html":{}}}],["extends",{"_index":548,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["extentions",{"_index":1477,"title":{},"body":{"index.html":{}}}],["f1",{"_index":1488,"title":{},"body":{"index.html":{}}}],["facilitent",{"_index":1469,"title":{},"body":{"index.html":{}}}],["faire",{"_index":685,"title":{},"body":{"injectables/HttpService.html":{}}}],["false",{"_index":729,"title":{},"body":{"components/InputComponent.html":{},"components/MainComponent.html":{},"miscellaneous/variables.html":{}}}],["faut",{"_index":1456,"title":{},"body":{"index.html":{}}}],["fenetre",{"_index":833,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["fenêtre",{"_index":1480,"title":{},"body":{"index.html":{}}}],["ferme",{"_index":1418,"title":{},"body":{"index.html":{}}}],["fermerpopup",{"_index":919,"title":{},"body":{"components/MapComponent.html":{}}}],["fichier",{"_index":1429,"title":{},"body":{"index.html":{}}}],["fichiers",{"_index":1452,"title":{},"body":{"index.html":{}}}],["field",{"_index":787,"title":{},"body":{"components/InputComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1518,"title":{},"body":{"license.html":{}}}],["fill",{"_index":881,"title":{},"body":{"components/MainComponent.html":{}}}],["filtercities",{"_index":711,"title":{},"body":{"components/InputComponent.html":{}}}],["filtercities(value",{"_index":736,"title":{},"body":{"components/InputComponent.html":{}}}],["filtered_cities",{"_index":708,"title":{},"body":{"components/InputComponent.html":{}}}],["fitness",{"_index":1553,"title":{},"body":{"license.html":{}}}],["flags",{"_index":794,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["flat",{"_index":150,"title":{},"body":{"components/ButtonComponent.html":{}}}],["flex",{"_index":583,"title":{},"body":{"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/TspComponent.html":{}}}],["float",{"_index":866,"title":{},"body":{"components/MainComponent.html":{}}}],["fn",{"_index":438,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{}}}],["fn.call(this.http",{"_index":512,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["following",{"_index":1537,"title":{},"body":{"license.html":{}}}],["fonctions",{"_index":393,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["forever",{"_index":1367,"title":{},"body":{"index.html":{}}}],["form",{"_index":569,"title":{},"body":{"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{}}}],["formalaire",{"_index":396,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["formcontrol",{"_index":443,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formcontrol(undefined",{"_index":474,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formcontrolname",{"_index":469,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/InputComponent.html":{}}}],["formgroup",{"_index":426,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils",{"_index":386,"title":{"classes/FormPanelUtils.html":{}},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["formpanelutils:14",{"_index":566,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:15",{"_index":568,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:16",{"_index":565,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:17",{"_index":563,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:18",{"_index":564,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:19",{"_index":567,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:24",{"_index":560,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:40",{"_index":556,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:46",{"_index":558,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:54",{"_index":562,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:60",{"_index":559,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:67",{"_index":557,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:77",{"_index":561,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["forms.validators",{"_index":452,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["formsmodule",{"_index":532,"title":{},"body":{"modules/GlobalModule.html":{},"modules/PanelModule.html":{}}}],["forwardref",{"_index":705,"title":{},"body":{"components/InputComponent.html":{}}}],["free",{"_index":1511,"title":{},"body":{"license.html":{}}}],["front",{"_index":1364,"title":{},"body":{"index.html":{}}}],["front.code",{"_index":1476,"title":{},"body":{"index.html":{}}}],["front.git",{"_index":1391,"title":{},"body":{"index.html":{}}}],["full",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PanelRoutingModule.html":{}}}],["function",{"_index":351,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1356,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1536,"title":{},"body":{"license.html":{}}}],["g",{"_index":1386,"title":{},"body":{"index.html":{}}}],["geolocation",{"_index":1284,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["gestion",{"_index":1266,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["getallpositions",{"_index":601,"title":{},"body":{"injectables/HttpService.html":{}}}],["getcitiesnamefromform",{"_index":407,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["getidfornewcity",{"_index":408,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["getmenuproperties",{"_index":840,"title":{},"body":{"components/MainComponent.html":{}}}],["getnearestposition",{"_index":602,"title":{},"body":{"injectables/HttpService.html":{}}}],["getnearestposition(positionuser",{"_index":615,"title":{},"body":{"injectables/HttpService.html":{}}}],["getpath",{"_index":603,"title":{},"body":{"injectables/HttpService.html":{}}}],["getpath(positions",{"_index":618,"title":{},"body":{"injectables/HttpService.html":{}}}],["getpositionfromforms",{"_index":409,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["getting",{"_index":1362,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettsp",{"_index":604,"title":{},"body":{"injectables/HttpService.html":{}}}],["gettsp(positions",{"_index":620,"title":{},"body":{"injectables/HttpService.html":{}}}],["getuserlocation",{"_index":712,"title":{},"body":{"components/InputComponent.html":{},"injectables/UserLocationService.html":{}}}],["getvalue",{"_index":753,"title":{},"body":{"components/InputComponent.html":{}}}],["getzoomstate",{"_index":920,"title":{},"body":{"components/MapComponent.html":{}}}],["getzoomstate(userposition",{"_index":946,"title":{},"body":{"components/MapComponent.html":{}}}],["git",{"_index":1390,"title":{},"body":{"index.html":{}}}],["global/global.module",{"_index":1227,"title":{},"body":{"modules/PanelModule.html":{}}}],["globalmodule",{"_index":79,"title":{"modules/GlobalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/PanelModule.html":{},"modules.html":{},"overview.html":{}}}],["gps",{"_index":546,"title":{},"body":{"components/GpsComponent.html":{},"modules/PanelRoutingModule.html":{}}}],["gps'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["gps.component.html",{"_index":550,"title":{},"body":{"components/GpsComponent.html":{}}}],["gps.component.scss",{"_index":549,"title":{},"body":{"components/GpsComponent.html":{}}}],["gps/gps.component",{"_index":1223,"title":{},"body":{"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{}}}],["gpscomponent",{"_index":49,"title":{"components/GpsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["granted",{"_index":1510,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1573,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":1205,"title":{},"body":{"components/PanelComponent.html":{}}}],["gyp",{"_index":1396,"title":{},"body":{"index.html":{}}}],["gère",{"_index":132,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["height",{"_index":851,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["heightoffset",{"_index":266,"title":{},"body":{"injectables/DrawerService.html":{}}}],["hereby",{"_index":1509,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1558,"title":{},"body":{"license.html":{}}}],["host",{"_index":579,"title":{},"body":{"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["hostlistener",{"_index":983,"title":{},"body":{"components/MapComponent.html":{}}}],["hostlistener('window:resize",{"_index":1003,"title":{},"body":{"components/MapComponent.html":{}}}],["hostlisteners",{"_index":925,"title":{},"body":{"components/MapComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["htmlimageelement",{"_index":221,"title":{},"body":{"injectables/DrawerService.html":{}}}],["http",{"_index":343,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{}}}],["http://localhost:4200",{"_index":1417,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":606,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclientmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":309,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httphandler",{"_index":305,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httpinterceptor",{"_index":310,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httpparams",{"_index":624,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpparams().set('lat",{"_index":639,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpparams().set('name",{"_index":682,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpparams().set('startid",{"_index":672,"title":{},"body":{"injectables/HttpService.html":{}}}],["httprequest",{"_index":303,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httpresponse",{"_index":311,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["https://code.visualstudio.com/download",{"_index":1473,"title":{},"body":{"index.html":{}}}],["https://gitforwindows.org",{"_index":1374,"title":{},"body":{"index.html":{}}}],["https://github.com/2018",{"_index":632,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["https://nodejs.org/en",{"_index":1379,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":415,"title":{"injectables/HttpService.html":{}},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["iapirest",{"_index":315,"title":{"interfaces/IApiRest.html":{}},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interfaces/IApiRest.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":151,"title":{},"body":{"components/ButtonComponent.html":{}}}],["id",{"_index":1247,"title":{},"body":{"classes/Place.html":{},"miscellaneous/variables.html":{}}}],["id1",{"_index":675,"title":{},"body":{"injectables/HttpService.html":{}}}],["id2",{"_index":676,"title":{},"body":{"injectables/HttpService.html":{}}}],["idend",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["idstart",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ils",{"_index":1499,"title":{},"body":{"index.html":{}}}],["image",{"_index":251,"title":{},"body":{"injectables/DrawerService.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{}}}],["implied",{"_index":1549,"title":{},"body":{"license.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["important",{"_index":1214,"title":{},"body":{"components/PanelComponent.html":{}}}],["imports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{}}}],["included",{"_index":1542,"title":{},"body":{"license.html":{}}}],["including",{"_index":1522,"title":{},"body":{"license.html":{}}}],["inconnue",{"_index":510,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1461,"title":{},"body":{"index.html":{}}}],["indisponible",{"_index":1272,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["informations",{"_index":817,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["inherited",{"_index":555,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["initial",{"_index":1042,"title":{},"body":{"components/MapComponent.html":{}}}],["initlocationpointer",{"_index":197,"title":{},"body":{"injectables/DrawerService.html":{}}}],["initmap",{"_index":921,"title":{},"body":{"components/MapComponent.html":{}}}],["initmouseevent",{"_index":922,"title":{},"body":{"components/MapComponent.html":{}}}],["inituserpointer",{"_index":198,"title":{},"body":{"injectables/DrawerService.html":{}}}],["inituserposition",{"_index":1269,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["inject",{"_index":376,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["inject(mat_dialog_data",{"_index":373,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["injectable",{"_index":179,"title":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{}},"body":{"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["injectables",{"_index":181,"title":{},"body":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{},"overview.html":{}}}],["inline",{"_index":1101,"title":{},"body":{"components/MapComponent.html":{}}}],["input",{"_index":155,"title":{},"body":{"components/ButtonComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{}}}],["input'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["input.component.html",{"_index":707,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":706,"title":{},"body":{"components/InputComponent.html":{}}}],["input.setvalue(city.name",{"_index":468,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["input/input.component",{"_index":531,"title":{},"body":{"modules/GlobalModule.html":{}}}],["inputcomponent",{"_index":51,"title":{"components/InputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs",{"_index":138,"title":{},"body":{"components/ButtonComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{}}}],["inputvalidators",{"_index":402,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["instalation",{"_index":1369,"title":{},"body":{"index.html":{}}}],["install",{"_index":1385,"title":{},"body":{"index.html":{}}}],["installer",{"_index":1375,"title":{},"body":{"index.html":{}}}],["installées",{"_index":1486,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":301,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["intercept(request",{"_index":302,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["interceptor",{"_index":99,"title":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":294,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptor.ts:12",{"_index":1190,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["interceptor.ts:16",{"_index":1191,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["interceptor.ts:39",{"_index":306,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{}}}],["interceptors",{"_index":292,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["interface",{"_index":689,"title":{"interfaces/IApiRest.html":{}},"body":{"interfaces/IApiRest.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":690,"title":{},"body":{"interfaces/IApiRest.html":{}}}],["ismenuopen",{"_index":838,"title":{},"body":{"components/MainComponent.html":{}}}],["isserveurmock",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issmallscreen",{"_index":841,"title":{},"body":{"components/MainComponent.html":{}}}],["js",{"_index":1349,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["key",{"_index":987,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1547,"title":{},"body":{"license.html":{}}}],["l'app",{"_index":1424,"title":{},"body":{"index.html":{}}}],["l'appli",{"_index":1426,"title":{},"body":{"index.html":{}}}],["l'application",{"_index":524,"title":{},"body":{"modules/GlobalModule.html":{},"components/MainComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["l'on",{"_index":954,"title":{},"body":{"components/MapComponent.html":{}}}],["l'url",{"_index":336,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"index.html":{}}}],["l'utilisateur",{"_index":934,"title":{},"body":{"components/MapComponent.html":{},"injectables/UserLocationService.html":{}}}],["la",{"_index":163,"title":{},"body":{"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{},"index.html":{}}}],["label",{"_index":1210,"title":{},"body":{"components/PanelComponent.html":{}}}],["lance",{"_index":1442,"title":{},"body":{"index.html":{}}}],["lancer",{"_index":1423,"title":{},"body":{"index.html":{}}}],["lat",{"_index":995,"title":{},"body":{"components/MapComponent.html":{}}}],["le",{"_index":296,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["left",{"_index":868,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"components/TspComponent.html":{},"overview.html":{}}}],["les",{"_index":186,"title":{},"body":{"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lettre",{"_index":165,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["li",{"_index":383,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["liability",{"_index":1562,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1559,"title":{},"body":{"license.html":{}}}],["liaison",{"_index":1111,"title":{},"body":{"injectables/MapDataService.html":{}}}],["license",{"_index":1503,"title":{"license.html":{}},"body":{"license.html":{}}}],["lien",{"_index":1471,"title":{},"body":{"index.html":{}}}],["lieu",{"_index":1246,"title":{},"body":{"classes/Place.html":{}}}],["lieux",{"_index":1235,"title":{},"body":{"classes/Path.html":{}}}],["limitation",{"_index":1523,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1550,"title":{},"body":{"license.html":{}}}],["linux",{"_index":1399,"title":{},"body":{"index.html":{}}}],["list",{"_index":384,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["listes",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":370,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"injectables/HttpService.html":{},"components/MapComponent.html":{}}}],["liées",{"_index":1139,"title":{},"body":{"injectables/MapDataService.html":{}}}],["lng",{"_index":996,"title":{},"body":{"components/MapComponent.html":{}}}],["loadchildren",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localhost:8081/api",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location",{"_index":199,"title":{},"body":{"injectables/DrawerService.html":{}}}],["location(position",{"_index":207,"title":{},"body":{"injectables/DrawerService.html":{}}}],["location.service",{"_index":760,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["location.service.ts",{"_index":1265,"title":{},"body":{"injectables/UserLocationService.html":{},"coverage.html":{}}}],["location.service.ts:14",{"_index":1275,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:15",{"_index":1270,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:22",{"_index":1273,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:41",{"_index":1271,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location/user",{"_index":759,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["locationpointericons",{"_index":225,"title":{},"body":{"injectables/DrawerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationpointerimage",{"_index":193,"title":{},"body":{"injectables/DrawerService.html":{}}}],["log",{"_index":789,"title":{"classes/Log.html":{}},"body":{"classes/Log.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["log(this.dialog",{"_index":819,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["logger",{"_index":792,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["logger/log.service",{"_index":630,"title":{},"body":{"injectables/HttpService.html":{}}}],["logservice",{"_index":104,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["lors",{"_index":335,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["lorsque",{"_index":933,"title":{},"body":{"components/MapComponent.html":{}}}],["m2gi",{"_index":634,"title":{},"body":{"injectables/HttpService.html":{},"components/MainComponent.html":{},"index.html":{},"license.html":{}}}],["main",{"_index":835,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["main.component",{"_index":891,"title":{},"body":{"modules/MainModule.html":{}}}],["main.component.html",{"_index":837,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":836,"title":{},"body":{"components/MainComponent.html":{}}}],["maincomponent",{"_index":53,"title":{"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainmodule",{"_index":884,"title":{"modules/MainModule.html":{}},"body":{"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["maintenant",{"_index":1496,"title":{},"body":{"index.html":{}}}],["majuscule",{"_index":167,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["map",{"_index":848,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"index.html":{}}}],["map'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["map((cityname",{"_index":488,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["map(pos",{"_index":670,"title":{},"body":{"injectables/HttpService.html":{}}}],["map.component",{"_index":1186,"title":{},"body":{"modules/MapModule.html":{}}}],["map.component.html",{"_index":899,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":898,"title":{},"body":{"components/MapComponent.html":{}}}],["map/map.module",{"_index":892,"title":{},"body":{"modules/MainModule.html":{}}}],["mapcomponent",{"_index":55,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapdata",{"_index":416,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["mapdataonchange",{"_index":903,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataservice",{"_index":417,"title":{"injectables/MapDataService.html":{}},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["mapmodule",{"_index":888,"title":{"modules/MapModule.html":{}},"body":{"modules/MainModule.html":{},"modules/MapModule.html":{},"modules.html":{},"overview.html":{}}}],["mapmouseclickstate",{"_index":904,"title":{},"body":{"components/MapComponent.html":{}}}],["mappa",{"_index":905,"title":{},"body":{"components/MapComponent.html":{},"dependencies.html":{}}}],["mappamundi",{"_index":984,"title":{},"body":{"components/MapComponent.html":{}}}],["mappamundi('mapbox",{"_index":990,"title":{},"body":{"components/MapComponent.html":{}}}],["margin",{"_index":586,"title":{},"body":{"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["mat",{"_index":786,"title":{},"body":{"components/InputComponent.html":{},"components/MainComponent.html":{}}}],["mat_dialog_data",{"_index":377,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["matautocompletemodule",{"_index":540,"title":{},"body":{"modules/GlobalModule.html":{}}}],["matbuttonmodule",{"_index":533,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":801,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["matdialogmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{}}}],["matdialogref",{"_index":369,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["math.floor(window.innerheight",{"_index":1009,"title":{},"body":{"components/MapComponent.html":{}}}],["math.pi",{"_index":279,"title":{},"body":{"injectables/DrawerService.html":{}}}],["maticonmodule",{"_index":535,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{}}}],["matinputmodule",{"_index":537,"title":{},"body":{"modules/GlobalModule.html":{}}}],["mattabsmodule",{"_index":1225,"title":{},"body":{"modules/PanelModule.html":{}}}],["mattoolbarmodule",{"_index":894,"title":{},"body":{"modules/MainModule.html":{}}}],["mattooltipmodule",{"_index":1187,"title":{},"body":{"modules/MapModule.html":{}}}],["max",{"_index":876,"title":{},"body":{"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["media",{"_index":875,"title":{},"body":{"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["merchantability",{"_index":1552,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1527,"title":{},"body":{"license.html":{}}}],["message",{"_index":361,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["method",{"_index":692,"title":{},"body":{"interfaces/IApiRest.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["mettre",{"_index":162,"title":{},"body":{"pipes/CapitalizePipe.html":{},"index.html":{}}}],["metz",{"_index":1319,"title":{},"body":{"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metz/cl",{"_index":635,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["michel",{"_index":1366,"title":{},"body":{"index.html":{}}}],["min",{"_index":1212,"title":{},"body":{"components/PanelComponent.html":{}}}],["miscellaneous",{"_index":1355,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1504,"title":{},"body":{"license.html":{}}}],["mock",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["mockbackendinterceptor",{"_index":319,"title":{"interceptors/MockBackendInterceptor.html":{}},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{}}}],["mockbackendinterceptor(logservice",{"_index":354,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["mockbackendinterceptorfactory",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mockbackendinterceptorfactory(logservice",{"_index":352,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/functions.html":{}}}],["mode",{"_index":1432,"title":{},"body":{"index.html":{}}}],["model/path",{"_index":448,"title":{},"body":{"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"injectables/MapDataService.html":{}}}],["model/place",{"_index":447,"title":{},"body":{"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{}}}],["modifie",{"_index":935,"title":{},"body":{"components/MapComponent.html":{}}}],["modify",{"_index":1526,"title":{},"body":{"license.html":{}}}],["module",{"_index":66,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["modules",{"_index":68,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["mousedown",{"_index":968,"title":{},"body":{"components/MapComponent.html":{}}}],["mousemove",{"_index":969,"title":{},"body":{"components/MapComponent.html":{}}}],["mouseup",{"_index":1029,"title":{},"body":{"components/MapComponent.html":{}}}],["multi",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"components/InputComponent.html":{}}}],["mundi",{"_index":985,"title":{},"body":{"components/MapComponent.html":{},"dependencies.html":{}}}],["my_location",{"_index":780,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["n'est",{"_index":337,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{}}}],["n'existe",{"_index":506,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["n'importe",{"_index":521,"title":{},"body":{"modules/GlobalModule.html":{},"injectables/MapDataService.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name.slice(1",{"_index":1048,"title":{},"body":{"components/MapComponent.html":{}}}],["navigateur",{"_index":1415,"title":{},"body":{"index.html":{}}}],["navigateur\").aswarn().and.log",{"_index":1290,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["navigator.geolocation",{"_index":1278,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["navigator.geolocation.getcurrentposition(position",{"_index":1279,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["nearestpoint",{"_index":777,"title":{},"body":{"components/InputComponent.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":250,"title":{},"body":{"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["next",{"_index":304,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["next.handle(request",{"_index":346,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["ng",{"_index":1207,"title":{},"body":{"components/PanelComponent.html":{}}}],["ng_value_accessor",{"_index":703,"title":{},"body":{"components/InputComponent.html":{}}}],["ngmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["node",{"_index":1376,"title":{},"body":{"index.html":{}}}],["nommée",{"_index":1494,"title":{},"body":{"index.html":{}}}],["non",{"_index":350,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/functions.html":{}}}],["none",{"_index":385,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["noninfringement",{"_index":1556,"title":{},"body":{"license.html":{}}}],["notalreadychoose",{"_index":451,"title":{},"body":{"classes/FormPanelUtils.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["notice",{"_index":1540,"title":{},"body":{"license.html":{}}}],["notifie",{"_index":952,"title":{},"body":{"components/MapComponent.html":{}}}],["notify",{"_index":1119,"title":{},"body":{"injectables/MapDataService.html":{}}}],["notifychange",{"_index":713,"title":{},"body":{"components/InputComponent.html":{}}}],["nouvelle",{"_index":1146,"title":{},"body":{"injectables/MapDataService.html":{}}}],["npm",{"_index":1384,"title":{},"body":{"index.html":{}}}],["null",{"_index":467,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/MapComponent.html":{}}}],["number",{"_index":422,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":298,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["object",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(this.panelform.controls",{"_index":461,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["object.values(this.panelform.value",{"_index":491,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["objecttoreturn",{"_index":693,"title":{},"body":{"interfaces/IApiRest.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":308,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{}}}],["obtaining",{"_index":1514,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":327,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["ok",{"_index":380,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["onchange",{"_index":1120,"title":{},"body":{"injectables/MapDataService.html":{}}}],["oncitypushed",{"_index":1121,"title":{},"body":{"injectables/MapDataService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["oninputchange",{"_index":714,"title":{},"body":{"components/InputComponent.html":{}}}],["oninputchange(value",{"_index":740,"title":{},"body":{"components/InputComponent.html":{}}}],["oninputremove",{"_index":723,"title":{},"body":{"components/InputComponent.html":{}}}],["onresize",{"_index":1004,"title":{},"body":{"components/MapComponent.html":{}}}],["onsubmit",{"_index":412,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["onsubmit(fn",{"_index":435,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["open",{"_index":1474,"title":{},"body":{"index.html":{}}}],["openpanel",{"_index":842,"title":{},"body":{"components/MainComponent.html":{}}}],["optional",{"_index":174,"title":{},"body":{"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1063,"title":{},"body":{"components/MapComponent.html":{}}}],["otherwise",{"_index":1566,"title":{},"body":{"license.html":{}}}],["ou",{"_index":349,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/functions.html":{}}}],["oups",{"_index":378,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"license.html":{},"overview.html":{}}}],["outils",{"_index":1468,"title":{},"body":{"index.html":{}}}],["outlet",{"_index":1230,"title":{},"body":{"modules/PanelRoutingModule.html":{}}}],["output",{"_index":757,"title":{},"body":{"components/InputComponent.html":{}}}],["outputs",{"_index":722,"title":{},"body":{"components/InputComponent.html":{}}}],["ouvrir",{"_index":1443,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":1206,"title":{},"body":{"components/PanelComponent.html":{}}}],["overview",{"_index":1575,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.startplace",{"_index":1165,"title":{},"body":{"injectables/MapDataService.html":{}}}],["package",{"_index":1339,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":1502,"title":{},"body":{"index.html":{}}}],["padding",{"_index":382,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["page",{"_index":1414,"title":{},"body":{"index.html":{}}}],["panel",{"_index":854,"title":{},"body":{"components/MainComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{}}}],["panel'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["panel.component",{"_index":1222,"title":{},"body":{"modules/PanelModule.html":{}}}],["panel.component.html",{"_index":1196,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.component.scss",{"_index":1195,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel/panel.module",{"_index":893,"title":{},"body":{"modules/MainModule.html":{}}}],["panelcomponent",{"_index":57,"title":{"components/PanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panelform",{"_index":403,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["panelmodule",{"_index":889,"title":{"modules/PanelModule.html":{}},"body":{"modules/MainModule.html":{},"modules/PanelModule.html":{},"modules.html":{},"overview.html":{}}}],["panelroutingmodule",{"_index":1220,"title":{"modules/PanelRoutingModule.html":{}},"body":{"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["panels",{"_index":701,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{}}}],["panneaux",{"_index":1194,"title":{},"body":{"components/PanelComponent.html":{}}}],["par",{"_index":1394,"title":{},"body":{"index.html":{}}}],["param",{"_index":1158,"title":{},"body":{"injectables/MapDataService.html":{}}}],["parameters",{"_index":173,"title":{},"body":{"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":638,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["params.append('id",{"_index":679,"title":{},"body":{"injectables/HttpService.html":{}}}],["paris",{"_index":1320,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":1554,"title":{},"body":{"license.html":{}}}],["partie",{"_index":523,"title":{},"body":{"modules/GlobalModule.html":{}}}],["pas",{"_index":318,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{}}}],["pas.\").aserror().showpopup().and.log",{"_index":507,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["passer",{"_index":1421,"title":{},"body":{"index.html":{}}}],["patch",{"_index":695,"title":{},"body":{"interfaces/IApiRest.html":{}}}],["path",{"_index":117,"title":{"classes/Path.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"modules/MainModule.html":{},"injectables/MapDataService.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path(start",{"_index":210,"title":{},"body":{"injectables/DrawerService.html":{}}}],["path.endplace.id",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.endplace.posx",{"_index":1086,"title":{},"body":{"components/MapComponent.html":{}}}],["path.startplace.id",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.startplace.posx",{"_index":1083,"title":{},"body":{"components/MapComponent.html":{}}}],["path1",{"_index":1321,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["path2",{"_index":1322,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["path3",{"_index":1323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["path4",{"_index":1324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["path5",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["path6",{"_index":1326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PanelRoutingModule.html":{}}}],["paths",{"_index":1115,"title":{},"body":{"injectables/MapDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paths.find(path",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths.length",{"_index":1161,"title":{},"body":{"injectables/MapDataService.html":{}}}],["paths[0].endplace",{"_index":1163,"title":{},"body":{"injectables/MapDataService.html":{}}}],["paths[0].startplace.id",{"_index":1166,"title":{},"body":{"injectables/MapDataService.html":{}}}],["paths[paths.length",{"_index":1167,"title":{},"body":{"injectables/MapDataService.html":{}}}],["pathsbuild",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathsid.end",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathsid.start",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permet",{"_index":160,"title":{},"body":{"pipes/CapitalizePipe.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"injectables/HttpService.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{},"miscellaneous/functions.html":{}}}],["permettant",{"_index":394,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/UserLocationService.html":{}}}],["permettre",{"_index":1498,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1508,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1534,"title":{},"body":{"license.html":{}}}],["person",{"_index":1513,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1535,"title":{},"body":{"license.html":{}}}],["peux",{"_index":518,"title":{},"body":{"modules/GlobalModule.html":{}}}],["pipe",{"_index":156,"title":{"pipes/CapitalizePipe.html":{}},"body":{"pipes/CapitalizePipe.html":{},"injectables/HttpService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":158,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["pipesmodule",{"_index":542,"title":{"modules/PipesModule.html":{}},"body":{"modules/GlobalModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":175,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["pk.eyj1ijoizgfuawvscgf5zxqilcjhijoiy2pvem1legf0mm1hotn3cghmbhm0b3p2ayj9.s0gdr8eabqi56thonkv1sg",{"_index":988,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["place",{"_index":419,"title":{"classes/Place.html":{}},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["place(null",{"_index":1035,"title":{},"body":{"components/MapComponent.html":{}}}],["place(undefined",{"_index":1010,"title":{},"body":{"components/MapComponent.html":{},"injectables/UserLocationService.html":{}}}],["place[0",{"_index":501,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["placeholder",{"_index":720,"title":{},"body":{"components/InputComponent.html":{}}}],["places",{"_index":498,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["places.foreach(place",{"_index":502,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["plus",{"_index":649,"title":{},"body":{"injectables/HttpService.html":{}}}],["plusieurs",{"_index":1129,"title":{},"body":{"injectables/MapDataService.html":{}}}],["point",{"_index":648,"title":{},"body":{"injectables/HttpService.html":{}}}],["pointer",{"_index":200,"title":{},"body":{"injectables/DrawerService.html":{}}}],["pointer(position",{"_index":214,"title":{},"body":{"injectables/DrawerService.html":{}}}],["pointerslocation",{"_index":1116,"title":{},"body":{"injectables/MapDataService.html":{}}}],["pointeruser",{"_index":201,"title":{},"body":{"injectables/DrawerService.html":{}}}],["pointeruser(position",{"_index":216,"title":{},"body":{"injectables/DrawerService.html":{}}}],["pop",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["popup",{"_index":359,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"components/MapComponent.html":{}}}],["popupcity",{"_index":906,"title":{},"body":{"components/MapComponent.html":{}}}],["popupposition",{"_index":907,"title":{},"body":{"components/MapComponent.html":{}}}],["popupvalue",{"_index":908,"title":{},"body":{"components/MapComponent.html":{}}}],["portions",{"_index":1544,"title":{},"body":{"license.html":{}}}],["pos.id1).set('endid",{"_index":673,"title":{},"body":{"injectables/HttpService.html":{}}}],["pos.id2",{"_index":674,"title":{},"body":{"injectables/HttpService.html":{}}}],["position",{"_index":209,"title":{},"body":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/UserLocationService.html":{}}}],["position.coords.latitude",{"_index":1281,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["position.coords.longitude",{"_index":1282,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["position.id.tostring",{"_index":680,"title":{},"body":{"injectables/HttpService.html":{}}}],["position.lat",{"_index":1012,"title":{},"body":{"components/MapComponent.html":{}}}],["position.lng",{"_index":1013,"title":{},"body":{"components/MapComponent.html":{}}}],["position.posx",{"_index":1096,"title":{},"body":{"components/MapComponent.html":{}}}],["position.x",{"_index":269,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{}}}],["position.y",{"_index":270,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{}}}],["positionmapstate",{"_index":909,"title":{},"body":{"components/MapComponent.html":{}}}],["positionpixels",{"_index":1089,"title":{},"body":{"components/MapComponent.html":{}}}],["positions",{"_index":436,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/TspComponent.html":{},"miscellaneous/variables.html":{}}}],["positions.map(position",{"_index":678,"title":{},"body":{"injectables/HttpService.html":{}}}],["positionuser",{"_index":617,"title":{},"body":{"injectables/HttpService.html":{}}}],["positionuser.posx.tostring()).set('lon",{"_index":640,"title":{},"body":{"injectables/HttpService.html":{}}}],["positionuser.posy.tostring",{"_index":641,"title":{},"body":{"injectables/HttpService.html":{}}}],["post",{"_index":694,"title":{},"body":{"interfaces/IApiRest.html":{}}}],["posx",{"_index":1248,"title":{},"body":{"classes/Place.html":{},"miscellaneous/variables.html":{}}}],["posy",{"_index":1249,"title":{},"body":{"classes/Place.html":{},"miscellaneous/variables.html":{}}}],["pour",{"_index":229,"title":{},"body":{"injectables/DrawerService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["premier",{"_index":164,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["prendre",{"_index":1377,"title":{},"body":{"index.html":{}}}],["prepare",{"_index":1437,"title":{},"body":{"index.html":{}}}],["primary",{"_index":146,"title":{},"body":{"components/ButtonComponent.html":{}}}],["principal",{"_index":834,"title":{},"body":{"components/MainComponent.html":{}}}],["private",{"_index":191,"title":{},"body":{"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["proche",{"_index":650,"title":{},"body":{"injectables/HttpService.html":{}}}],["production",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["produite",{"_index":334,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["produite.\").aserror().and.showpopup().and.log",{"_index":332,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["project",{"_index":1365,"title":{},"body":{"index.html":{}}}],["projet",{"_index":1370,"title":{},"body":{"index.html":{}}}],["projets",{"_index":1453,"title":{},"body":{"index.html":{}}}],["promise",{"_index":433,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["promise((res",{"_index":656,"title":{},"body":{"injectables/HttpService.html":{}}}],["promise(async",{"_index":1058,"title":{},"body":{"components/MapComponent.html":{}}}],["promise(res",{"_index":637,"title":{},"body":{"injectables/HttpService.html":{}}}],["promise.all",{"_index":486,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["promise.resolve",{"_index":774,"title":{},"body":{"components/InputComponent.html":{}}}],["propagatechange",{"_index":709,"title":{},"body":{"components/InputComponent.html":{}}}],["properties",{"_index":190,"title":{},"body":{"injectables/DrawerService.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["protected",{"_index":410,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["provide",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"components/InputComponent.html":{}}}],["provided",{"_index":1545,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":245,"title":{},"body":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["précédente",{"_index":1151,"title":{},"body":{"injectables/MapDataService.html":{}}}],["présent",{"_index":1497,"title":{},"body":{"index.html":{}}}],["public",{"_index":195,"title":{},"body":{"injectables/DrawerService.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["publish",{"_index":1528,"title":{},"body":{"license.html":{}}}],["puis",{"_index":1491,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1555,"title":{},"body":{"license.html":{}}}],["pushcity",{"_index":1122,"title":{},"body":{"injectables/MapDataService.html":{}}}],["pushcity(city",{"_index":1144,"title":{},"body":{"injectables/MapDataService.html":{}}}],["que",{"_index":953,"title":{},"body":{"components/MapComponent.html":{},"index.html":{}}}],["quel",{"_index":522,"title":{},"body":{"modules/GlobalModule.html":{},"injectables/MapDataService.html":{}}}],["qui",{"_index":127,"title":{},"body":{"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"index.html":{}}}],["radius",{"_index":872,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["rapport",{"_index":1395,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":1228,"title":{},"body":{"modules/PanelModule.html":{}}}],["readonly",{"_index":1267,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["recharger",{"_index":1490,"title":{},"body":{"index.html":{}}}],["recherche",{"_index":397,"title":{},"body":{"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{}}}],["rechercher",{"_index":578,"title":{},"body":{"components/GpsComponent.html":{}}}],["recommandés",{"_index":1478,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PanelRoutingModule.html":{}}}],["registeronchange",{"_index":715,"title":{},"body":{"components/InputComponent.html":{}}}],["registeronchange(fn",{"_index":742,"title":{},"body":{"components/InputComponent.html":{}}}],["registerontouched",{"_index":716,"title":{},"body":{"components/InputComponent.html":{}}}],["rej",{"_index":657,"title":{},"body":{"injectables/HttpService.html":{}}}],["rej(undefined",{"_index":661,"title":{},"body":{"injectables/HttpService.html":{}}}],["relative",{"_index":852,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["release",{"_index":1448,"title":{},"body":{"index.html":{}}}],["remove_circle_outline",{"_index":782,"title":{},"body":{"components/InputComponent.html":{}}}],["removebutton",{"_index":721,"title":{},"body":{"components/InputComponent.html":{}}}],["removecitysupp",{"_index":413,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["removecitysupp(citytoremove",{"_index":439,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["removeinput",{"_index":717,"title":{},"body":{"components/InputComponent.html":{}}}],["renderer",{"_index":928,"title":{},"body":{"components/MapComponent.html":{}}}],["renderer2",{"_index":929,"title":{},"body":{"components/MapComponent.html":{}}}],["replaysubject",{"_index":1274,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["repo",{"_index":1389,"title":{},"body":{"index.html":{}}}],["représentant",{"_index":791,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["représente",{"_index":1233,"title":{},"body":{"classes/Path.html":{},"classes/Place.html":{}}}],["req",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params.get('endid",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params.get('startid",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params.getall('id",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":307,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.clone",{"_index":341,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.method",{"_index":323,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.url",{"_index":345,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.url).aserror().and.showpopup().and.log",{"_index":339,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.url.endswith(apirest.url",{"_index":322,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["res",{"_index":1059,"title":{},"body":{"components/MapComponent.html":{}}}],["res(paths",{"_index":668,"title":{},"body":{"injectables/HttpService.html":{}}}],["res(paths.reduce((accu",{"_index":664,"title":{},"body":{"injectables/HttpService.html":{}}}],["res(position",{"_index":644,"title":{},"body":{"injectables/HttpService.html":{}}}],["res(positions",{"_index":655,"title":{},"body":{"injectables/HttpService.html":{}}}],["res(undefined",{"_index":653,"title":{},"body":{"injectables/HttpService.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["resetall",{"_index":1123,"title":{},"body":{"injectables/MapDataService.html":{}}}],["resetpaths",{"_index":1124,"title":{},"body":{"injectables/MapDataService.html":{}}}],["resetpointerslocations",{"_index":1125,"title":{},"body":{"injectables/MapDataService.html":{}}}],["ressources",{"_index":1460,"title":{},"body":{"index.html":{}}}],["rest",{"_index":596,"title":{},"body":{"injectables/HttpService.html":{}}}],["restriction",{"_index":1521,"title":{},"body":{"license.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":176,"title":{},"body":{"pipes/CapitalizePipe.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{}}}],["rgba(255",{"_index":242,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["rgba(63",{"_index":233,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":857,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["rights",{"_index":1524,"title":{},"body":{"license.html":{}}}],["root",{"_index":246,"title":{},"body":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{}}}],["routermodule",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{},"modules/PanelRoutingModule.html":{}}}],["routermodule.forchild",{"_index":896,"title":{},"body":{"modules/MainModule.html":{}}}],["routermodule.forchild(routes",{"_index":1231,"title":{},"body":{"modules/PanelRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":113,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/PanelRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/PanelModule.html":{}}}],["routing.module.ts",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PanelRoutingModule.html":{}}}],["row",{"_index":589,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["run",{"_index":1407,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":312,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":629,"title":{},"body":{"injectables/HttpService.html":{},"injectables/UserLocationService.html":{}}}],["réalise",{"_index":593,"title":{},"body":{"injectables/HttpService.html":{}}}],["récuperer",{"_index":647,"title":{},"body":{"injectables/HttpService.html":{}}}],["s'execute",{"_index":932,"title":{},"body":{"components/MapComponent.html":{}}}],["s'occupe",{"_index":184,"title":{},"body":{"injectables/DrawerService.html":{},"classes/Log.html":{},"injectables/LogService.html":{}}}],["s'ouvrir",{"_index":1481,"title":{},"body":{"index.html":{}}}],["s'ouvrira",{"_index":1416,"title":{},"body":{"index.html":{}}}],["saisis",{"_index":505,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["sans",{"_index":1449,"title":{},"body":{"index.html":{}}}],["schemas",{"_index":526,"title":{},"body":{"modules/GlobalModule.html":{},"modules/PanelModule.html":{}}}],["scripts",{"_index":1495,"title":{},"body":{"index.html":{}}}],["se",{"_index":956,"title":{},"body":{"components/MapComponent.html":{},"index.html":{}}}],["search",{"_index":605,"title":{},"body":{"injectables/HttpService.html":{}}}],["search(name",{"_index":622,"title":{},"body":{"injectables/HttpService.html":{}}}],["searchbyname",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["see",{"_index":631,"title":{},"body":{"injectables/HttpService.html":{},"classes/Path.html":{}}}],["selectionner",{"_index":1147,"title":{},"body":{"injectables/MapDataService.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["sell",{"_index":1532,"title":{},"body":{"license.html":{}}}],["server",{"_index":636,"title":{},"body":{"injectables/HttpService.html":{}}}],["serveur",{"_index":300,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["service",{"_index":183,"title":{},"body":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{}}}],["service.service",{"_index":450,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["service.service.ts",{"_index":592,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["service.service.ts:16",{"_index":607,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:20",{"_index":616,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:32",{"_index":614,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:43",{"_index":619,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:60",{"_index":621,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:77",{"_index":609,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:82",{"_index":613,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:90",{"_index":611,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:96",{"_index":623,"title":{},"body":{"injectables/HttpService.html":{}}}],["services/drawer/drawer.service",{"_index":986,"title":{},"body":{"components/MapComponent.html":{}}}],["services/http/http",{"_index":449,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["services/logger/log.service",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["services/map/map",{"_index":445,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["services/user",{"_index":758,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["ses",{"_index":133,"title":{},"body":{"components/ButtonComponent.html":{}}}],["set",{"_index":763,"title":{},"body":{"components/InputComponent.html":{},"injectables/LogService.html":{}}}],["set(message",{"_index":818,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["setcontext",{"_index":202,"title":{},"body":{"injectables/DrawerService.html":{}}}],["setcontext(context",{"_index":218,"title":{},"body":{"injectables/DrawerService.html":{}}}],["setcurrenttab",{"_index":1197,"title":{},"body":{"components/PanelComponent.html":{}}}],["setcurrenttab(index",{"_index":1198,"title":{},"body":{"components/PanelComponent.html":{}}}],["setflags",{"_index":798,"title":{},"body":{"classes/Log.html":{}}}],["setflags(flags",{"_index":813,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["setlocalisation",{"_index":923,"title":{},"body":{"components/MapComponent.html":{}}}],["setvalue(val",{"_index":755,"title":{},"body":{"components/InputComponent.html":{}}}],["shadow",{"_index":1202,"title":{},"body":{"components/PanelComponent.html":{}}}],["shall",{"_index":1541,"title":{},"body":{"license.html":{}}}],["showpopup",{"_index":799,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["si",{"_index":348,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["signalitique",{"_index":188,"title":{},"body":{"injectables/DrawerService.html":{}}}],["sinon",{"_index":1431,"title":{},"body":{"index.html":{}}}],["sizex",{"_index":1051,"title":{},"body":{"components/MapComponent.html":{}}}],["sizex}px",{"_index":1056,"title":{},"body":{"components/MapComponent.html":{}}}],["sizey",{"_index":1053,"title":{},"body":{"components/MapComponent.html":{}}}],["sizey}px",{"_index":1055,"title":{},"body":{"components/MapComponent.html":{}}}],["software",{"_index":1516,"title":{},"body":{"license.html":{}}}],["soit",{"_index":1485,"title":{},"body":{"index.html":{}}}],["solid",{"_index":1105,"title":{},"body":{"components/MapComponent.html":{}}}],["sont",{"_index":1500,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["sous",{"_index":1493,"title":{},"body":{"index.html":{}}}],["src/.../api.ts",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../drawer.service.ts",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.mock.ts",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forms.validators.ts",{"_index":1358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../icones.ts",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.component.ts",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock",{"_index":1357,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:8",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/composant/global/button/button.component.ts",{"_index":124,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/app/composant/global/button/button.component.ts:12",{"_index":149,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/composant/global/button/button.component.ts:13",{"_index":153,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/composant/global/button/button.component.ts:14",{"_index":147,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/composant/global/button/button.component.ts:15",{"_index":143,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/composant/global/button/button.component.ts:19",{"_index":154,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/composant/global/erreur",{"_index":355,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"coverage.html":{}}}],["src/app/composant/global/global.module.ts",{"_index":516,"title":{},"body":{"modules/GlobalModule.html":{}}}],["src/app/composant/global/input/input.component.ts",{"_index":697,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/app/composant/global/input/input.component.ts:24",{"_index":732,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:25",{"_index":730,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:26",{"_index":733,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:27",{"_index":727,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:28",{"_index":731,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:29",{"_index":728,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:30",{"_index":735,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:31",{"_index":749,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:32",{"_index":752,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:33",{"_index":750,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:35",{"_index":754,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:39",{"_index":756,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:43",{"_index":726,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:47",{"_index":748,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:51",{"_index":744,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:55",{"_index":745,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:57",{"_index":746,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:61",{"_index":739,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:66",{"_index":741,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:74",{"_index":737,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:78",{"_index":738,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/main/main.component.ts",{"_index":832,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/composant/main/main.component.ts:12",{"_index":847,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/composant/main/main.component.ts:14",{"_index":845,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/composant/main/main.component.ts:18",{"_index":846,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/composant/main/main.component.ts:22",{"_index":843,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/composant/main/main.component.ts:26",{"_index":844,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/composant/main/main.module.ts",{"_index":890,"title":{},"body":{"modules/MainModule.html":{}}}],["src/app/composant/main/map/icones/icones.ts",{"_index":1303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/composant/main/map/map.component.ts",{"_index":897,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/composant/main/map/map.component.ts:107",{"_index":939,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:115",{"_index":945,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:123",{"_index":958,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:136",{"_index":951,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:140",{"_index":948,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:156",{"_index":947,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:160",{"_index":941,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:176",{"_index":942,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:186",{"_index":937,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:190",{"_index":944,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:197",{"_index":940,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:20",{"_index":930,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:206",{"_index":943,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:31",{"_index":961,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:32",{"_index":964,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:33",{"_index":973,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:34",{"_index":977,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:36",{"_index":965,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:37",{"_index":979,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:38",{"_index":980,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:39",{"_index":962,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:40",{"_index":967,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:41",{"_index":981,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:42",{"_index":978,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:43",{"_index":971,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:45",{"_index":970,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:47",{"_index":975,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:48",{"_index":974,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:50",{"_index":950,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:64",{"_index":931,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:83",{"_index":949,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.module.ts",{"_index":1185,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/composant/main/panel/form",{"_index":388,"title":{},"body":{"classes/FormPanelUtils.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/composant/main/panel/gps/gps.component.ts",{"_index":544,"title":{},"body":{"components/GpsComponent.html":{},"coverage.html":{}}}],["src/app/composant/main/panel/gps/gps.component.ts:17",{"_index":552,"title":{},"body":{"components/GpsComponent.html":{}}}],["src/app/composant/main/panel/gps/gps.component.ts:18",{"_index":551,"title":{},"body":{"components/GpsComponent.html":{}}}],["src/app/composant/main/panel/gps/gps.component.ts:24",{"_index":553,"title":{},"body":{"components/GpsComponent.html":{}}}],["src/app/composant/main/panel/gps/gps.component.ts:32",{"_index":554,"title":{},"body":{"components/GpsComponent.html":{}}}],["src/app/composant/main/panel/panel",{"_index":1229,"title":{},"body":{"modules/PanelRoutingModule.html":{}}}],["src/app/composant/main/panel/panel.component.ts",{"_index":1192,"title":{},"body":{"components/PanelComponent.html":{},"coverage.html":{}}}],["src/app/composant/main/panel/panel.component.ts:12",{"_index":1200,"title":{},"body":{"components/PanelComponent.html":{}}}],["src/app/composant/main/panel/panel.component.ts:14",{"_index":1199,"title":{},"body":{"components/PanelComponent.html":{}}}],["src/app/composant/main/panel/panel.module.ts",{"_index":1221,"title":{},"body":{"modules/PanelModule.html":{}}}],["src/app/composant/main/panel/tsp/tsp.component.ts",{"_index":1253,"title":{},"body":{"components/TspComponent.html":{},"coverage.html":{}}}],["src/app/composant/main/panel/tsp/tsp.component.ts:17",{"_index":1258,"title":{},"body":{"components/TspComponent.html":{}}}],["src/app/composant/main/panel/tsp/tsp.component.ts:18",{"_index":1257,"title":{},"body":{"components/TspComponent.html":{}}}],["src/app/composant/main/panel/tsp/tsp.component.ts:23",{"_index":1259,"title":{},"body":{"components/TspComponent.html":{}}}],["src/app/composant/main/panel/tsp/tsp.component.ts:30",{"_index":1260,"title":{},"body":{"components/TspComponent.html":{}}}],["src/app/mock",{"_index":293,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interfaces/IApiRest.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/path.ts",{"_index":1232,"title":{},"body":{"classes/Path.html":{},"coverage.html":{}}}],["src/app/model/path.ts:8",{"_index":1239,"title":{},"body":{"classes/Path.html":{}}}],["src/app/model/path.ts:9",{"_index":1238,"title":{},"body":{"classes/Path.html":{}}}],["src/app/model/place.ts",{"_index":1245,"title":{},"body":{"classes/Place.html":{},"coverage.html":{}}}],["src/app/model/place.ts:4",{"_index":1251,"title":{},"body":{"classes/Place.html":{}}}],["src/app/model/place.ts:5",{"_index":1252,"title":{},"body":{"classes/Place.html":{}}}],["src/app/pipes/capitalize.pipe.ts",{"_index":159,"title":{},"body":{"pipes/CapitalizePipe.html":{},"coverage.html":{}}}],["src/app/pipes/capitalize.pipe.ts:11",{"_index":172,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["src/app/pipes/pipes.module",{"_index":543,"title":{},"body":{"modules/GlobalModule.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1243,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/services/drawer/drawer.service.ts",{"_index":182,"title":{},"body":{"injectables/DrawerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/drawer/drawer.service.ts:21",{"_index":223,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer/drawer.service.ts:22",{"_index":222,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer/drawer.service.ts:23",{"_index":203,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer/drawer.service.ts:30",{"_index":206,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer/drawer.service.ts:36",{"_index":205,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer/drawer.service.ts:42",{"_index":219,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer/drawer.service.ts:46",{"_index":204,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer/drawer.service.ts:50",{"_index":217,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer/drawer.service.ts:56",{"_index":215,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer/drawer.service.ts:62",{"_index":208,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer/drawer.service.ts:85",{"_index":212,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/http/http",{"_index":591,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/services/logger/log.service.ts",{"_index":790,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/services/logger/log.service.ts:11",{"_index":830,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/logger/log.service.ts:15",{"_index":831,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/logger/log.service.ts:24",{"_index":808,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/logger/log.service.ts:25",{"_index":807,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/logger/log.service.ts:26",{"_index":803,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/logger/log.service.ts:27",{"_index":802,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/logger/log.service.ts:29",{"_index":804,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/logger/log.service.ts:35",{"_index":809,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/logger/log.service.ts:40",{"_index":811,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/logger/log.service.ts:45",{"_index":810,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/logger/log.service.ts:50",{"_index":814,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/logger/log.service.ts:54",{"_index":815,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/logger/log.service.ts:61",{"_index":812,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/map/map",{"_index":1109,"title":{},"body":{"injectables/MapDataService.html":{},"coverage.html":{}}}],["src/app/services/user",{"_index":1264,"title":{},"body":{"injectables/UserLocationService.html":{},"coverage.html":{}}}],["src/environment.ts",{"_index":1430,"title":{},"body":{"index.html":{}}}],["src/environments/environment.mock.ts",{"_index":1334,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1335,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":213,"title":{},"body":{"injectables/DrawerService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start.y",{"_index":288,"title":{},"body":{"injectables/DrawerService.html":{}}}],["start:android",{"_index":1438,"title":{},"body":{"index.html":{}}}],["start:electron",{"_index":1440,"title":{},"body":{"index.html":{}}}],["start:mock",{"_index":1433,"title":{},"body":{"index.html":{}}}],["started",{"_index":1363,"title":{"index.html":{},"license.html":{}},"body":{}}],["startpixels",{"_index":1081,"title":{},"body":{"components/MapComponent.html":{}}}],["startplace",{"_index":1237,"title":{},"body":{"classes/Path.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":328,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["string",{"_index":171,"title":{},"body":{"pipes/CapitalizePipe.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":141,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["subject",{"_index":751,"title":{},"body":{"components/InputComponent.html":{},"injectables/MapDataService.html":{},"license.html":{}}}],["sublicense",{"_index":1530,"title":{},"body":{"license.html":{}}}],["subscribe((paths",{"_index":663,"title":{},"body":{"injectables/HttpService.html":{}}}],["subscribe((position",{"_index":643,"title":{},"body":{"injectables/HttpService.html":{}}}],["subscribe((positions",{"_index":684,"title":{},"body":{"injectables/HttpService.html":{}}}],["subscription",{"_index":966,"title":{},"body":{"components/MapComponent.html":{}}}],["substantial",{"_index":1543,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":1413,"title":{},"body":{"index.html":{}}}],["sudo",{"_index":1400,"title":{},"body":{"index.html":{}}}],["suite",{"_index":1425,"title":{},"body":{"index.html":{}}}],["super(http",{"_index":571,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["super.ngoninit",{"_index":572,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["super.onsubmit(this.http.getpath",{"_index":576,"title":{},"body":{"components/GpsComponent.html":{}}}],["super.onsubmit(this.http.gettsp",{"_index":1262,"title":{},"body":{"components/TspComponent.html":{}}}],["support",{"_index":1570,"title":{},"body":{"modules.html":{}}}],["supprime",{"_index":1149,"title":{},"body":{"injectables/MapDataService.html":{}}}],["sur",{"_index":1288,"title":{},"body":{"injectables/UserLocationService.html":{},"index.html":{}}}],["svg",{"_index":1571,"title":{},"body":{"modules.html":{}}}],["sélection",{"_index":1141,"title":{},"body":{"injectables/MapDataService.html":{}}}],["séléctionn",{"_index":1361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tab",{"_index":1209,"title":{},"body":{"components/PanelComponent.html":{}}}],["table",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["tabnumber",{"_index":404,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["taille",{"_index":936,"title":{},"body":{"components/MapComponent.html":{}}}],["take",{"_index":628,"title":{},"body":{"injectables/HttpService.html":{}}}],["take(1",{"_index":662,"title":{},"body":{"injectables/HttpService.html":{}}}],["tap",{"_index":1276,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["tats",{"_index":134,"title":{},"body":{"components/ButtonComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["terminal",{"_index":1382,"title":{},"body":{"index.html":{}}}],["terminale",{"_index":1419,"title":{},"body":{"index.html":{}}}],["tes",{"_index":1372,"title":{},"body":{"index.html":{}}}],["tester",{"_index":1403,"title":{},"body":{"index.html":{}}}],["text",{"_index":788,"title":{},"body":{"components/InputComponent.html":{},"components/MainComponent.html":{}}}],["this._value",{"_index":762,"title":{},"body":{"components/InputComponent.html":{}}}],["this.addcity",{"_index":1261,"title":{},"body":{"components/TspComponent.html":{}}}],["this.addpointerslocations(...paths.map(p",{"_index":1164,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.addpointerslocations(paths[0].startplace",{"_index":1162,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.addpointerslocations(paths[paths.length",{"_index":1169,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.and",{"_index":823,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.canvas",{"_index":998,"title":{},"body":{"components/MapComponent.html":{}}}],["this.canvas.nativeelement",{"_index":1025,"title":{},"body":{"components/MapComponent.html":{}}}],["this.canvas.nativeelement.height",{"_index":1062,"title":{},"body":{"components/MapComponent.html":{}}}],["this.canvas.nativeelement.width",{"_index":1061,"title":{},"body":{"components/MapComponent.html":{}}}],["this.canvastmp",{"_index":997,"title":{},"body":{"components/MapComponent.html":{}}}],["this.change.asobservable",{"_index":1178,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.change.next",{"_index":1179,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.citypushed.asobservable",{"_index":1180,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.citypushed.next(city",{"_index":1181,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.clearmap",{"_index":1070,"title":{},"body":{"components/MapComponent.html":{}}}],["this.container.nativeelement.children",{"_index":1017,"title":{},"body":{"components/MapComponent.html":{}}}],["this.createpopup(city.name",{"_index":1039,"title":{},"body":{"components/MapComponent.html":{}}}],["this.createrequesttsp(positions",{"_index":667,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.createtuple(positions",{"_index":669,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.ctx",{"_index":257,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.arc(position.x",{"_index":277,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.beginpath",{"_index":272,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.clearrect(0",{"_index":258,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.drawimage(this.locationpointerimage",{"_index":271,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.drawimage(this.userpointerimage",{"_index":268,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.lineto(end.x",{"_index":289,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.linewidth",{"_index":273,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.moveto(start.x",{"_index":287,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.stroke",{"_index":280,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.strokestyle",{"_index":275,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.current",{"_index":458,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/PanelComponent.html":{}}}],["this.dialog.open(erreurpopupcomponent",{"_index":828,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.drawerservice.clear",{"_index":1088,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawerservice.location(positionpixels",{"_index":1099,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawerservice.path(startpixels",{"_index":1087,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawerservice.pointer(positionpixels",{"_index":1097,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawerservice.pointeruser(positionpixels",{"_index":1092,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawerservice.setcontext(this.canvas.nativeelement.getcontext(\"2d",{"_index":1060,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawlocation",{"_index":1072,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawmap",{"_index":1002,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawpaths",{"_index":1074,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawpositions",{"_index":1073,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawuserlocation",{"_index":1071,"title":{},"body":{"components/MapComponent.html":{}}}],["this.filtercities(value.tolowercase",{"_index":773,"title":{},"body":{"components/InputComponent.html":{}}}],["this.filtered_cities",{"_index":772,"title":{},"body":{"components/InputComponent.html":{}}}],["this.flags",{"_index":827,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.getcitiesnamefromform",{"_index":487,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.getidfornewcity",{"_index":471,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.getpositionfromforms()).map(place",{"_index":500,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.getzoomstate(this.userposition",{"_index":1066,"title":{},"body":{"components/MapComponent.html":{}}}],["this.http.get('/nearestpoint",{"_index":642,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get('/path",{"_index":671,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get('/positions').subscribe((positions",{"_index":654,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get('/searchbyname",{"_index":683,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get('/tsp",{"_index":681,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.getnearestposition(new",{"_index":1034,"title":{},"body":{"components/MapComponent.html":{}}}],["this.http.getnearestposition(position",{"_index":778,"title":{},"body":{"components/InputComponent.html":{}}}],["this.http.search(cityname.tolowercase",{"_index":489,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.http.search(nearestpoint.name))[0].name",{"_index":779,"title":{},"body":{"components/InputComponent.html":{}}}],["this.http.search(value",{"_index":775,"title":{},"body":{"components/InputComponent.html":{}}}],["this.info",{"_index":822,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.initlocationpointer",{"_index":248,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.initmap",{"_index":1001,"title":{},"body":{"components/MapComponent.html":{}}}],["this.initmouseevent",{"_index":1075,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inituserpointer",{"_index":247,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.inituserposition",{"_index":1277,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.inputvalidators",{"_index":454,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["this.locationpointerimage",{"_index":254,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.locationpointerimage.onload",{"_index":256,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.locationpointerimage.src",{"_index":255,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.logservice.set(\"impossible",{"_index":646,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.logservice.set(\"la",{"_index":1283,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.logservice.set(\"une",{"_index":330,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["this.map",{"_index":1005,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.frompointtolatlng(event.clientx",{"_index":1032,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.frompointtolatlng(math.floor(window.innerwidth",{"_index":1008,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.latlngtopixel(path.endplace.posy",{"_index":1085,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.latlngtopixel(path.startplace.posy",{"_index":1082,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.latlngtopixel(position.posy",{"_index":1095,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.latlngtopixel(this.popupposition.lat",{"_index":1049,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.latlngtopixel(this.userposition.posx",{"_index":1090,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.onchange",{"_index":1015,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.onchange(updatedraw",{"_index":1076,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.overlay(this.canvas.nativeelement",{"_index":1068,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.zoom",{"_index":1007,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.addpath(...await",{"_index":511,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.mapdata.onchange().subscribe(updatedraw",{"_index":1078,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.oncitypushed().subscribe((city",{"_index":457,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.mapdata.paths",{"_index":1079,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.paths.foreach(path",{"_index":1080,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.pointerslocation",{"_index":1093,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.pointerslocation.foreach(position",{"_index":1094,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.pushcity(this.popupcity",{"_index":1057,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.resetall",{"_index":497,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.mapdataonchange",{"_index":1077,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdataonchange.unsubscribe",{"_index":1014,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapmouseclickstate",{"_index":1028,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mappa",{"_index":989,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mappa.tilemap(options",{"_index":1067,"title":{},"body":{"components/MapComponent.html":{}}}],["this.message",{"_index":821,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.ngoninit",{"_index":1026,"title":{},"body":{"components/MapComponent.html":{}}}],["this.notify",{"_index":1171,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.notifychange",{"_index":766,"title":{},"body":{"components/InputComponent.html":{}}}],["this.oninputchange(val",{"_index":765,"title":{},"body":{"components/InputComponent.html":{}}}],["this.oninputremove.emit(this.formcontrolname",{"_index":769,"title":{},"body":{"components/InputComponent.html":{}}}],["this.panelform",{"_index":573,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["this.panelform.addcontrol(formcontrolname",{"_index":473,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.panelform.removecontrol(citycontrolname",{"_index":485,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.paths",{"_index":1176,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.paths.push(...paths",{"_index":1160,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.pointerslocation",{"_index":1177,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.pointerslocation.push(...positions",{"_index":1173,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.popup.nativeelement.offsetheight",{"_index":1054,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popup.nativeelement.offsetwidth",{"_index":1052,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupcity",{"_index":1038,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupposition",{"_index":1031,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupposition.lat",{"_index":1036,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupposition.lng",{"_index":1050,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupposition.lng)).then",{"_index":1037,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupvalue.nativeelement.childnodes.length",{"_index":1043,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupvalue.nativeelement.childnodes[0",{"_index":1045,"title":{},"body":{"components/MapComponent.html":{}}}],["this.positionmapstate",{"_index":1000,"title":{},"body":{"components/MapComponent.html":{}}}],["this.positionmapstate.posx",{"_index":1064,"title":{},"body":{"components/MapComponent.html":{}}}],["this.positionmapstate.posy",{"_index":1065,"title":{},"body":{"components/MapComponent.html":{}}}],["this.positions.foreach(position",{"_index":1098,"title":{},"body":{"components/MapComponent.html":{}}}],["this.propagatechange",{"_index":768,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this._value",{"_index":771,"title":{},"body":{"components/InputComponent.html":{}}}],["this.renderer.appendchild(this.container.nativeelement",{"_index":1024,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.appendchild(this.popupvalue.nativeelement",{"_index":1046,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.createtext(name.charat(0).touppercase",{"_index":1047,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.listen(this.container.nativeelement",{"_index":1027,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.removechild(document.getelementsbytagname(\"body\").item(0",{"_index":1020,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.removechild(this.container.nativeelement",{"_index":1018,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.removechild(this.popupvalue.nativeelement",{"_index":1044,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.setstyle(this.popup.nativeelement",{"_index":1041,"title":{},"body":{"components/MapComponent.html":{}}}],["this.resetpaths",{"_index":1174,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.resetpointerslocations",{"_index":1175,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.setflags('error",{"_index":824,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.setflags('info",{"_index":826,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.setflags('warn",{"_index":825,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.tabnumber",{"_index":459,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.updatepopupposition",{"_index":1040,"title":{},"body":{"components/MapComponent.html":{}}}],["this.userlocationservice.getuserlocation().subscribe(async",{"_index":776,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["this.userpointerimage",{"_index":249,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.userpointerimage.height",{"_index":267,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.userpointerimage.onload",{"_index":253,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.userpointerimage.src",{"_index":252,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.userpointerimage.width",{"_index":263,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.userposition",{"_index":999,"title":{},"body":{"components/MapComponent.html":{},"injectables/UserLocationService.html":{}}}],["this.userposition.asobservable",{"_index":1291,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.userposition.next(new",{"_index":1280,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.userposition.next(this.defaultplace",{"_index":1287,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.userposition.posy",{"_index":1091,"title":{},"body":{"components/MapComponent.html":{}}}],["this.value",{"_index":767,"title":{},"body":{"components/InputComponent.html":{}}}],["this.valuechanges.next(this._value",{"_index":770,"title":{},"body":{"components/InputComponent.html":{}}}],["this.villessupp",{"_index":482,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.villessupp.filter(v",{"_index":483,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.villessupp.find((ville",{"_index":480,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.villessupp.length",{"_index":475,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.villessupp.push(formcontrolname",{"_index":472,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.villessupp[this.villessupp.length",{"_index":476,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.zoomstate",{"_index":1006,"title":{},"body":{"components/MapComponent.html":{}}}],["throw",{"_index":508,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["throwerror",{"_index":625,"title":{},"body":{"injectables/HttpService.html":{}}}],["tonight",{"_index":1368,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":880,"title":{},"body":{"components/MainComponent.html":{}}}],["tools",{"_index":1398,"title":{},"body":{"index.html":{}}}],["top",{"_index":858,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["tort",{"_index":1565,"title":{},"body":{"license.html":{}}}],["tous",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tout",{"_index":517,"title":{},"body":{"modules/GlobalModule.html":{},"index.html":{}}}],["toutes",{"_index":1150,"title":{},"body":{"injectables/MapDataService.html":{},"index.html":{}}}],["traitement",{"_index":395,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["transform",{"_index":169,"title":{},"body":{"pipes/CapitalizePipe.html":{},"components/InputComponent.html":{}}}],["transform(value",{"_index":170,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["transition",{"_index":861,"title":{},"body":{"components/MainComponent.html":{}}}],["transparent",{"_index":1106,"title":{},"body":{"components/MapComponent.html":{}}}],["tre",{"_index":519,"title":{},"body":{"modules/GlobalModule.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["trouve",{"_index":957,"title":{},"body":{"components/MapComponent.html":{}}}],["trouvent",{"_index":1462,"title":{},"body":{"index.html":{}}}],["true",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/InputComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1019,"title":{},"body":{"components/MapComponent.html":{}}}],["tsp",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"modules/PanelRoutingModule.html":{},"components/TspComponent.html":{},"miscellaneous/variables.html":{}}}],["tsp.component.html",{"_index":1256,"title":{},"body":{"components/TspComponent.html":{}}}],["tsp.component.scss",{"_index":1255,"title":{},"body":{"components/TspComponent.html":{}}}],["tsp/tsp.component",{"_index":1224,"title":{},"body":{"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{}}}],["tspcomponent",{"_index":59,"title":{"components/TspComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tuple",{"_index":677,"title":{},"body":{"injectables/HttpService.html":{}}}],["type",{"_index":142,"title":{},"body":{"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["télécharger",{"_index":1472,"title":{},"body":{"index.html":{}}}],["ul",{"_index":381,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["un",{"_index":129,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"classes/Path.html":{},"classes/Place.html":{},"index.html":{}}}],["undefined",{"_index":420,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["une",{"_index":686,"title":{},"body":{"injectables/HttpService.html":{},"injectables/MapDataService.html":{},"index.html":{}}}],["up",{"_index":363,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["up.component",{"_index":539,"title":{},"body":{"modules/GlobalModule.html":{},"classes/Log.html":{},"injectables/LogService.html":{}}}],["up.component.html",{"_index":365,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up.component.scss",{"_index":364,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up.component.ts",{"_index":357,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:12",{"_index":371,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up.component.ts:15",{"_index":375,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up.component.ts:16",{"_index":374,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up/erreur",{"_index":356,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["updatedraw",{"_index":1069,"title":{},"body":{"components/MapComponent.html":{}}}],["updatepopupposition",{"_index":924,"title":{},"body":{"components/MapComponent.html":{}}}],["url",{"_index":342,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interfaces/IApiRest.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["urlserveur",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1525,"title":{},"body":{"license.html":{}}}],["useexisting",{"_index":704,"title":{},"body":{"components/InputComponent.html":{}}}],["usefactory",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["userlocationservice",{"_index":725,"title":{"injectables/UserLocationService.html":{}},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["userpointericons",{"_index":224,"title":{},"body":{"injectables/DrawerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userpointerimage",{"_index":194,"title":{},"body":{"injectables/DrawerService.html":{}}}],["userposition",{"_index":910,"title":{},"body":{"components/MapComponent.html":{},"injectables/UserLocationService.html":{}}}],["utilis",{"_index":520,"title":{},"body":{"modules/GlobalModule.html":{}}}],["utilise",{"_index":299,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/functions.html":{}}}],["utils",{"_index":570,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["utils.ts",{"_index":390,"title":{},"body":{"classes/FormPanelUtils.html":{},"coverage.html":{}}}],["utils.ts:14",{"_index":427,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:15",{"_index":428,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:16",{"_index":425,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:17",{"_index":421,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:18",{"_index":423,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:19",{"_index":418,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:24",{"_index":434,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:40",{"_index":429,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:46",{"_index":431,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:54",{"_index":440,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:60",{"_index":432,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:67",{"_index":430,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:77",{"_index":437,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils/form",{"_index":389,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["utils/forms.validators.ts",{"_index":1309,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["v",{"_index":484,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["va",{"_index":1420,"title":{},"body":{"index.html":{}}}],["val",{"_index":743,"title":{},"body":{"components/InputComponent.html":{}}}],["validatorfn",{"_index":424,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":442,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["validators.minlength(1",{"_index":456,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["validators.required",{"_index":455,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["valide",{"_index":1359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":145,"title":{},"body":{"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":764,"title":{},"body":{"components/InputComponent.html":{}}}],["value.charat(0).touppercase",{"_index":177,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["value.slice(1",{"_index":178,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["valuechanges",{"_index":710,"title":{},"body":{"components/InputComponent.html":{}}}],["values",{"_index":490,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["values.length",{"_index":492,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["values.splice(1",{"_index":495,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["values.splice(values.length",{"_index":496,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["values[1",{"_index":494,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["variable",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1576,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vas",{"_index":1408,"title":{},"body":{"index.html":{}}}],["version",{"_index":1378,"title":{},"body":{"index.html":{}}}],["via",{"_index":1479,"title":{},"body":{"index.html":{}}}],["vie",{"_index":1470,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":982,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild(\"container",{"_index":992,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild(\"map",{"_index":991,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild(\"popup",{"_index":993,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild(\"popupvalue",{"_index":994,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild('container",{"_index":963,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild('map",{"_index":960,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild('popup",{"_index":972,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild('popupvalue",{"_index":976,"title":{},"body":{"components/MapComponent.html":{}}}],["ville",{"_index":481,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"miscellaneous/functions.html":{}}}],["villearrivee",{"_index":575,"title":{},"body":{"components/GpsComponent.html":{}}}],["villedepart",{"_index":574,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["villes",{"_index":504,"title":{},"body":{"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["villessupp",{"_index":405,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["void",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["voir",{"_index":1411,"title":{},"body":{"index.html":{}}}],["votre",{"_index":651,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["vous",{"_index":1371,"title":{},"body":{"index.html":{}}}],["vs",{"_index":1466,"title":{},"body":{"index.html":{}}}],["vscode",{"_index":1422,"title":{},"body":{"index.html":{}}}],["warn",{"_index":806,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["warranties",{"_index":1551,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1546,"title":{},"body":{"license.html":{}}}],["web",{"_index":1446,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1563,"title":{},"body":{"license.html":{}}}],["white",{"_index":241,"title":{},"body":{"injectables/DrawerService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"miscellaneous/variables.html":{}}}],["width",{"_index":784,"title":{},"body":{"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{}}}],["widthoffset",{"_index":262,"title":{},"body":{"injectables/DrawerService.html":{}}}],["window.innerheight",{"_index":261,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{}}}],["window.innerwidth",{"_index":260,"title":{},"body":{"injectables/DrawerService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["window:resize",{"_index":926,"title":{},"body":{"components/MapComponent.html":{}}}],["windows",{"_index":1373,"title":{},"body":{"index.html":{}}}],["without",{"_index":1520,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":1475,"title":{},"body":{"index.html":{}}}],["writevalue",{"_index":718,"title":{},"body":{"components/InputComponent.html":{}}}],["writevalue(val",{"_index":747,"title":{},"body":{"components/InputComponent.html":{}}}],["x",{"_index":665,"title":{},"body":{"injectables/HttpService.html":{}}}],["z",{"_index":855,"title":{},"body":{"components/MainComponent.html":{}}}],["zip",{"_index":626,"title":{},"body":{"injectables/HttpService.html":{}}}],["zip(...this.createrequestgps(positions",{"_index":658,"title":{},"body":{"injectables/HttpService.html":{}}}],["zone.js",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["zoomstate",{"_index":911,"title":{},"body":{"components/MapComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-app\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cl-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGlobalModule\n\nGlobalModule\n\nAppModule -->\n\nGlobalModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GlobalModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { mockBackEndInterceptorFactory } from './mock-backend/mock-backend-interceptor';\nimport { AppComponent } from './app.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { GlobalModule } from './composant/global/global.module';\nimport { LogService } from 'services/logger/log.service';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatDialogModule,\n    GlobalModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useFactory: mockBackEndInterceptorFactory,\n      deps: [LogService],\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent],\n  declarations: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: \"app\",\n    loadChildren: './composant/main/main.module#MainModule',\n  },\n  {\n    path: \"\",\n    redirectTo: \"app\",\n    pathMatch: \"full\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/global/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Composant qui affiche un bouton et gère ses états\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                disabled\n                            \n                            \n                                style\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/global/button/button.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : \"primary\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/button/button.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/button/button.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n                \n                    \n                        Type :     \"flat\" | \"icon\" | \"circle\"\n\n                    \n                \n                \n                    \n                        Default value : 'flat'\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/button/button.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : 'button'\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/button/button.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/button/button.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Composant qui affiche un bouton et gère ses états\n */\n@Component({\n  selector: 'cl-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n  @Input() disabled: boolean;\n  @Input() style: 'flat' | 'icon' | 'circle' = 'flat';\n  @Input() color = \"primary\";\n  @Input() type = 'button';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n\n    \n\n\n\n    \n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizePipe.html":{"url":"pipes/CapitalizePipe.html","title":"pipe - CapitalizePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/capitalize.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Pipe qui permet de mettre la premier lettre en majuscule\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalize\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/capitalize.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe qui permet de mettre la premier lettre en majuscule\n */\n@Pipe({\n  name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: string): string {\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DrawerService.html":{"url":"injectables/DrawerService.html","title":"injectable - DrawerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DrawerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/drawer/drawer.service.ts\n        \n\n            \n                Description\n            \n            \n                Service qui s'occupe de dessiner les différentes signalitique de la carte\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ctx\n                            \n                            \n                                    Private\n                                locationPointerImage\n                            \n                            \n                                    Private\n                                userPointerImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Private\n                                initLocationPointer\n                            \n                            \n                                    Private\n                                initUserPointer\n                            \n                            \n                                    Public\n                                location\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                pointer\n                            \n                            \n                                    Public\n                                pointerUser\n                            \n                            \n                                    Public\n                                setContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/drawer/drawer.service.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer/drawer.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initLocationPointer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initLocationPointer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer/drawer.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initUserPointer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initUserPointer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer/drawer.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            location\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    location(position: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer/drawer.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            path\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    path(start: any, end: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer/drawer.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pointer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pointer(position: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer/drawer.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pointerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pointerUser(position: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer/drawer.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setContext(context: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer/drawer.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ctx\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/drawer/drawer.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locationPointerImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLImageElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/drawer/drawer.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userPointerImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLImageElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/drawer/drawer.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserPointerIcons, LocationPointerIcons } from '../../composant/main/map/icones/icones';\n\n/**\n * Couleurs disponibles pour les dessins\n */\nconst COLORS = {\n  blue1: \"rgba(63, 81, 188, 0.9)\",\n  blue2: \"rgba(63, 81, 188, 0.7)\",\n  blue3: \"rgba(63, 81, 188, 0.5)\",\n  white: \"rgba(255, 255, 255, 0.6)\",\n};\n\n/**\n * Service qui s'occupe de dessiner les différentes signalitique de la carte\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DrawerService {\n  private userPointerImage: HTMLImageElement;\n  private locationPointerImage: HTMLImageElement;\n  private ctx;\n\n  constructor() {\n    this.initUserPointer();\n    this.initLocationPointer();\n  }\n\n  private initUserPointer() {\n    this.userPointerImage = new Image();\n    this.userPointerImage.src = UserPointerIcons;\n    this.userPointerImage.onload = () => { };\n  }\n\n  private initLocationPointer() {\n    this.locationPointerImage = new Image();\n    this.locationPointerImage.src = LocationPointerIcons;\n    this.locationPointerImage.onload = () => { };\n  }\n\n  public setContext(context: any) {\n    this.ctx = context;\n  }\n\n  public clear() {\n    this.ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n  }\n\n  public pointerUser(position: any) {\n    const widthOffset = this.userPointerImage.width / 2 - 10;\n    const heightOffset = this.userPointerImage.height / 2;\n    this.ctx.drawImage(this.userPointerImage, position.x - widthOffset, position.y - heightOffset);\n  }\n\n  public pointer(position: any) {\n    const widthOffset = this.userPointerImage.width / 2 - 10;\n    const heightOffset = this.userPointerImage.height / 2;\n    this.ctx.drawImage(this.locationPointerImage, position.x - widthOffset, position.y - heightOffset);\n  }\n\n  public location(position: any) {\n    this.ctx.beginPath();\n    this.ctx.lineWidth = \"1\";\n    this.ctx.strokeStyle = COLORS.blue1;\n    this.ctx.arc(position.x, position.y, 4, 0, 2 * Math.PI);\n    this.ctx.stroke();\n    this.ctx.beginPath();\n    this.ctx.lineWidth = \"2\";\n    this.ctx.strokeStyle = COLORS.white;\n    this.ctx.arc(position.x, position.y, 6, 0, 2 * Math.PI);\n    this.ctx.stroke();\n    this.ctx.beginPath();\n    this.ctx.lineWidth = \"2\";\n    this.ctx.strokeStyle = COLORS.blue2;\n    this.ctx.arc(position.x, position.y, 8, 0, 2 * Math.PI);\n    this.ctx.stroke();\n    this.ctx.beginPath();\n    this.ctx.lineWidth = \"1\";\n    this.ctx.strokeStyle = COLORS.blue3;\n    this.ctx.arc(position.x, position.y, 20, 0, 2 * Math.PI);\n    this.ctx.stroke();\n  }\n\n  public path(start: any, end: any) {\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = COLORS.blue1;\n    this.ctx.moveTo(start.x, start.y);\n    this.ctx.lineTo(end.x, end.y);\n    this.ctx.stroke();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/EmptyBackendInterceptor.html":{"url":"interceptors/EmptyBackendInterceptor.html","title":"interceptor - EmptyBackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  EmptyBackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mock-backend/mock-backend-interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Dans le cas où on utilise le serveur\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/mock-backend/mock-backend-interceptor.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LogService } from 'services/logger/log.service';\nimport { environment } from '../../environments/environment';\nimport { IApiRest, ApiRest } from './api';\n\n/**\n * Dans le cas où on utilise pas le serveur\n */\n@Injectable()\nclass MockBackendInterceptor implements HttpInterceptor {\n\n    constructor(private logService: LogService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        const api: IApiRest = ApiRest.find(apiRest => request.url.endsWith(apiRest.url) && request.method === apiRest.method);\n        if (api) {\n            const body = api.objectToReturn.call(undefined, request);\n            if (body) {\n                return of(new HttpResponse({ status: 200, body: body }));\n            } else {\n                this.logService.set(\"Une erreur c'est produite.\").asError().and.showPopUp().and.log();\n                return of(new HttpResponse({ status: 500, body: {} }));\n            }\n        } else {\n            this.logService.set(\"Une erreur c'est produite lors \", \" : l'url n'est pas connu : \" + request.url).asError().and.showPopUp().and.log();\n            return of(new HttpResponse({ status: 404, body: {} }));\n        }\n    }\n}\n\n/**\n * Dans le cas où on utilise le serveur\n */\n@Injectable()\nclass EmptyBackendInterceptor implements HttpInterceptor {\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        request = request.clone({\n            url: \"http://\" + environment.urlServeur + request.url\n        });\n        return next.handle(request);\n    }\n}\n\n/**\n * Permet de définir si on utilise ou non le serveur\n */\nexport function mockBackEndInterceptorFactory(logService: LogService) {\n    if (environment.isServeurMock) {\n        return new MockBackendInterceptor(logService);\n    } else {\n        return new EmptyBackendInterceptor();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErreurPopUpComponent.html":{"url":"components/ErreurPopUpComponent.html","title":"component - ErreurPopUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErreurPopUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts\n\n\n    \n        Description\n    \n    \n        Composant qui permet d'afficher un popup avec un message d'erreur\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-erreur-pop-up\n            \n\n            \n                styleUrls\n                ./erreur-pop-up.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./erreur-pop-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Composant qui permet d'afficher un popup avec un message d'erreur\n */\n@Component({\n  selector: 'cl-erreur-pop-up',\n  templateUrl: './erreur-pop-up.component.html',\n  styleUrls: ['./erreur-pop-up.component.scss']\n})\nexport class ErreurPopUpComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: { message: string }\n  ) { }\n}\n\n    \n\n    \n        Oups...\n\n  {{data.message}}\n\n\n  Ok\n\n    \n\n    \n                \n                    ./erreur-pop-up.component.scss\n                \n                ul {\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Oups...  {{data.message}}  Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErreurPopUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormPanelUtils.html":{"url":"classes/FormPanelUtils.html","title":"class - FormPanelUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormPanelUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/composant/main/panel/form-utils/form-utils.ts\n        \n\n            \n                Description\n            \n            \n                Classe comportant les fonctions permettant le traitement de formalaire de recherche de chemin\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cities\n                            \n                            \n                                    Abstract\n                                current\n                            \n                            \n                                    Public\n                                inputValidators\n                            \n                            \n                                    Public\n                                panelForm\n                            \n                            \n                                    Abstract\n                                tabNumber\n                            \n                            \n                                    Public\n                                villesSupp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCity\n                            \n                            \n                                    Private\n                                getCitiesNameFromForm\n                            \n                            \n                                    Public\n                                getIdForNewCity\n                            \n                            \n                                    Private\n                                getPositionFromForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                removeCitySupp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, mapData: MapDataService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/main/panel/form-utils/form-utils.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapData\n                                                  \n                                                        \n                                                                        MapDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputValidators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValidatorFn[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            panelForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            tabNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            villesSupp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCitiesNameFromForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCitiesNameFromForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIdForNewCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIdForNewCity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPositionFromForms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPositionFromForms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(fn: (positions: Place[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeCitySupp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCitySupp(cityToRemove)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cityToRemove\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormGroup, ValidatorFn, Validators, FormControl } from '@angular/forms';\nimport { MapDataService } from 'services/map/map-data.service';\nimport { OnInit } from '@angular/core';\nimport { Place } from 'model/place';\nimport { Path } from 'model/path';\nimport { HttpService } from 'services/http/http-service.service';\nimport { notAlreadyChoose } from './forms.validators';\nimport { LogService } from 'services/logger/log.service';\n\n/**\n * Classe comportant les fonctions permettant le traitement de formalaire de recherche de chemin\n */\nexport abstract class FormPanelUtils implements OnInit {\n    public panelForm: FormGroup;\n    public villesSupp: string[] = [];\n    public inputValidators: ValidatorFn[];\n    public cities: Place[] = undefined;\n    abstract current: number;\n    abstract tabNumber: number;\n\n    constructor(protected http: HttpService, protected mapData: MapDataService, protected logService: LogService) {\n    }\n\n    ngOnInit() {\n        this.inputValidators = [Validators.required, Validators.minLength(1), notAlreadyChoose()];\n        this.mapData.onCityPushed().subscribe((city: Place) => {\n            if (this.current === this.tabNumber) {\n                const controls = Object.values(this.panelForm.controls);\n                if (controls.length > 2) {\n                    controls.push(controls.splice(1, 1)[0]);\n                }\n                const input = controls.find(control => control.value === \"\" || control.value === null);\n                if (input) {\n                    input.setValue(city.name);\n                }\n            }\n        });\n    }\n\n    public addCity() {\n        const formControlName = `city-${this.getIdForNewCity()}`;\n        this.villesSupp.push(formControlName);\n        this.panelForm.addControl(formControlName, new FormControl(undefined, this.inputValidators));\n    }\n\n    public getIdForNewCity(): string {\n        if (this.villesSupp.length !== 0) {\n            return (+(this.villesSupp[this.villesSupp.length - 1].replace(\"city-\", \"\")) + 1).toString();\n        } else {\n            return \"0\";\n        }\n    }\n\n    public removeCitySupp(cityToRemove) {\n        const cityControlName = this.villesSupp.find((ville: string) => ville === cityToRemove);\n        this.villesSupp = this.villesSupp.filter(v => v !== cityControlName);\n        this.panelForm.removeControl(cityControlName);\n    }\n\n    private getPositionFromForms(): Promise {\n        return Promise.all(\n            this.getCitiesNameFromForm()\n                .map((cityName: string) => this.http.search(cityName.toLowerCase()))\n        );\n    }\n\n    private getCitiesNameFromForm() {\n        const values = Object.values(this.panelForm.value);\n        if (values.length > 2) {\n            const arrivelCity = values[1];\n            values.splice(1, 1);\n            values.splice(values.length, 0, arrivelCity);\n        }\n        return values;\n    }\n\n    protected async onSubmit(fn: (positions: Place[]) => Promise) {\n        this.mapData.resetAll();\n        const places: Place[] = (await this.getPositionFromForms()).map(place => place[0]);\n        places.forEach(place => {\n            if (!place) {\n                this.logService.set(\"Une des villes saisis n'existe pas.\").asError().showPopUp().and.log();\n                throw new Error(\"Ville inconnue\");\n            }\n        });\n        this.mapData.addPath(...await fn.call(this.http, places));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GlobalModule.html":{"url":"modules/GlobalModule.html","title":"module - GlobalModule","body":"\n                   \n\n\n\n\n    Modules\n    GlobalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GlobalModule\n\n\n\ncluster_GlobalModule_declarations\n\n\n\ncluster_GlobalModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nGlobalModule\n\nGlobalModule\n\nGlobalModule -->\n\nButtonComponent->GlobalModule\n\n\n\n\n\nErreurPopUpComponent\n\nErreurPopUpComponent\n\nGlobalModule -->\n\nErreurPopUpComponent->GlobalModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nGlobalModule -->\n\nInputComponent->GlobalModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nGlobalModule->ButtonComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nGlobalModule->InputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/composant/global/global.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Tout composant qui peux être utilisé dans n'importe quel partie de l'application\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            ErreurPopUpComponent\n                        \n                        \n                            InputComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ErreurPopUpComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            InputComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from './button/button.component';\nimport { InputComponent } from './input/input.component';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ErreurPopUpComponent } from './erreur-pop-up/erreur-pop-up.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n/**\n * Tout composant qui peux être utilisé dans n'importe quel partie de l'application\n */\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    InputComponent,\n    ErreurPopUpComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    PipesModule\n  ],\n  exports: [\n    ButtonComponent,\n    InputComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  entryComponents: [\n    ErreurPopUpComponent\n  ]\n})\nexport class GlobalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GpsComponent.html":{"url":"components/GpsComponent.html","title":"component - GpsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GpsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/main/panel/gps/gps.component.ts\n\n\n    \n        Description\n    \n    \n        Composant permettant le calcul gps d'un chemin\n\n    \n\n    \n        Extends\n    \n    \n                FormPanelUtils\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-gps\n            \n\n            \n                styleUrls\n                ./gps.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./gps.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tabNumber\n                            \n                            \n                                    Public\n                                cities\n                            \n                            \n                                    Abstract\n                                current\n                            \n                            \n                                    Public\n                                inputValidators\n                            \n                            \n                                    Public\n                                panelForm\n                            \n                            \n                                    Abstract\n                                tabNumber\n                            \n                            \n                                    Public\n                                villesSupp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                addCity\n                            \n                            \n                                    Private\n                                getCitiesNameFromForm\n                            \n                            \n                                    Public\n                                getIdForNewCity\n                            \n                            \n                                    Private\n                                getPositionFromForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                removeCitySupp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, mapData: MapDataService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/main/panel/gps/gps.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapData\n                                                  \n                                                        \n                                                                        MapDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        current\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/main/panel/gps/gps.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/gps/gps.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/gps/gps.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCity()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCitiesNameFromForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCitiesNameFromForm()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIdForNewCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIdForNewCity()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPositionFromForms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPositionFromForms()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(fn: (positions: Place[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeCitySupp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCitySupp(cityToRemove)\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cityToRemove\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/gps/gps.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputValidators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValidatorFn[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            panelForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            tabNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            villesSupp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { HttpService } from 'services/http/http-service.service';\nimport { MapDataService } from 'services/map/map-data.service';\nimport { FormPanelUtils } from '../form-utils/form-utils';\nimport { LogService } from 'services/logger/log.service';\n\n/**\n * Composant permettant le calcul gps d'un chemin\n */\n@Component({\n  selector: 'cl-gps',\n  templateUrl: './gps.component.html',\n  styleUrls: ['./gps.component.scss']\n})\nexport class GpsComponent extends FormPanelUtils implements OnInit {\n  @Input() current: number;\n  public tabNumber = 0;\n\n  constructor(http: HttpService, mapData: MapDataService, logService: LogService) {\n    super(http, mapData, logService);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.panelForm = new FormGroup({\n      villeDepart: new FormControl(undefined, this.inputValidators),\n      villeArrivee: new FormControl(undefined, this.inputValidators)\n    });\n  }\n\n  public async onSubmit() {\n    super.onSubmit(this.http.getPath);\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n    \n      add_circle\n    \n  \n  Rechercher\n\n    \n\n    \n                \n                    ./gps.component.scss\n                \n                :host {\n    display: block;\n    padding: 1rem;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    >* {\n        margin: auto;\n    }\n    #action-button {\n        display: flex;\n        flex-direction: row;\n        margin: .5rem auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  add_circle        Rechercher'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GpsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http/http-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Service qui permet de réalise les appeles au serveur REST.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createRequestGPS\n                            \n                            \n                                    Private\n                                createRequestTSP\n                            \n                            \n                                    Private\n                                createTuple\n                            \n                            \n                                    Public\n                                getAllPositions\n                            \n                            \n                                    Public\n                                getNearestPosition\n                            \n                            \n                                    Public\n                                getPath\n                            \n                            \n                                getTSP\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http/http-service.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createRequestGPS\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRequestGPS(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http-service.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createRequestTSP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRequestTSP(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http-service.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTuple\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTuple(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http-service.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllPositions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPositions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http-service.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNearestPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNearestPosition(positionUser: Place)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http-service.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positionUser\n                                    \n                                                Place\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPath(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http-service.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTSP\n                        \n                        \n                    \n                \n            \n            \n                \ngetTSP(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http-service.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http-service.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Path } from 'model/path';\nimport { Place } from 'model/place';\nimport { Observable, throwError, zip } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { LogService } from '../logger/log.service';\n\n/**\n * Service qui permet de réalise les appeles au serveur REST.\n * @see https://github.com/2018-19-M2GI-Metz/CL-server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient, private logService: LogService) { }\n\n  public getNearestPosition(positionUser: Place): Promise {\n    return new Promise(res => {\n      const params = new HttpParams().set('lat', positionUser.posX.toString()).set('lon', positionUser.posY.toString());\n      this.http.get('/nearestpoint', { params: params }).subscribe((position: Place) => {\n        res(position);\n      }, err => {\n        this.logService.set(\"Impossible de récuperer le point le plus proche de votre position\", err).asError().showPopUp().and.log();\n        res(undefined);\n      });\n    });\n  }\n\n  public getAllPositions(): Promise {\n    return new Promise(res => {\n      this.http.get('/positions').subscribe((positions: Place[]) => {\n        res(positions);\n      }, err => {\n        this.logService.set(\"Impossible de récuperer les positions\", err).asError().showPopUp().and.log();\n        res(undefined);\n      });\n    });\n  }\n\n  public getPath(positions: Place[]): Promise {\n    return new Promise((res, rej) => {\n      zip(...this.createRequestGPS(positions))\n        .pipe(\n          catchError(err => {\n            this.logService.set(\"Impossible de récuperer les chemins\", err).asError().showPopUp().and.log();\n            rej(undefined);\n            return throwError({});\n          }),\n          take(1)\n        )\n        .subscribe((paths: Path[][]) => {\n          res(paths.reduce((accu, x) => accu.concat(x), []));\n        });\n    });\n  }\n\n  getTSP(positions: Place[]): Promise {\n    return new Promise((res, rej) => {\n      this.createRequestTSP(positions)\n        .pipe(\n          catchError(err => {\n            this.logService.set(\"Impossible de récuperer les chemins\", err).asError().showPopUp().and.log();\n            rej(undefined);\n            return throwError({});\n          }),\n          take(1)\n        )\n        .subscribe((paths: Path[]) => {\n          res(paths);\n        });\n    });\n  }\n\n  private createRequestGPS(positions: Place[]): Observable[] {\n    return this.createTuple(positions)\n      .map(pos => this.http.get('/path', { params: new HttpParams().set('startId', pos.id1).set('endId', pos.id2) }));\n  }\n\n  private createTuple(positions: Place[]): { id1: string, id2: string }[] {\n    const tuple: { id1: string, id2: string }[] = [];\n    for (let index = 0; index  {\n    let params: HttpParams = new HttpParams();\n    positions.map(position => params = params.append('id', position.id.toString()));\n    return this.http.get('/tsp', { params: params });\n  }\n\n  public search(name: string): Promise {\n    return new Promise(res => {\n      const params: HttpParams = new HttpParams().set('name', name);\n      this.http.get('/searchbyname', { params: params }).subscribe((positions: any[]) => {\n        res(positions);\n      }, err => {\n        this.logService.set(\"Impossible de faire une recherche des villes dispo\", err).asError().and.log();\n        res(undefined);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IApiRest.html":{"url":"interfaces/IApiRest.html","title":"interface - IApiRest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IApiRest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mock-backend/api/apiRestInterface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        method\n                                \n                                \n                                        objectToReturn\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:     \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectToReturn\n                                    \n                                \n                                \n                                    \n                                        objectToReturn:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IApiRest {\n    url: string;\n    method: 'GET' | 'POST' | 'PATCH' | 'DELETE';\n    objectToReturn: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/global/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        Composant qui gère les champs d'entrées des différents panels\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                cl-input\n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filtered_cities\n                            \n                            \n                                    Private\n                                propagateChange\n                            \n                            \n                                    Private\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterCities\n                            \n                            \n                                    Public\n                                getUserLocation\n                            \n                            \n                                    Private\n                                notifyChange\n                            \n                            \n                                    Public\n                                onInputChange\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                removeInput\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                _value\n                            \n                            \n                                cities\n                            \n                            \n                                disabled\n                            \n                            \n                                formControlName\n                            \n                            \n                                placeholder\n                            \n                            \n                                removeButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onInputRemove\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, userLocationService: UserLocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/global/input/input.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        _value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cities\n                    \n                \n                \n                    \n                        Type :         Place[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeButton\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onInputRemove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            filterCities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterCities(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            notifyChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notifyChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onInputChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onInputChange(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: (val: string) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeInput()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(val: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filtered_cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            valueChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/composant/global/input/input.component.ts:35\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/composant/global/input/input.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, forwardRef, Output, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { HttpService } from 'services/http/http-service.service';\nimport { Place } from 'model/place';\nimport { UserLocationService } from 'services/user-location/user-location.service';\n\n/**\n * Composant qui gère les champs d'entrées des différents panels\n */\n@Component({\n  selector: 'cl-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent implements ControlValueAccessor {\n  @Input() placeholder: string;\n  @Input() disabled = false;\n  @Input() removeButton = false;\n  @Input() _value: string;\n  @Input() formControlName: string;\n  @Input() cities: Place[];\n  @Output() onInputRemove: EventEmitter = new EventEmitter();\n  public filtered_cities: Promise;\n  private valueChanges: Subject = new Subject();\n  private propagateChange = (_: any) => { };\n\n  get value(): string {\n    return this._value;\n  }\n\n  set value(val: string) {\n    this._value = val;\n    this.onInputChange(val);\n    this.notifyChange();\n  }\n\n  constructor(private http: HttpService, private userLocationService: UserLocationService) { }\n\n  public writeValue(val: string) {\n    this.value = val;\n  }\n\n  public registerOnChange(fn: (val: string) => void) {\n    this.propagateChange = fn;\n  }\n\n  public registerOnTouched() { }\n\n  public removeInput() {\n    this.onInputRemove.emit(this.formControlName);\n  }\n\n  private notifyChange() {\n    this.valueChanges.next(this._value);\n    this.propagateChange(this._value);\n  }\n\n  public onInputChange(value: string) {\n    if (value) {\n      this.filtered_cities = this.filterCities(value.toLowerCase());\n    } else {\n      this.filtered_cities = Promise.resolve([]);\n    }\n  }\n\n  private filterCities(value: string): Promise {\n    return this.http.search(value);\n  }\n\n  public getUserLocation() {\n    this.userLocationService.getUserLocation().subscribe(async (position: Place) => {\n      const nearestPoint: Place = await this.http.getNearestPosition(position);\n      this.value = (await this.http.search(nearestPoint.name))[0].name;\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        my_location\n    \n    \n    \n        close\n    \n    \n        remove_circle_outline\n    \n    \n        \n            {{city.name | capitalize}}\n        \n    \n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                :host {\n    width: 100%;\n}\n\nmat-form-field {\n    width: 100%;\n}\n\ninput {\n    text-transform: capitalize;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            my_location                    close                remove_circle_outline                            {{city.name | capitalize}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Log.html":{"url":"classes/Log.html","title":"class - Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/logger/log.service.ts\n        \n\n            \n                Description\n            \n            \n                Classe représentant un logger\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                and\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                flags\n                            \n                            \n                                    Private\n                                info\n                            \n                            \n                                    Private\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asError\n                            \n                            \n                                    Public\n                                asInfo\n                            \n                            \n                                    Public\n                                asWarn\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Private\n                                setFlags\n                            \n                            \n                                    Public\n                                showPopUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, message: string, info: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/logger/log.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            and\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Log\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/logger/log.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/logger/log.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            flags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"error\" | \"warn\" | \"info\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/logger/log.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            info\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/logger/log.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/logger/log.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            asError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    asError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/log.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            asInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    asInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/log.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            asWarn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    asWarn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/log.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/log.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setFlags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFlags(flags: \"error\" | \"warn\" | \"info\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/log.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flags\n                                    \n                                            \"error\" | \"warn\" | \"info\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showPopUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showPopUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/log.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ErreurPopUpComponent } from \"../../composant/global/erreur-pop-up/erreur-pop-up.component\";\n\n/**\n * Service qui s'occupe de logger les informations\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogService {\n    constructor(private dialog: MatDialog) {\n    }\n\n    set(message: string, info: any = {}) {\n        return new Log(this.dialog, message, info);\n    }\n}\n\n/**\n * Classe représentant un logger\n */\nclass Log {\n    private message: string;\n    private info: any;\n    public and: Log;\n    private flags: 'error' | 'warn' | 'info';\n\n    constructor(public dialog: MatDialog, message: string, info: any) {\n        this.message = message;\n        this.info = info;\n        this.and = this;\n    }\n\n    public asError() {\n        this.setFlags('error');\n        return this;\n    }\n\n    public asWarn() {\n        this.setFlags('warn');\n        return this;\n    }\n\n    public asInfo() {\n        this.setFlags('info');\n        return this;\n    }\n\n    private setFlags(flags: 'error' | 'warn' | 'info') {\n        this.flags = flags;\n    }\n\n    public showPopUp() {\n        this.dialog.open(ErreurPopUpComponent, {\n            data: { message: this.message }\n        });\n        return this;\n    }\n\n    public log() {\n        console[this.flags](this.message, this.info);\n        return this;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/logger/log.service.ts\n        \n\n            \n                Description\n            \n            \n                Service qui s'occupe de logger les informations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/logger/log.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(message: string, info: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logger/log.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Log\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ErreurPopUpComponent } from \"../../composant/global/erreur-pop-up/erreur-pop-up.component\";\n\n/**\n * Service qui s'occupe de logger les informations\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogService {\n    constructor(private dialog: MatDialog) {\n    }\n\n    set(message: string, info: any = {}) {\n        return new Log(this.dialog, message, info);\n    }\n}\n\n/**\n * Classe représentant un logger\n */\nclass Log {\n    private message: string;\n    private info: any;\n    public and: Log;\n    private flags: 'error' | 'warn' | 'info';\n\n    constructor(public dialog: MatDialog, message: string, info: any) {\n        this.message = message;\n        this.info = info;\n        this.and = this;\n    }\n\n    public asError() {\n        this.setFlags('error');\n        return this;\n    }\n\n    public asWarn() {\n        this.setFlags('warn');\n        return this;\n    }\n\n    public asInfo() {\n        this.setFlags('info');\n        return this;\n    }\n\n    private setFlags(flags: 'error' | 'warn' | 'info') {\n        this.flags = flags;\n    }\n\n    public showPopUp() {\n        this.dialog.open(ErreurPopUpComponent, {\n            data: { message: this.message }\n        });\n        return this;\n    }\n\n    public log() {\n        console[this.flags](this.message, this.info);\n        return this;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/main/main.component.ts\n\n\n    \n        Description\n    \n    \n        Fenetre principal de l'application\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-main\n            \n\n            \n                styleUrls\n                ./main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isMenuOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closePanel\n                            \n                            \n                                    Public\n                                getMenuProperties\n                            \n                            \n                                    Public\n                                isSmallScreen\n                            \n                            \n                                    Public\n                                openPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closePanel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/main.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenuProperties\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuProperties()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/main.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { 'display': string; 'width': string; } | { 'display'?: undefined; 'width'?: undefined; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isSmallScreen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isSmallScreen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/main.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openPanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openPanel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/main.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isMenuOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/main.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Fenetre principal de l'application\n */\n@Component({\n  selector: 'cl-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent {\n  private isMenuOpen = false;\n\n  public isSmallScreen() {\n    return window.innerWidth \n    \n\n    \n        \n    M2GI Map\n    \n    \n        directions\n    \n    \n        map\n    \n\n\n\n\n    Documentation\n\n    \n\n    \n                \n                    ./main.component.scss\n                \n                :host {\n    display: block;\n    height: 100%;\n    width: 100%;\n    position: relative;\n}\n\ncl-map {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n}\n\ncl-panel {\n    z-index: 1000;\n    right: 1rem;\n    top: 5%;\n    width: 20%;\n    height: 90%;\n    position: absolute;\n    transition: width 1.5s;\n}\n\n#doc {\n    background-color: white;\n    color: cornflowerblue;\n    width: auto;\n    position: absolute;\n    float: bottom;\n    z-index: 500;\n    left: 10px;\n    bottom: 10px;\n    padding: .2rem;\n    border-radius: 4px;\n    a {\n        text-decoration: none;\n    }\n}\n\n@media (max-width: 900px) {\n    cl-panel {\n        width: 30%;\n    }\n}\n\n@media (max-width: 640px) {\n    mat-toolbar {\n        width: 100%;\n    }\n    #fill {\n        flex: 1 1 auto;\n    }\n    cl-panel {\n        z-index: 1000;\n        top: 56px;\n        right: 0;\n        height: 100%;\n        position: absolute;\n        transition: width 1s;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    M2GI Map                directions                map        Documentation'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_imports\n\n\n\n\nMainComponent\n\nMainComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainComponent->MainModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nMainModule -->\n\nMapModule->MainModule\n\n\n\n\n\nPanelModule\n\nPanelModule\n\nMainModule -->\n\nPanelModule->MainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/composant/main/main.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MapModule\n                        \n                        \n                            PanelModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainComponent } from './main.component';\nimport { MapModule } from './map/map.module';\nimport { PanelModule } from './panel/panel.module';\nimport { RouterModule } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [MainComponent],\n  imports: [\n    MapModule,\n    PanelModule,\n    CommonModule,\n    RouterModule.forChild([{\n      path: \"\",\n      component: MainComponent\n    }]),\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule\n  ]\n})\nexport class MainModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/main/map/map.component.ts\n\n\n    \n        Description\n    \n    \n        Composant qui gère la carte\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvas\n                            \n                            \n                                    Private\n                                canvasTmp\n                            \n                            \n                                container\n                            \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Private\n                                mapDataOnChange\n                            \n                            \n                                    Private\n                                mapMouseClickState\n                            \n                            \n                                    Private\n                                mappa\n                            \n                            \n                                popup\n                            \n                            \n                                    Private\n                                popupCity\n                            \n                            \n                                    Private\n                                popupPosition\n                            \n                            \n                                popupValue\n                            \n                            \n                                    Private\n                                positionMapState\n                            \n                            \n                                    Private\n                                positions\n                            \n                            \n                                    Private\n                                userPosition\n                            \n                            \n                                    Private\n                                zoomState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMap\n                            \n                            \n                                    Private\n                                createPopUp\n                            \n                            \n                                    Private\n                                drawLocation\n                            \n                            \n                                    Private\n                                drawMap\n                            \n                            \n                                    Private\n                                drawPaths\n                            \n                            \n                                    Private\n                                drawPositions\n                            \n                            \n                                    Private\n                                    Async\n                                drawUserLocation\n                            \n                            \n                                    Public\n                                fermerPopUp\n                            \n                            \n                                    Private\n                                getZoomState\n                            \n                            \n                                    Private\n                                initMap\n                            \n                            \n                                    Private\n                                initMouseEvent\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setLocalisation\n                            \n                            \n                                    Private\n                                updatePopUpPosition\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userLocationService: UserLocationService, drawerService: DrawerService, mapData: MapDataService, renderer: Renderer2, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/main/map/map.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drawerService\n                                                  \n                                                        \n                                                                        DrawerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapData\n                                                  \n                                                        \n                                                                        MapDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:64\n                \n            \n\n\n            \n                \n                    S'execute lorsque l'utilisateur modifie la taille de la fenetre\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createPopUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPopUp(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawPaths\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawPaths()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawPositions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawPositions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            drawUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fermerPopUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fermerPopUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getZoomState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getZoomState(userPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPosition\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initMouseEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initMouseEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocalisation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocalisation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:136\n                \n            \n\n\n            \n                \n                    Notifie les panels que l'on choisis la ville qui se trouve dans le popup\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updatePopUpPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePopUpPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('map')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasTmp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapDataOnChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapMouseClickState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     undefined | \"mouseDown\" | \"mouseMove\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappa\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popupCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popupPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popupValue')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            positionMapState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            positions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            zoomState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, HostListener, Renderer2 } from '@angular/core';\nimport * as mappaMundi from 'mappa-mundi';\nimport { Place } from 'model/place';\nimport { UserLocationService } from 'services/user-location/user-location.service';\nimport { DrawerService } from 'services/drawer/drawer.service';\nimport { MapDataService } from 'services/map/map-data.service';\nimport { Subscription } from 'rxjs';\nimport { HttpService } from 'services/http/http-service.service';\n\nconst KEY = 'pk.eyJ1IjoiZGFuaWVscGF5ZXQiLCJhIjoiY2pvem1leGF0Mm1hOTN3cGhmbHM0b3p2ayJ9.s0Gdr8eabQi56tHONKv1Sg';\n\n/**\n * Composant qui gère la carte\n */\n@Component({\n  selector: 'cl-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  constructor(\n    private userLocationService: UserLocationService,\n    private drawerService: DrawerService,\n    private mapData: MapDataService,\n    private renderer: Renderer2,\n    private http: HttpService\n  ) {\n    this.mappa = new mappaMundi('Mapbox', KEY);\n  }\n  @ViewChild(\"map\") canvas: ElementRef;\n  @ViewChild(\"container\") container: ElementRef;\n  @ViewChild(\"popup\") popup: ElementRef;\n  @ViewChild(\"popupValue\") popupValue: ElementRef;\n\n  private map;\n  private positions: Place[] = [];\n  private userPosition: Place;\n  private canvasTmp: ElementRef;\n  private mapDataOnChange: Subscription;\n  private zoomState: number = undefined;\n  private positionMapState: Place = undefined;\n  private mappa;\n\n  private mapMouseClickState: undefined | \"mouseDown\" | \"mouseMove\";\n\n  private popupPosition: { lat: number, lng: number };\n  private popupCity: Place;\n\n  async ngOnInit() {\n    this.canvasTmp = this.canvas;\n    this.userLocationService.getUserLocation().subscribe(async (position: Place) => {\n      this.userPosition = position;\n      this.positionMapState = position;\n      await this.initMap();\n      this.drawMap();\n    });\n  }\n\n  /**\n   * S'execute lorsque l'utilisateur modifie la taille de la fenetre\n   */\n  @HostListener('window:resize')\n  public onResize() {\n    if (this.map) {\n      this.zoomState = this.map.zoom();\n      const position = this.map.fromPointToLatLng(Math.floor(window.innerWidth / 2), Math.floor(window.innerHeight / 2));\n      this.positionMapState = new Place(undefined, \"current_Position\", position.lat, position.lng);\n      this.mapDataOnChange.unsubscribe();\n      this.map.onChange(() => { });\n    }\n    for (const child of this.container.nativeElement.children) {\n      this.renderer.removeChild(this.container.nativeElement, child);\n    }\n    this.canvas = this.canvasTmp;\n    try {\n      this.renderer.removeChild(document.getElementsByTagName(\"body\").item(0), document.getElementById(\"Mapbox\"));\n    } catch (e) { }\n    this.renderer.appendChild(this.container.nativeElement, this.canvas.nativeElement);\n    this.ngOnInit();\n  }\n\n  private initMouseEvent() {\n    this.renderer.listen(this.container.nativeElement, 'mousedown', () => {\n      this.mapMouseClickState = \"mouseDown\";\n    });\n    this.renderer.listen(this.container.nativeElement, 'mousemove', () => {\n      if (this.mapMouseClickState === \"mouseDown\") {\n        this.mapMouseClickState = \"mouseMove\";\n      }\n    });\n    this.renderer.listen(this.container.nativeElement, 'mouseup', (event) => {\n      if (this.mapMouseClickState === \"mouseDown\") {\n        this.mapMouseClickState = \"mouseMove\";\n        this.popupPosition = this.map.fromPointToLatLng(event.clientX, event.clientY);\n        this.http.getNearestPosition(new Place(null, null, this.popupPosition.lat, this.popupPosition.lng)).then(\n          (city: Place) => {\n            this.popupCity = city;\n            this.createPopUp(city.name);\n            this.updatePopUpPosition();\n          });\n        this.mapMouseClickState = undefined;\n      }\n    });\n  }\n\n  private createPopUp(name: string) {\n    this.renderer.setStyle(this.popup.nativeElement, \"display\", \"initial\");\n    if (this.popupValue.nativeElement.childNodes.length > 0) {\n      this.renderer.removeChild(this.popupValue.nativeElement, this.popupValue.nativeElement.childNodes[0]);\n    }\n    this.renderer.appendChild(this.popupValue.nativeElement, this.renderer.createText(name.charAt(0).toUpperCase() + name.slice(1)));\n  }\n\n  public fermerPopUp() {\n    this.renderer.setStyle(this.popup.nativeElement, \"display\", \"none\");\n    if (this.popupValue.nativeElement.childNodes.length > 0) {\n      this.renderer.removeChild(this.popupValue.nativeElement, this.popupValue.nativeElement.childNodes[0]);\n    }\n    this.popupPosition = undefined;\n  }\n\n  private updatePopUpPosition() {\n    if (this.popupPosition) {\n      const position = this.map.latLngToPixel(this.popupPosition.lat, this.popupPosition.lng);\n      const sizeX = this.popup.nativeElement.offsetWidth / 2;\n      const sizeY = this.popup.nativeElement.offsetHeight;\n      this.renderer.setStyle(this.popup.nativeElement, \"top\", `${position.y - sizeY}px`);\n      this.renderer.setStyle(this.popup.nativeElement, \"left\", `${position.x - sizeX}px`);\n    }\n  }\n\n  /**\n   * Notifie les panels que l'on choisis la ville qui se trouve dans le popup\n   */\n  public setLocalisation() {\n    this.mapData.pushCity(this.popupCity);\n  }\n\n  private initMap(): Promise {\n    return new Promise(async (res) => {\n      this.drawerService.setContext(this.canvas.nativeElement.getContext(\"2d\"));\n      this.canvas.nativeElement.width = window.innerWidth;\n      this.canvas.nativeElement.height = window.innerHeight;\n      const options = {\n        lat: this.positionMapState.posX,\n        lng: this.positionMapState.posY,\n        zoom: this.getZoomState(this.userPosition)\n      };\n      this.map = this.mappa.tileMap(options);\n      this.map.overlay(this.canvas.nativeElement);\n      res();\n    });\n  }\n\n  private getZoomState(userPosition): number {\n    return this.zoomState || (userPosition ? 10 : 6);\n  }\n\n  private drawMap() {\n    const updateDraw = () => {\n      this.clearMap();\n      this.drawUserLocation();\n      this.drawLocation();\n      this.drawPositions();\n      this.drawPaths();\n      this.updatePopUpPosition();\n      this.initMouseEvent();\n    };\n    if (this.map) {\n      this.map.onChange(updateDraw);\n      this.mapDataOnChange = this.mapData.onChange().subscribe(updateDraw);\n    }\n  }\n\n  private drawPaths() {\n    if (this.mapData.paths) {\n      this.mapData.paths.forEach(path => {\n        const startPixels = this.map.latLngToPixel(path.startPlace.posY, path.startPlace.posX);\n        const endPixels = this.map.latLngToPixel(path.endPlace.posY, path.endPlace.posX);\n        this.drawerService.path(startPixels, endPixels);\n      });\n    }\n  }\n\n  private clearMap() {\n    this.drawerService.clear();\n  }\n\n  private async drawUserLocation() {\n    if (this.userPosition) {\n      const positionPixels = this.map.latLngToPixel(this.userPosition.posX, this.userPosition.posY);\n      this.drawerService.pointerUser(positionPixels);\n    }\n  }\n\n  private drawLocation() {\n    if (this.mapData.pointersLocation) {\n      this.mapData.pointersLocation.forEach(position => {\n        const positionPixels = this.map.latLngToPixel(position.posY, position.posX);\n        this.drawerService.pointer(positionPixels);\n      });\n    }\n  }\n\n  private drawPositions() {\n    this.positions.forEach(position => {\n      const positionPixels = this.map.latLngToPixel(position.posY, position.posX);\n      this.drawerService.location(positionPixels);\n    });\n  }\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n        \n            my_location\n        \n        \n    \n    \n        close\n    \n    \n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                :host {\n    display: block;\n}\n\n.popUp {\n    background-color: white;\n    padding: 10px 25px 10px 10px;\n    border-radius: 4px;\n    display: inline-block;\n}\n\n.arrow-down {\n    width: 0;\n    height: 0;\n    border-left: 15px solid transparent;\n    border-right: 15px solid transparent;\n    border-top: 15px solid white;\n    margin: auto;\n}\n\n.closePopUp {\n    position: relative;\n    right: 20px;\n    top: -20px;\n    background: white;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            my_location                                close        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapDataService.html":{"url":"injectables/MapDataService.html","title":"injectable - MapDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/map/map-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Service qui permet la liaison entre la map et les panels\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Private\n                                cityPushed\n                            \n                            \n                                    Public\n                                paths\n                            \n                            \n                                    Public\n                                pointersLocation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPath\n                            \n                            \n                                    Private\n                                addPointersLocations\n                            \n                            \n                                    Private\n                                notify\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onCityPushed\n                            \n                            \n                                    Public\n                                pushCity\n                            \n                            \n                                    Public\n                                resetAll\n                            \n                            \n                                    Private\n                                resetPaths\n                            \n                            \n                                    Private\n                                resetPointersLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPath(paths: Path[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map/map-data.service.ts:22\n                \n            \n\n\n            \n                \n                    Ajoute un ou plusieurs chemin à dessiner\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                                Path[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nchemin(s) a ajouter\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addPointersLocations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPointersLocations(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map/map-data.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            notify\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map/map-data.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map/map-data.service.ts:63\n                \n            \n\n\n            \n                \n                    Permet d'écouter n'importe quel changement dans les données liées a la carte\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onCityPushed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onCityPushed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map/map-data.service.ts:74\n                \n            \n\n\n            \n                \n                    Permet d'écouter une sélection d'une ville depuis la carte\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pushCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pushCity(city: Place)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map/map-data.service.ts:82\n                \n            \n\n\n            \n                \n                    Ajouter une nouvelle ville en sélection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                Place\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        à selectionner\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map/map-data.service.ts:45\n                \n            \n\n\n            \n                \n                    Supprime toutes les données de la précédente recherche.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetPaths\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPaths()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map/map-data.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetPointersLocations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPointersLocations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map/map-data.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map/map-data.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cityPushed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map/map-data.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            paths\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map/map-data.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pointersLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map/map-data.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Path } from 'model/path';\nimport { Place } from 'model/place';\nimport { Subject } from 'rxjs';\n\n/**\n * Service qui permet la liaison entre la map et les panels\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapDataService {\n  public paths: Path[] = [];\n  public pointersLocation: Place[] = [];\n  private change: Subject = new Subject();\n  private cityPushed: Subject = new Subject();\n\n  /**\n   * Ajoute un ou plusieurs chemin à dessiner\n   * @param paths - chemin(s) a ajouter\n   */\n  public addPath(...paths: Path[]) {\n    this.paths.push(...paths);\n    if (paths.length === 1) {\n      this.addPointersLocations(paths[0].startPlace, paths[0].endPlace);\n    } else {\n      this.addPointersLocations(...paths.map(p => p.startPlace));\n      if (paths[0].startPlace.id !== paths[paths.length - 1].endPlace.id) {\n        this.addPointersLocations(paths[paths.length - 1].endPlace);\n      }\n    }\n    this.notify();\n  }\n\n\n\n  private addPointersLocations(...positions: Place[]) {\n    this.pointersLocation.push(...positions);\n    this.notify();\n  }\n\n  /**\n   * Supprime toutes les données de la précédente recherche.\n   */\n  public resetAll() {\n    this.resetPaths();\n    this.resetPointersLocations();\n  }\n\n  private resetPaths() {\n    this.paths = [];\n    this.notify();\n  }\n\n  private resetPointersLocations() {\n    this.pointersLocation = [];\n    this.notify();\n  }\n\n  /**\n   * Permet d'écouter n'importe quel changement dans les données liées a la carte\n   */\n  public onChange() {\n    return this.change.asObservable();\n  }\n\n  private notify() {\n    this.change.next();\n  }\n\n  /**\n   * Permet d'écouter une sélection d'une ville depuis la carte\n   */\n  public onCityPushed() {\n    return this.cityPushed.asObservable();\n  }\n\n  /**\n   * Ajouter une nouvelle ville en sélection\n   * @param city à selectionner\n   */\n  public pushCity(city: Place) {\n    this.cityPushed.next(city);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n    Modules\n    MapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/composant/main/map/map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [MapComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule\n  ],\n  exports: [\n    MapComponent\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/MockBackendInterceptor.html":{"url":"interceptors/MockBackendInterceptor.html","title":"interceptor - MockBackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  MockBackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mock-backend/mock-backend-interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Dans le cas où on utilise pas le serveur\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mock-backend/mock-backend-interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/mock-backend/mock-backend-interceptor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LogService } from 'services/logger/log.service';\nimport { environment } from '../../environments/environment';\nimport { IApiRest, ApiRest } from './api';\n\n/**\n * Dans le cas où on utilise pas le serveur\n */\n@Injectable()\nclass MockBackendInterceptor implements HttpInterceptor {\n\n    constructor(private logService: LogService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        const api: IApiRest = ApiRest.find(apiRest => request.url.endsWith(apiRest.url) && request.method === apiRest.method);\n        if (api) {\n            const body = api.objectToReturn.call(undefined, request);\n            if (body) {\n                return of(new HttpResponse({ status: 200, body: body }));\n            } else {\n                this.logService.set(\"Une erreur c'est produite.\").asError().and.showPopUp().and.log();\n                return of(new HttpResponse({ status: 500, body: {} }));\n            }\n        } else {\n            this.logService.set(\"Une erreur c'est produite lors \", \" : l'url n'est pas connu : \" + request.url).asError().and.showPopUp().and.log();\n            return of(new HttpResponse({ status: 404, body: {} }));\n        }\n    }\n}\n\n/**\n * Dans le cas où on utilise le serveur\n */\n@Injectable()\nclass EmptyBackendInterceptor implements HttpInterceptor {\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        request = request.clone({\n            url: \"http://\" + environment.urlServeur + request.url\n        });\n        return next.handle(request);\n    }\n}\n\n/**\n * Permet de définir si on utilise ou non le serveur\n */\nexport function mockBackEndInterceptorFactory(logService: LogService) {\n    if (environment.isServeurMock) {\n        return new MockBackendInterceptor(logService);\n    } else {\n        return new EmptyBackendInterceptor();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PanelComponent.html":{"url":"components/PanelComponent.html","title":"component - PanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/main/panel/panel.component.ts\n\n\n    \n        Description\n    \n    \n        Composant qui contient les panneaux de recherche\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-panel\n            \n\n            \n                styleUrls\n                ./panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setCurrentTab\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrentTab\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentTab(index)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/panel.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/panel.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Composant qui contient les panneaux de recherche\n */\n@Component({\n  selector: 'cl-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent {\n  public current = 0;\n\n  public setCurrentTab(index) {\n    this.current = index;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./panel.component.scss\n                \n                :host {\n    display: block;\n    background-color: white;\n    box-shadow: 0px 0px 1px grey;\n    overflow: auto;\n}\n\n::ng-deep.mat-tab-label,\n::ng-deep.mat-tab-label-active {\n    min-width: 45% !important;\n    padding: 3px !important;\n    margin: 3px !important;\n}\n\n@media (max-width: 640px) {\n    ::ng-deep.mat-tab-label,\n    ::ng-deep.mat-tab-label-active {\n        min-width: 30% !important;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PanelModule.html":{"url":"modules/PanelModule.html","title":"module - PanelModule","body":"\n                   \n\n\n\n\n    Modules\n    PanelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PanelModule\n\n\n\ncluster_PanelModule_declarations\n\n\n\ncluster_PanelModule_imports\n\n\n\ncluster_PanelModule_exports\n\n\n\n\nGpsComponent\n\nGpsComponent\n\n\n\nPanelModule\n\nPanelModule\n\nPanelModule -->\n\nGpsComponent->PanelModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nPanelModule -->\n\nPanelComponent->PanelModule\n\n\n\n\n\nTspComponent\n\nTspComponent\n\nPanelModule -->\n\nTspComponent->PanelModule\n\n\n\n\n\nPanelComponent \n\nPanelComponent \n\nPanelComponent  -->\n\nPanelModule->PanelComponent \n\n\n\n\n\nGlobalModule\n\nGlobalModule\n\nPanelModule -->\n\nGlobalModule->PanelModule\n\n\n\n\n\nPanelRoutingModule\n\nPanelRoutingModule\n\nPanelModule -->\n\nPanelRoutingModule->PanelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/composant/main/panel/panel.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GpsComponent\n                        \n                        \n                            PanelComponent\n                        \n                        \n                            TspComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GlobalModule\n                        \n                        \n                            PanelRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PanelComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PanelRoutingModule } from './panel-routing.module';\nimport { PanelComponent } from './panel.component';\nimport { GpsComponent } from './gps/gps.component';\nimport { TspComponent } from './tsp/tsp.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { GlobalModule } from '../../global/global.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [PanelComponent, GpsComponent, TspComponent],\n  imports: [\n    CommonModule,\n    PanelRoutingModule,\n    MatTabsModule,\n    GlobalModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule\n  ],\n  exports: [\n    PanelComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class PanelModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PanelRoutingModule.html":{"url":"modules/PanelRoutingModule.html","title":"module - PanelRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PanelRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/composant/main/panel/panel-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GpsComponent } from './gps/gps.component';\nimport { TspComponent } from './tsp/tsp.component';\n\nconst routes: Routes = [{\n  path: \"*\",\n  pathMatch: \"full\",\n  redirectTo: \"gps\",\n  outlet: 'panel'\n},\n{\n  path: \"gps\",\n  component: GpsComponent,\n  outlet: 'panel'\n},\n{\n  path: \"tsp\",\n  component: TspComponent,\n  outlet: 'panel'\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PanelRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Path.html":{"url":"classes/Path.html","title":"class - Path","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Path\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/path.ts\n        \n\n            \n                Description\n            \n            \n                Représente un chemin entre deux lieux\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endPlace\n                            \n                            \n                                startPlace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endPlace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/path.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startPlace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/path.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Place } from './place';\n\n/**\n * Représente un chemin entre deux lieux\n * @see Place\n */\nexport class Path {\n  startPlace: Place;\n  endPlace: Place;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nCapitalizePipe\n\nCapitalizePipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nCapitalizePipe->PipesModule\n\n\n\n\n\nCapitalizePipe \n\nCapitalizePipe \n\nCapitalizePipe  -->\n\nPipesModule->CapitalizePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CapitalizePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CapitalizePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CapitalizePipe } from './capitalize.pipe';\n\n@NgModule({\n  declarations: [CapitalizePipe],\n  exports: [CapitalizePipe],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PipesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Place.html":{"url":"classes/Place.html","title":"class - Place","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Place\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/place.ts\n        \n\n            \n                Description\n            \n            \n                Représente un lieu\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                posX\n                            \n                            \n                                    Public\n                                posY\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, posX: number, posY: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/place.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        posX\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        posY\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/place.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/place.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            posX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/place.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            posY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/place.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Place {\n  constructor(public id: number, public name: string, public posX: number, public posY: number) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TspComponent.html":{"url":"components/TspComponent.html","title":"component - TspComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TspComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/main/panel/tsp/tsp.component.ts\n\n\n    \n        Description\n    \n    \n        Composant qui permet le calcul du chemin TSP\n\n    \n\n    \n        Extends\n    \n    \n                FormPanelUtils\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-tsp\n            \n\n            \n                styleUrls\n                ./tsp.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tsp.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tabNumber\n                            \n                            \n                                    Public\n                                cities\n                            \n                            \n                                    Abstract\n                                current\n                            \n                            \n                                    Public\n                                inputValidators\n                            \n                            \n                                    Public\n                                panelForm\n                            \n                            \n                                    Abstract\n                                tabNumber\n                            \n                            \n                                    Public\n                                villesSupp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                addCity\n                            \n                            \n                                    Private\n                                getCitiesNameFromForm\n                            \n                            \n                                    Public\n                                getIdForNewCity\n                            \n                            \n                                    Private\n                                getPositionFromForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                removeCitySupp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, mapData: MapDataService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/main/panel/tsp/tsp.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapData\n                                                  \n                                                        \n                                                                        MapDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        current\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/main/panel/tsp/tsp.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/tsp/tsp.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/tsp/tsp.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCity()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCitiesNameFromForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCitiesNameFromForm()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIdForNewCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIdForNewCity()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPositionFromForms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPositionFromForms()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(fn: (positions: Place[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeCitySupp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCitySupp(cityToRemove)\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cityToRemove\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/tsp/tsp.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputValidators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValidatorFn[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            panelForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            tabNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            villesSupp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { HttpService } from 'services/http/http-service.service';\nimport { MapDataService } from 'services/map/map-data.service';\nimport { FormPanelUtils } from '../form-utils/form-utils';\nimport { LogService } from 'services/logger/log.service';\n\n/**\n * Composant qui permet le calcul du chemin TSP\n */\n@Component({\n  selector: 'cl-tsp',\n  templateUrl: './tsp.component.html',\n  styleUrls: ['./tsp.component.scss']\n})\nexport class TspComponent extends FormPanelUtils implements OnInit {\n  @Input() current: number;\n  public tabNumber = 1;\n\n  constructor(http: HttpService, mapData: MapDataService, logService: LogService) {\n    super(http, mapData, logService);\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.panelForm = new FormGroup({\n      villeDepart: new FormControl(undefined, this.inputValidators)\n    });\n    this.addCity();\n  }\n  public async onSubmit() {\n    super.onSubmit(this.http.getTSP);\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n  \n\n  \n    \n      add_circle\n    \n  \n\n  Calculer\n\n    \n\n    \n                \n                    ./tsp.component.scss\n                \n                :host {\n    display: block;\n    padding: 1rem;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    >* {\n        margin: auto;\n    }\n    #action-button {\n        display: flex;\n        flex-direction: row;\n        margin: 1rem auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  add_circle        Calculer'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TspComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLocationService.html":{"url":"injectables/UserLocationService.html","title":"injectable - UserLocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-location/user-location.service.ts\n        \n\n            \n                Description\n            \n            \n                Service permettant la gestion de la position de l'utilisateur\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                defaultPlace\n                            \n                            \n                                    Private\n                                userPosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUserLocation\n                            \n                            \n                                    Public\n                                initUserPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-location/user-location.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-location/user-location.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        la position de l'utilisateur\nSi position indisponible Place(undefined, undefined, 0, 0)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initUserPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initUserPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-location/user-location.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            defaultPlace\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Place(undefined, undefined, 0, 0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location/user-location.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReplaySubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user-location/user-location.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Place } from 'model/place';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { LogService } from 'services/logger/log.service';\nimport { tap } from 'rxjs/operators';\n\n/**\n * Service permettant la gestion de la position de l'utilisateur\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLocationService {\n  private userPosition: ReplaySubject;\n  private readonly defaultPlace = new Place(undefined, undefined, 0, 0);\n\n  constructor(private logService: LogService) {\n    this.userPosition = new ReplaySubject();\n    this.initUserPosition();\n  }\n\n  public initUserPosition() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.userPosition.next(new Place(undefined, undefined, position.coords.latitude, position.coords.longitude));\n      },\n        err => {\n          this.logService.set(\"La geolocation n'est pas disponible :\", err.message).asWarn().and.log();\n          this.userPosition.next(this.defaultPlace);\n        });\n    } else {\n      this.logService.set(\"La geolocation n'est pas disponible sur ce navigateur\").asWarn().and.log();\n      this.userPosition.next(this.defaultPlace);\n    }\n  }\n\n  /**\n   * @returns la position de l'utilisateur\n   * Si position indisponible Place(undefined, undefined, 0, 0)\n   */\n  public getUserLocation(): Observable {\n    return this.userPosition.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/composant/global/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts\n            \n            component\n            ErreurPopUpComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/composant/global/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/composant/main/main.component.ts\n            \n            component\n            MainComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/composant/main/map/icones/icones.ts\n            \n            variable\n            LocationPointerIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/composant/main/map/icones/icones.ts\n            \n            variable\n            UserPointerIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/composant/main/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                9 %\n                (3/32)\n            \n        \n        \n            \n                \n                src/app/composant/main/map/map.component.ts\n            \n            variable\n            KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/form-utils/form-utils.ts\n            \n            class\n            FormPanelUtils\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/form-utils/forms.validators.ts\n            \n            function\n            notAlreadyChoose\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/gps/gps.component.ts\n            \n            component\n            GpsComponent\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/panel.component.ts\n            \n            component\n            PanelComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/tsp/tsp.component.ts\n            \n            component\n            TspComponent\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/api.ts\n            \n            variable\n            ApiRest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/apiRestInterface.ts\n            \n            interface\n            IApiRest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            CHARLEVILLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            cities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            METZ\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            PARIS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path1\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path5\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path6\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            paths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/mock-backend-interceptor.ts\n            \n            interceptor\n            EmptyBackendInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/mock-backend/mock-backend-interceptor.ts\n            \n            interceptor\n            MockBackendInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/mock-backend/mock-backend-interceptor.ts\n            \n            function\n            mockBackEndInterceptorFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/model/path.ts\n            \n            class\n            Path\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/model/place.ts\n            \n            class\n            Place\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/pipes/capitalize.pipe.ts\n            \n            pipe\n            CapitalizePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/drawer/drawer.service.ts\n            \n            injectable\n            DrawerService\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/services/drawer/drawer.service.ts\n            \n            variable\n            COLORS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/http/http-service.service.ts\n            \n            injectable\n            HttpService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/logger/log.service.ts\n            \n            class\n            Log\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/services/logger/log.service.ts\n            \n            injectable\n            LogService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/map/map-data.service.ts\n            \n            injectable\n            MapDataService\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/app/services/user-location/user-location.service.ts\n            \n            injectable\n            UserLocationService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/environments/environment.mock.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.8\n        \n            @angular/cdk : ^7.3.3\n        \n            @angular/common : ~7.2.8\n        \n            @angular/compiler : ~7.2.8\n        \n            @angular/core : ~7.2.8\n        \n            @angular/forms : ~7.2.8\n        \n            @angular/http : ~7.2.8\n        \n            @angular/material : ^7.3.3\n        \n            @angular/platform-browser : ~7.2.8\n        \n            @angular/platform-browser-dynamic : ~7.2.8\n        \n            @angular/router : ~7.2.8\n        \n            core-js : ^2.6.5\n        \n            mappa-mundi : 0.0.5\n        \n            rxjs : ~6.4.0\n        \n            zone.js : ~0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            mockBackEndInterceptorFactory   (src/.../mock-backend-interceptor.ts)\n                        \n                        \n                            notAlreadyChoose   (src/.../forms.validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock-backend/mock-backend-interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            mockBackEndInterceptorFactory\n                        \n                        \n                    \n                \n            \n            \n                \nmockBackEndInterceptorFactory(logService)\n                \n            \n\n\n\n\n            \n                \n                    Permet de définir si on utilise ou non le serveur\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/composant/main/panel/form-utils/forms.validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            notAlreadyChoose\n                        \n                        \n                    \n                \n            \n            \n                \nnotAlreadyChoose()\n                \n            \n\n\n\n\n            \n                \n                    Valide si le ville n'est pas déjà séléctionné\n\n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCL-front\nFront end of the map project\nMichel forever tonight.\nInstalation du projet :\nSi vous êtes sur windows :\n\nhttps://gitforwindows.org/\n\nInstaller node :\n\nprendre la version \"current\": https://nodejs.org/en/.\n\nInstaller Angular Cli\nDans un terminal executer : \n~~~~\nnpm install -g @angular/cli~~~~\nClone du repo\n~~~~\ngit clone https://github.com/2018-19-M2GI-Metz/CL-front.git\n~~~~\nInstalation des dépendances\n~~~~\nnpm install\n~~~~\nSi une erreur apparaît par rapport a node-gyp, executer :\n~~~~\nWindows:\nnpm install -g windows-build-tools\nLinux:\nsudo apt install build-essential\n~~~~\nTester si l'application compile et le serveur dev démarre\n~~~~\nnpm run start\n~~~~\nSi tout vas bien vous devriez voir \"Compiled successfully\" et une page de votre navigateur s'ouvrira sur http://localhost:4200.\nFerme le terminale, on va passer par vscode pour lancer l'app par la suite.\nDev\nLancer l'appli pour le dev\n\nSi le serveur est lancer : npm start +\n  configuration de l'url du serveur dans le fichier src/environment.ts\nSinon en mode mock : npm run start:mock\n\n-Lancer l'appli android : executer une des commandes au dessus + npm run prepare + npm run start:android\n-Lancer l'appli electron : executer une des commandes au dessus + npm run prepare + npm run start:electron\nLe client ce lance est ouvrir automatiquement une page dans le navigateur.\nCompiler\n\ncompiler (web) en debug : npm run build\ncompiler (web) en release sans serveur: npm run build:prod:mock + \n(Va aussi mettre les fichiers de l'appli dans les projets android et electron)\ncompiler en release avec serveur: npm run build:prod + \n(Va aussi mettre les fichiers de l'appli dans les projets android et electron)\nnpm build:apps : compile l'appli android et electron. Faut executer npm run build:prod(ou npm run build:prod:mock) avant pour copier les dépendances et les ressources. \n\nLes fichiers web (index.html, *.js,...) se trouvent dans le dossier cordova/www.\nBonus : Installer VS Code et les outils qui facilitent la vie\nLien pour télécharger : https://code.visualstudio.com/Download\n\nDans VS Code, file, open workspace et ouvrir le fichier \"cl-front.code-workspace\",\n\nInstaller les extentions recommandés, via le fenêtre qui va s'ouvrir en bas à droite.\n\nAprès que le extentions soit toutes installées, appuye sur F1 et écrit \"recharger la fenetre\", puis entrer.\n\nune sous fenêtre nommée \"npm scripts\" est maintenant présent et va permettre dans lancer tout les scripts de l'application (ils sont défini dans le fichier package.json ).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 2018-19-M2GI-Metz\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GlobalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PanelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PanelRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GlobalModule\n\n\n\ncluster_GlobalModule_declarations\n\n\n\ncluster_GlobalModule_exports\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_PanelModule\n\n\n\ncluster_PanelModule_declarations\n\n\n\ncluster_PanelModule_imports\n\n\n\ncluster_PanelModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGlobalModule\n\nGlobalModule\n\nAppModule -->\n\nGlobalModule->AppModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nGlobalModule->ButtonComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nGlobalModule->InputComponent \n\n\n\n\n\nPanelModule\n\nPanelModule\n\nPanelModule -->\n\nGlobalModule->PanelModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nGlobalModule -->\n\nButtonComponent->GlobalModule\n\n\n\n\n\nErreurPopUpComponent\n\nErreurPopUpComponent\n\nGlobalModule -->\n\nErreurPopUpComponent->GlobalModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nGlobalModule -->\n\nInputComponent->GlobalModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainComponent->MainModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nMainModule -->\n\nMapModule->MainModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\nMainModule -->\n\nPanelModule->MainModule\n\n\n\n\n\nPanelComponent \n\nPanelComponent \n\nPanelComponent  -->\n\nPanelModule->PanelComponent \n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nGpsComponent\n\nGpsComponent\n\nPanelModule -->\n\nGpsComponent->PanelModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nPanelModule -->\n\nPanelComponent->PanelModule\n\n\n\n\n\nTspComponent\n\nTspComponent\n\nPanelModule -->\n\nTspComponent->PanelModule\n\n\n\n\n\nPanelRoutingModule\n\nPanelRoutingModule\n\nPanelModule -->\n\nPanelRoutingModule->PanelModule\n\n\n\n\n\nCapitalizePipe\n\nCapitalizePipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nCapitalizePipe->PipesModule\n\n\n\n\n\nCapitalizePipe \n\nCapitalizePipe \n\nCapitalizePipe  -->\n\nPipesModule->CapitalizePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiRest   (src/.../api.ts)\n                        \n                        \n                            CHARLEVILLE   (src/.../mock-data.ts)\n                        \n                        \n                            cities   (src/.../mock-data.ts)\n                        \n                        \n                            COLORS   (src/.../drawer.service.ts)\n                        \n                        \n                            environment   (src/.../environment.mock.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            KEY   (src/.../map.component.ts)\n                        \n                        \n                            LocationPointerIcons   (src/.../icones.ts)\n                        \n                        \n                            METZ   (src/.../mock-data.ts)\n                        \n                        \n                            PARIS   (src/.../mock-data.ts)\n                        \n                        \n                            path1   (src/.../mock-data.ts)\n                        \n                        \n                            path2   (src/.../mock-data.ts)\n                        \n                        \n                            path3   (src/.../mock-data.ts)\n                        \n                        \n                            path4   (src/.../mock-data.ts)\n                        \n                        \n                            path5   (src/.../mock-data.ts)\n                        \n                        \n                            path6   (src/.../mock-data.ts)\n                        \n                        \n                            paths   (src/.../mock-data.ts)\n                        \n                        \n                            UserPointerIcons   (src/.../icones.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock-backend/api/api.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiRest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IApiRest[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        url: \"/nearestpoint\",\n        method: \"GET\",\n        objectToReturn: () => METZ\n    },\n    {\n        url: \"/positions\",\n        method: \"GET\",\n        objectToReturn: () => [PARIS, METZ, CHARLEVILLE]\n    },\n    {\n        url: \"/path\",\n        method: \"GET\",\n        objectToReturn: (req) => {\n            const idStart: number = +req.params.get('startId');\n            const idEnd: number = +req.params.get('endId');\n            return paths.find(path => path.startPlace.id === idStart && path.endPlace.id === idEnd);\n        }\n    },\n    {\n        url: \"/tsp\",\n        method: \"GET\",\n        objectToReturn: (req) => {\n            const params: string[] = req.params.getAll('id');\n            const pathsBuild: { start: number, end: number }[] = [];\n            for (let i = 0; i  paths.find(path => path.startPlace.id === pathsId.start && path.endPlace.id === pathsId.end));\n        }\n    },\n    {\n        url: \"/searchbyname\",\n        method: \"GET\",\n        objectToReturn: (req) => cities.filter((city) => city.name.indexOf(req.params.get('name')) >= 0)\n    }\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/mock-backend/api/mock-data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CHARLEVILLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: \"charleville\", id: 3, posX: 4.722300, posY: 49.762460 }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : [PARIS, METZ, CHARLEVILLE]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            METZ\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: \"metz\", id: 2, posX: 6.175982, posY: 49.119457 }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PARIS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: \"paris\", id: 1, posX: 2.348773, posY: 48.856783 }\n                        \n                    \n\n                \n                    \n                        Villes disponibles dans l'application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { startPlace: PARIS, endPlace: METZ }\n                        \n                    \n\n                \n                    \n                        Tous les chemins disponibles dans l'application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { startPlace: METZ, endPlace: CHARLEVILLE }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { startPlace: CHARLEVILLE, endPlace: PARIS }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { startPlace: CHARLEVILLE, endPlace: METZ }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { startPlace: METZ, endPlace: PARIS }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path6\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { startPlace: PARIS, endPlace: CHARLEVILLE }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paths\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path[]\n\n                        \n                    \n                    \n                        \n                            Default value : [path1, path2, path3, path4, path5, path6]\n                        \n                    \n\n                \n                    \n                        Listes des chemins.\n\n                    \n                \n\n            \n        \n\n    src/app/services/drawer/drawer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COLORS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  blue1: \"rgba(63, 81, 188, 0.9)\",\n  blue2: \"rgba(63, 81, 188, 0.7)\",\n  blue3: \"rgba(63, 81, 188, 0.5)\",\n  white: \"rgba(255, 255, 255, 0.6)\",\n}\n                        \n                    \n\n                \n                    \n                        Couleurs disponibles pour les dessins\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    isServeurMock: true,\n    urlServeur: \"\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  isServeurMock: false,\n  urlServeur: \"127.0.0.1\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  isServeurMock: false,\n  urlServeur: \"localhost:8081/api\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/composant/main/map/map.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'pk.eyJ1IjoiZGFuaWVscGF5ZXQiLCJhIjoiY2pvem1leGF0Mm1hOTN3cGhmbHM0b3p2ayJ9.s0Gdr8eabQi56tHONKv1Sg'\n                        \n                    \n\n\n            \n        \n\n    src/app/composant/main/map/icones/icones.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocationPointerIcons\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `data:image/svg+xml;utf8,`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPointerIcons\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `data:image/svg+xml;utf8,`\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
