var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.637,1,1.114]],["body/components/AppComponent.html",[0,1.072,1,1.981,2,2.084,3,0.327,4,0.327,5,1.734,6,1.734,7,1.734,8,1.734,9,0.25,10,3.344,11,2.084,12,2.481,13,1.613,14,2.942,15,2.737,16,3.796,17,2.24,18,5.667,19,2.24,20,5.116,21,0.591,22,1.201,23,3.315,24,1.636,25,0.967,26,3.96,27,3.96,28,0.867,29,0.026,30,1.403,31,0.409,32,0.409,33,0.327,34,0.178,35,1.068,36,2.24,37,2.24,38,1.734,39,2.622,40,1.734,41,0.896,42,1.734,43,1.31,44,1.734,45,1.144,46,1.31,47,1.31,48,1.734,49,1.224,50,1.734,51,1.31,52,1.734,53,1.31,54,1.734,55,1.31,56,1.734,57,1.31,58,1.734,59,1.224,60,1.504,61,1.734,62,1.734,63,0.015,64,0.02,65,0.015]],["title/modules/AppModule.html",[66,0.972,67,2.24]],["body/modules/AppModule.html",[1,2.224,3,0.315,4,0.315,9,0.241,16,2.828,29,0.027,31,0.684,32,0.393,33,0.315,34,0.172,35,1.028,63,0.015,64,0.019,65,0.015,66,1.1,67,4.445,68,1.447,69,1.669,70,2.836,71,2.836,72,2.354,73,1.669,74,3.218,75,3.218,76,3.218,77,3.218,78,3.798,79,3.478,80,2.354,81,1.943,82,1.798,83,3.811,84,2.354,85,4.99,86,4.213,87,2.828,88,2.354,89,3.218,90,4.99,91,3.811,92,4.99,93,4.99,94,2.536,95,3.702,96,3.218,97,2.303,98,2.303,99,2.536,100,3.811,101,4.213,102,2.303,103,3.811,104,2.033,105,2.828,106,3.218,107,3.811,108,3.811,109,3.218,110,2.828]],["title/modules/AppRoutingModule.html",[66,0.972,78,2.034]],["body/modules/AppRoutingModule.html",[3,0.393,4,0.393,9,0.301,16,4.256,29,0.027,31,0.592,32,0.491,33,0.393,34,0.214,63,0.018,64,0.022,65,0.018,68,1.806,73,2.083,78,3.467,84,2.244,88,2.706,111,4.758,112,4.017,113,3.722,114,4.256,115,3.166,116,1.938,117,2.178,118,4.758,119,4.758,120,4.017,121,4.017,122,4.017,123,4.758]],["title/components/ButtonComponent.html",[0,0.637,43,1.114]],["body/components/ButtonComponent.html",[0,1.007,1,1.154,2,1.917,3,0.288,4,0.288,5,1.528,6,1.528,7,1.528,8,1.528,9,0.221,11,1.917,12,2.331,13,1.421,14,2.882,15,2.682,17,2.06,19,2.06,21,0.521,22,1.105,23,3.154,24,1.537,25,1.159,28,0.764,29,0.027,30,1.236,31,0.36,32,0.36,33,0.288,34,0.157,35,0.941,36,2.06,37,2.06,38,1.528,39,2.495,40,1.528,41,0.825,42,1.528,43,1.885,44,1.528,45,1.008,46,1.154,47,1.154,48,1.528,49,1.078,50,1.528,51,1.154,52,1.528,53,1.154,54,1.528,55,1.154,56,1.528,57,1.154,58,1.528,59,1.078,60,1.325,61,1.528,62,1.528,63,0.013,64,0.018,65,0.013,124,2.947,125,4.228,126,5.324,127,4.706,128,3.131,129,3.95,130,4.496,131,4.496,132,1.043,133,4.706,134,2.021,135,1.886,136,4.706,137,3.49,138,3.974,139,3.49,140,5.699,141,4.706,142,4.706,143,3.49,144,3.49,145,3.596]],["title/pipes/CapitalizePipe.html",[146,2.034,147,2.034]],["body/pipes/CapitalizePipe.html",[3,0.391,4,0.391,9,0.299,11,1.928,13,1.928,22,1.112,25,0.895,28,1.036,29,0.027,31,0.489,32,0.489,33,0.391,34,0.213,41,1.077,63,0.018,64,0.022,65,0.018,132,0.829,135,1.677,146,3.456,147,3.456,148,4.733,149,3.997,150,4.829,151,3.997,152,5.719,153,2.02,154,4.733,155,1.112,156,1.112,157,5.719,158,1.566,159,4.733,160,4.733]],["title/injectables/DrawerService.html",[161,1.04,162,2.24]],["body/injectables/DrawerService.html",[3,0.216,4,0.216,9,0.165,21,0.391,22,0.902,24,1.314,25,1.191,28,1.296,29,0.027,30,2.097,31,0.397,32,0.27,33,0.216,34,0.118,41,0.936,63,0.01,64,0.015,65,0.01,116,2.176,117,1.458,132,1.011,155,1.255,156,1.255,161,1.187,162,2.556,163,1.448,164,1.941,165,1.187,166,2.454,167,4.552,168,4.552,169,4.552,170,5.016,171,5.016,172,5.016,173,3.842,174,3.842,175,3.842,176,3.842,177,3.842,178,2.617,179,2.617,180,2.617,181,3.842,182,2.617,183,3.029,184,3.842,185,3.029,186,2.617,187,1.741,188,3.842,189,2.617,190,3.842,191,2.617,192,3.842,193,2.617,194,3.842,195,5.016,196,2.617,197,2.617,198,2.85,199,2.85,200,2.617,201,1.941,202,2.209,203,3.844,204,3.844,205,3.844,206,2.209,207,2.209,208,2.209,209,2.209,210,2.209,211,1.741,212,2.209,213,3.244,214,2.209,215,1.448,216,1.448,217,2.617,218,2.617,219,2.617,220,1.187,221,3.842,222,2.617,223,2.617,224,2.617,225,2.617,226,2.617,227,2.617,228,2.617,229,2.339,230,1.941,231,2.209,232,5.016,233,3.842,234,3.712,235,3.244,236,5.016,237,3.842,238,2.617,239,3.244,240,4.716,241,2.617,242,5.342,243,5.016,244,1.959,245,5.342,246,3.842,247,5.016,248,2.209,249,5.016,250,5.342,251,2.617,252,2.209,253,2.617,254,2.209,255,2.617,256,2.209,257,2.617,258,2.617,259,2.617,260,2.617]],["title/interceptors/EmptyBackendInterceptor.html",[99,2.24,261,2.24]],["body/interceptors/EmptyBackendInterceptor.html",[3,0.292,4,0.292,9,0.224,11,1.934,21,0.528,22,1.115,25,0.669,28,0.774,29,0.027,31,0.635,32,0.365,33,0.292,34,0.214,41,0.62,46,1.17,63,0.014,64,0.018,65,0.014,94,2.354,97,2.87,98,2.87,104,2.334,105,2.624,116,1.441,132,0.62,155,0.831,156,0.831,158,1.977,161,1.657,220,1.468,261,3.567,262,2.987,263,2.628,264,2.354,265,4.01,266,4.527,267,5.048,268,4.839,269,5.048,270,3.537,271,4.527,272,3.813,273,2.987,274,4.527,275,4.527,276,1.803,277,2.354,278,2.987,279,2.628,280,2.354,281,4.527,282,2.354,283,1.803,284,2.987,285,2.987,286,2.987,287,2.987,288,4.01,289,4.01,290,2.987,291,4.01,292,2.987,293,2.987,294,2.987,295,2.987,296,2.987,297,2.624,298,2.624,299,2.624,300,2.987,301,2.987,302,2.987,303,2.987,304,2.354,305,1.668,306,2.987,307,2.987,308,2.987,309,1.803,310,2.624,311,2.987,312,2.987]],["title/components/ErreurPopUpComponent.html",[0,0.637,45,0.972]],["body/components/ErreurPopUpComponent.html",[0,0.986,1,1.108,2,1.864,3,0.277,4,0.277,5,1.466,6,1.466,7,1.466,8,1.466,9,0.212,13,1.364,14,2.862,15,2.662,17,2.003,19,2.003,21,0.5,24,1.321,25,0.986,29,0.027,31,0.472,32,0.346,33,0.277,34,0.151,35,0.903,36,2.003,37,2.003,38,1.466,39,2.453,40,1.466,41,0.913,42,1.466,43,1.108,44,1.466,45,1.618,46,2.088,47,2.228,48,1.466,49,1.035,50,1.466,51,1.108,52,1.466,53,1.108,54,1.466,55,1.108,56,1.466,57,1.108,58,1.466,59,1.035,60,1.271,61,1.466,62,1.466,63,0.013,64,0.018,65,0.013,102,2.023,131,2.827,132,1.061,153,1.035,155,0.786,156,0.786,165,1.414,229,1.466,313,4.731,314,3.386,315,2.827,316,4.576,317,5.213,318,4.576,319,1.871,320,4.352,321,5.602,322,3.348,323,5.866,324,4.402,325,3.348,326,2.827,327,4.576,328,3.348,329,3.348,330,3.348,331,3.348,332,2.484,333,4.576,334,4.576,335,4.576,336,3.348,337,2.023,338,3.348,339,3.348,340,2.827]],["title/classes/FormPanelUtils.html",[34,0.152,341,2.034]],["body/classes/FormPanelUtils.html",[3,0.194,4,0.194,9,0.149,11,1.446,12,1.871,21,0.351,22,0.834,23,2.634,24,0.679,25,1.19,28,1.22,29,0.027,30,1.686,31,0.576,32,0.243,33,0.194,34,0.106,41,0.749,63,0.009,64,0.014,65,0.009,116,2.188,117,0.893,132,1.006,134,1.348,135,1.257,145,2.145,153,1.66,155,1.004,156,1.004,158,1.575,165,1.097,166,2.039,220,0.727,229,1.871,234,2.145,244,1.199,305,1.674,309,1.199,319,2.032,341,2.145,342,1.422,343,4.709,344,4.224,345,1.987,346,2.365,347,4.136,348,2.583,349,3.171,350,3.171,351,3.171,352,3.171,353,3.532,354,3.532,355,3.532,356,3.532,357,3.532,358,2.583,359,2.633,360,2.633,361,1.422,362,2.245,363,2.844,364,2.245,365,3.549,366,1.777,367,1.964,368,2.353,369,2.427,370,2.353,371,2.844,372,2.353,373,3.171,374,2.353,375,2.353,376,2.353,377,2.353,378,2.353,379,2.353,380,2.179,381,2.353,382,2.633,383,1.81,384,2.353,385,1.566,386,2.633,387,2.353,388,2.633,389,2.353,390,1.746,391,1.199,392,1.422,393,1.422,394,1.302,395,1.746,396,1.422,397,1.422,398,1.746,399,2.633,400,2.353,401,2.353,402,2.633,403,2.353,404,2.353,405,2.353,406,2.353,407,1.987,408,2.353,409,2.353,410,2.353,411,2.353,412,2.353,413,2.353,414,2.353,415,3.549,416,1.987,417,2.353,418,1.987,419,1.746,420,2.353,421,2.353,422,2.353,423,1.746,424,2.353,425,2.353,426,2.353,427,2.353,428,3.549,429,2.353,430,2.353,431,2.353,432,2.353,433,2.353,434,2.353,435,2.353,436,2.353,437,2.353,438,2.353,439,3.549,440,2.353,441,2.353,442,3.549,443,2.353,444,2.353,445,2.353,446,2.353,447,2.353,448,2.353,449,2.353,450,1.746,451,2.353,452,2.353]],["title/modules/GlobalModule.html",[66,0.972,79,1.863]],["body/modules/GlobalModule.html",[3,0.303,4,0.303,9,0.232,29,0.027,31,0.69,32,0.378,33,0.303,34,0.165,35,0.989,43,2.211,45,1.86,46,1.213,47,1.609,51,2.211,63,0.014,64,0.019,65,0.014,66,1.058,68,1.392,69,1.605,70,2.782,71,1.869,72,1.729,73,2.389,79,3.698,80,2.294,81,1.869,82,1.729,84,1.729,88,2.294,101,4.106,102,2.215,314,2.215,391,1.869,453,3.095,454,3.095,455,3.095,456,3.665,457,4.863,458,4.106,459,4.608,460,2.939,461,2.028,462,3.665,463,3.665,464,4.106,465,3.608,466,2.719,467,3.236,468,2.439,469,4.863,470,3.665,471,2.719,472,4.863,473,3.665,474,2.939,475,3.665]],["title/components/GpsComponent.html",[0,0.637,49,1.04]],["body/components/GpsComponent.html",[0,0.806,1,0.775,2,1.442,3,0.194,4,0.194,5,1.026,6,1.026,7,1.026,8,1.026,9,0.148,11,1.442,12,1.867,13,0.955,14,2.659,15,2.474,17,1.55,19,1.55,21,0.35,22,0.831,23,3.081,24,0.677,25,1.224,28,1.284,29,0.027,30,1.807,31,0.526,32,0.242,33,0.194,34,0.106,35,0.632,36,1.55,37,1.55,38,1.026,39,2.08,40,1.026,41,0.894,42,1.026,43,0.775,44,1.026,45,0.677,46,0.775,47,0.775,48,1.026,49,1.468,50,1.026,51,0.775,52,1.026,53,0.775,54,1.026,55,0.775,56,1.026,57,0.775,58,1.026,59,0.724,60,0.89,61,1.026,62,1.026,63,0.009,64,0.014,65,0.009,125,1.739,128,2.355,132,1.048,134,1.619,135,1.511,145,2.139,153,1.094,155,1.001,156,1.001,165,1.094,166,1.804,220,1.318,229,1.55,305,1.106,309,1.195,319,2.022,337,1.416,341,3.862,344,1.559,346,1.959,347,3.525,348,3.082,349,2.626,350,2.626,351,3.784,352,2.626,353,3.164,354,3.164,355,3.164,356,3.164,357,2.626,358,3.082,359,3.979,360,2.626,361,2.139,362,2.241,363,3.161,364,2.241,366,1.171,367,1.297,369,2.6,371,1.559,373,3.164,380,1.195,382,1.739,383,1.195,385,1.559,386,1.739,388,1.739,390,1.739,391,1.195,392,1.416,393,1.416,396,1.416,397,1.416,402,2.626,423,2.626,476,1.979,477,2.988,478,2.988,479,4.264,480,3.539,481,3.539,482,2.344,483,2.344,484,2.344,485,5.258,486,1.979,487,1.979,488,1.979,489,1.979,490,1.979,491,1.979,492,1.979,493,1.979,494,1.979,495,1.979,496,1.979,497,1.979,498,1.979,499,2.626,500,1.979,501,1.979,502,1.979,503,1.979,504,1.979,505,2.344,506,2.344,507,2.988,508,3.539,509,1.297,510,2.577,511,1.416,512,1.739,513,3.525,514,2.988,515,1.979,516,2.355,517,2.139,518,1.739,519,1.979,520,2.344]],["title/injectables/HttpService.html",[161,1.04,362,1.588]],["body/injectables/HttpService.html",[3,0.194,4,0.194,9,0.149,21,0.351,22,0.833,24,0.678,25,1.085,28,1.219,29,0.027,31,0.575,32,0.243,33,0.194,34,0.106,41,1.029,63,0.009,64,0.014,65,0.009,94,1.563,104,2.27,116,1.444,117,1.806,132,0.976,146,2.143,153,1.32,155,1.309,156,1.309,158,1.942,161,1.096,163,1.3,166,2.116,183,1.563,215,1.3,216,1.3,220,1.773,272,3.397,276,1.198,283,1.198,305,1.673,319,1.903,361,1.42,362,1.673,366,2.143,380,3.05,383,2.603,394,1.3,395,1.743,521,4.957,522,1.984,523,3.546,524,3.546,525,4.757,526,3.546,527,3.546,528,3.546,529,3.546,530,4.757,531,2.35,532,3.546,533,2.35,534,3.546,535,2.35,536,2.35,537,3.546,538,2.35,539,2.35,540,3.546,541,2.35,542,3.546,543,2.35,544,3.546,545,2.35,546,4.757,547,4.271,548,2.35,549,2.35,550,2.35,551,1.984,552,1.984,553,4.017,554,4.757,555,5.201,556,2.35,557,2.35,558,2.35,559,2.35,560,2.35,561,2.35,562,3.606,563,5.105,564,4.533,565,4.757,566,2.994,567,2.35,568,2.35,569,2.35,570,1.984,571,4.757,572,3.606,573,2.35,574,3.546,575,3.169,576,2.35,577,3.546,578,2.994,579,3.546,580,3.546,581,3.546,582,2.35,583,2.35,584,2.35,585,2.35,586,2.35,587,2.35,588,2.35,589,2.35,590,2.35,591,2.35,592,2.35,593,2.35,594,2.35,595,2.35,596,2.35,597,2.35,598,2.35,599,1.984,600,2.35,601,1.743,602,1.984,603,2.35,604,2.35]],["title/interfaces/IApiRest.html",[279,1.863,605,2.24]],["body/interfaces/IApiRest.html",[3,0.388,4,0.388,9,0.297,21,0.701,29,0.027,33,0.388,63,0.018,64,0.022,65,0.018,132,1.073,153,1.893,165,1.759,263,2.599,279,3.15,304,4.237,605,3.125,606,4.696,607,3.966,608,5.376,609,5.376,610,6.125,611,6.125,612,6.125]],["title/components/InputComponent.html",[0,0.637,51,1.114]],["body/components/InputComponent.html",[0,0.722,1,0.65,2,1.258,3,0.162,4,0.162,5,0.86,6,0.86,7,0.86,8,0.86,9,0.124,11,1.258,12,0.86,13,0.8,14,2.544,15,2.366,17,1.352,19,1.352,21,0.293,22,0.725,24,0.567,25,1.211,28,1.218,29,0.027,30,1.972,31,0.559,32,0.203,33,0.162,34,0.088,35,0.53,36,1.352,37,1.352,38,0.86,39,1.895,40,0.86,41,0.948,42,0.86,43,0.65,44,0.86,45,0.567,46,0.65,47,0.65,48,0.86,49,0.607,50,0.86,51,1.652,52,0.86,53,0.65,54,0.86,55,0.65,56,0.86,57,0.65,58,0.86,59,0.607,60,0.746,61,0.86,62,0.86,63,0.008,64,0.012,65,0.008,72,1.457,106,2.608,109,2.608,110,2.292,116,0.8,128,2.055,130,3.223,132,1.05,134,1.643,135,2.018,145,3.443,150,3.223,151,1.659,153,1.98,155,1.173,156,1.173,158,1.022,165,0.955,166,2.274,220,1.18,272,1.307,276,1.001,283,1.001,305,1.457,309,1.001,319,1.98,346,2.112,358,2.306,361,1.187,362,2.041,364,0.927,366,1.431,380,2.206,385,2.055,391,1.001,392,1.187,393,1.187,394,1.087,396,1.187,397,1.187,418,3.223,450,2.292,499,1.457,509,1.087,551,1.659,613,1.659,614,3.817,615,3.817,616,3.089,617,3.817,618,3.817,619,3.089,620,3.817,621,3.817,622,3.817,623,3.089,624,3.654,625,4.327,626,3.089,627,3.089,628,4.327,629,4.327,630,3.089,631,3.817,632,3.817,633,3.817,634,3.089,635,3.817,636,3.089,637,3.157,638,1.964,639,1.964,640,1.964,641,3.21,642,1.964,643,1.964,644,1.964,645,1.964,646,4.327,647,1.964,648,3.089,649,1.964,650,1.964,651,1.964,652,3.089,653,1.964,654,3.089,655,4.995,656,1.964,657,1.964,658,1.964,659,3.089,660,1.964,661,1.964,662,1.964,663,3.49,664,1.964,665,1.964,666,1.964,667,1.964,668,1.964,669,3.089,670,1.964,671,1.307,672,1.659,673,1.659,674,1.964,675,3.089,676,1.659,677,1.964,678,1.964,679,1.964,680,3.089,681,1.964,682,1.964,683,1.964,684,1.964,685,3.089,686,1.964,687,1.964,688,1.964,689,1.659,690,1.964,691,1.659,692,1.964,693,2.608,694,2.608,695,3.089,696,3.089,697,2.055,698,2.292,699,1.659,700,1.964,701,1.964]],["title/classes/Log.html",[34,0.152,702,2.24]],["body/classes/Log.html",[3,0.546,4,0.24,9,0.184,21,0.434,22,0.974,24,0.84,25,1.216,28,1.267,29,0.027,30,1.031,31,0.499,32,0.3,33,0.24,34,0.187,41,0.727,45,0.84,47,1.372,63,0.011,64,0.016,65,0.011,102,1.758,104,1.185,132,1.045,153,1.79,155,0.974,156,0.974,158,1.916,161,1.282,165,1.282,166,2.441,215,1.61,216,1.61,220,0.899,283,1.483,314,1.758,319,2.078,320,2.159,332,4.601,342,1.758,471,2.159,702,4.055,703,2.159,704,4.704,705,4.704,706,4.45,707,4.45,708,4.45,709,4.148,710,4.45,711,2.457,712,4.891,713,4.148,714,2.909,715,2.909,716,4.891,717,4.891,718,2.909,719,2.909,720,2.909,721,2.909,722,2.909,723,2.909,724,3.503,725,2.909,726,2.909,727,2.457,728,2.457,729,2.457,730,2.159,731,3.503,732,4.45,733,2.457,734,2.457,735,2.457,736,2.457,737,3.503,738,2.457,739,2.457,740,4.082,741,2.457,742,4.082,743,2.457,744,2.457]],["title/injectables/LogService.html",[104,1.371,161,1.04]],["body/injectables/LogService.html",[3,0.544,4,0.288,9,0.221,21,0.521,22,1.105,24,1.008,25,0.89,28,0.764,29,0.027,31,0.55,32,0.36,33,0.288,34,0.212,41,0.825,45,1.008,47,1.557,63,0.013,64,0.018,65,0.013,102,2.109,104,1.917,132,0.825,134,1.325,135,1.236,153,1.839,155,1.105,156,1.105,158,2.028,161,1.454,163,1.931,166,2.164,215,1.931,216,1.931,220,1.078,283,1.779,314,2.109,319,1.895,320,2.589,332,4.548,471,2.589,676,3.974,702,3.792,703,2.589,704,4.496,705,3.974,706,2.947,707,2.947,708,2.947,710,2.947,711,2.947,712,5.024,716,4.496,717,4.496,724,2.947,727,2.947,728,3.974,729,2.947,730,2.589,731,3.974,732,4.812,733,2.947,734,2.947,735,2.947,736,2.947,737,3.974,738,2.947,739,2.947,740,4.496,741,2.947,742,4.496,743,2.947,744,2.947,745,3.49,746,3.49]],["title/components/MainComponent.html",[0,0.637,53,1.114]],["body/components/MainComponent.html",[0,0.931,1,0.996,2,1.731,3,0.249,4,0.249,5,1.318,6,1.318,7,1.318,8,1.318,9,0.19,12,1.318,13,1.226,14,2.806,15,2.691,17,1.861,19,1.861,21,0.735,22,0.998,25,1.067,28,1.171,29,0.027,30,1.505,31,0.311,32,0.311,33,0.249,34,0.136,35,0.812,36,1.861,37,1.861,38,1.318,39,2.343,40,1.318,41,0.745,42,1.318,43,0.996,44,1.318,45,0.869,46,0.996,47,0.996,48,1.318,49,0.93,50,1.318,51,0.996,52,1.318,53,1.77,54,1.318,55,0.996,56,1.318,57,0.996,58,1.318,59,0.93,60,1.143,61,1.318,62,1.318,63,0.012,64,0.016,65,0.012,134,1.143,135,1.066,138,2.542,153,1.313,158,0.996,165,1.313,166,1.87,183,3.561,229,1.318,230,2.234,244,2.167,256,2.542,319,1.522,367,2.352,509,1.666,510,2.977,511,1.819,512,2.234,513,2.234,517,1.819,641,3.153,671,3.755,697,4.264,698,4.346,699,2.542,747,2.542,748,4.25,749,4.926,750,4.25,751,4.926,752,4.926,753,4.926,754,5.351,755,4.926,756,3.01,757,3.01,758,3.01,759,3.01,760,3.01,761,2.542,762,2.542,763,3.153,764,4.25,765,4.519,766,2.542,767,4.926,768,3.278,769,4.25,770,4.25,771,3.589,772,3.589,773,2.542,774,3.01,775,4.25,776,3.01,777,3.589,778,3.589,779,3.01,780,2.542,781,2.542,782,3.01,783,3.01,784,3.01,785,3.01]],["title/modules/MainModule.html",[66,0.972,786,2.24]],["body/modules/MainModule.html",[0,0.769,3,0.336,4,0.336,9,0.257,29,0.027,31,0.687,32,0.42,33,0.336,34,0.183,35,1.097,53,2.151,63,0.016,64,0.02,65,0.016,66,1.174,68,1.544,69,1.78,70,2.926,71,2.073,72,1.918,73,1.78,80,2.455,81,2.073,82,1.918,84,2.455,88,2.455,114,3.017,115,2.706,117,1.544,460,3.145,461,2.25,465,3.861,466,3.017,467,3.463,468,2.706,786,4.46,787,3.434,788,3.434,789,3.434,790,3.865,791,3.865,792,4.067,793,4.067,794,4.067,795,4.067,796,5.204,797,4.067,798,4.067]],["title/components/MapComponent.html",[0,0.637,55,1.114]],["body/components/MapComponent.html",[0,0.556,1,0.445,2,0.924,3,0.111,4,0.111,5,0.589,6,0.589,7,0.589,8,0.589,9,0.085,11,0.924,12,1.288,13,0.548,14,2.264,15,2.106,17,0.993,19,0.993,21,0.201,22,0.533,23,1.911,24,0.655,25,1.202,28,1.224,29,0.027,30,1.781,31,0.482,32,0.139,33,0.111,34,0.061,35,0.363,36,0.993,37,0.993,38,0.589,39,1.512,40,0.589,41,0.779,42,0.589,43,0.445,44,0.589,45,0.389,46,0.445,47,0.445,48,0.589,49,0.416,50,0.589,51,0.445,52,0.589,53,0.445,54,0.589,55,1.142,56,0.589,57,0.445,58,0.589,59,0.416,60,0.511,61,0.589,62,0.589,63,0.005,64,0.009,65,0.005,80,0.635,116,2.243,129,0.998,132,0.994,134,1.117,135,1.042,153,0.909,155,0.811,156,0.811,158,0.973,162,2.96,165,0.701,166,2.583,183,1.957,211,1.957,220,0.909,229,1.512,230,0.998,231,1.136,234,1.777,235,1.136,239,1.136,240,1.136,252,1.136,276,0.686,305,1.387,319,1.292,324,1.136,326,2.916,337,0.813,340,1.136,358,2.526,362,1.629,363,1.957,364,1.629,366,1.752,367,2.586,369,2.131,380,1.157,383,1.499,392,0.813,393,0.813,394,0.745,396,0.813,397,0.813,416,1.136,419,1.683,450,1.683,509,0.745,510,2.086,511,1.371,516,0.895,517,0.813,637,2.526,671,2.565,672,1.136,673,1.136,691,1.136,693,1.916,694,1.916,697,0.895,761,1.136,762,4.366,765,1.136,766,1.136,771,1.916,772,2.483,799,0.998,800,2.941,801,2.269,802,2.941,803,2.941,804,2.941,805,2.941,806,2.941,807,2.916,808,3.453,809,2.941,810,2.941,811,2.941,812,2.941,813,4.448,814,2.941,815,3.453,816,2.269,817,3.453,818,3.453,819,3.453,820,3.453,821,3.453,822,3.453,823,2.269,824,2.269,825,3.453,826,3.453,827,3.453,828,3.453,829,2.269,830,2.941,831,1.346,832,2.941,833,3.453,834,1.346,835,1.346,836,1.346,837,2.269,838,1.346,839,1.346,840,1.346,841,1.346,842,1.346,843,1.346,844,1.346,845,2.269,846,1.346,847,2.269,848,1.346,849,1.346,850,1.346,851,1.346,852,1.346,853,1.346,854,1.346,855,1.346,856,1.346,857,1.346,858,1.346,859,1.346,860,2.941,861,1.346,862,4.18,863,3.855,864,1.346,865,1.346,866,1.346,867,1.346,868,1.346,869,1.346,870,1.346,871,1.346,872,1.346,873,1.346,874,1.346,875,1.346,876,1.346,877,1.346,878,1.136,879,1.346,880,1.683,881,1.136,882,1.346,883,1.346,884,1.346,885,1.346,886,1.346,887,1.346,888,1.683,889,2.269,890,2.269,891,2.269,892,1.346,893,1.346,894,1.346,895,1.346,896,2.941,897,2.269,898,1.346,899,1.346,900,1.346,901,2.269,902,1.136,903,1.346,904,2.941,905,1.346,906,1.346,907,1.346,908,2.269,909,1.346,910,1.346,911,1.346,912,1.346,913,1.346,914,1.346,915,1.346,916,1.346,917,1.346,918,1.346,919,2.941,920,4.18,921,1.346,922,1.136,923,2.941,924,1.346,925,1.346,926,1.346,927,1.346,928,1.346,929,1.346,930,1.346,931,1.346,932,2.269,933,3.453,934,1.346,935,2.269,936,2.269,937,2.269,938,1.346,939,1.346,940,1.346,941,1.346,942,1.346,943,1.346,944,1.346,945,1.346,946,1.346,947,1.346,948,2.269,949,1.346,950,1.346,951,1.346,952,2.269,953,1.346,954,1.346,955,1.346,956,2.269,957,2.941,958,1.346,959,1.346,960,1.346,961,1.346,962,1.346,963,1.346,964,1.346,965,1.346,966,1.346,967,1.346,968,1.346,969,1.346,970,1.346,971,1.346,972,1.346,973,1.346,974,1.346,975,1.346,976,1.346,977,1.346,978,1.346,979,1.346,980,1.346,981,1.346,982,2.269,983,1.346,984,1.346,985,1.346,986,1.346,987,2.941,988,1.346,989,1.346,990,1.346,991,1.346,992,1.346,993,2.269,994,1.346,995,1.346,996,1.346,997,1.916,998,2.941,999,1.346,1000,3.453,1001,1.346,1002,1.346,1003,1.346,1004,1.346,1005,1.346,1006,2.941,1007,2.941,1008,2.269,1009,1.346,1010,2.269]],["title/injectables/MapDataService.html",[161,1.04,364,1.588]],["body/injectables/MapDataService.html",[3,0.24,4,0.24,9,0.184,21,0.434,22,0.974,25,1.216,28,1.333,29,0.027,30,2.052,31,0.544,32,0.3,33,0.24,34,0.131,41,0.847,63,0.011,64,0.016,65,0.011,117,2.199,132,1.045,134,2.001,135,1.867,155,1.135,156,1.135,158,1.372,161,1.282,163,1.61,165,1.282,166,2.354,215,1.61,216,1.61,220,1.629,244,1.483,276,1.483,319,2.032,364,1.957,366,2.052,383,1.483,394,1.61,395,2.159,419,2.159,663,4.601,1011,5.475,1012,2.457,1013,4.834,1014,4.834,1015,3.91,1016,4.834,1017,4.148,1018,4.148,1019,5.27,1020,5.27,1021,5.27,1022,4.148,1023,5.27,1024,5.27,1025,2.909,1026,2.909,1027,2.909,1028,2.909,1029,2.909,1030,2.909,1031,2.909,1032,4.148,1033,2.909,1034,2.909,1035,2.909,1036,2.909,1037,2.909,1038,2.909,1039,2.909,1040,2.909,1041,2.909,1042,2.909,1043,2.909,1044,2.909,1045,2.909,1046,2.909,1047,2.909,1048,2.909,1049,2.909,1050,2.909,1051,2.909,1052,5.27,1053,2.909,1054,2.909,1055,2.909,1056,2.909,1057,2.909,1058,2.909,1059,2.909,1060,2.909]],["title/modules/MapModule.html",[66,0.972,790,2.034]],["body/modules/MapModule.html",[3,0.357,4,0.357,9,0.273,29,0.027,31,0.671,32,0.446,33,0.357,34,0.195,35,1.164,55,2.263,63,0.017,64,0.021,65,0.017,66,1.247,68,1.639,69,1.89,70,3.008,71,2.201,72,2.037,73,2.583,80,2.549,81,2.201,82,2.037,84,2.037,88,2.549,460,3.266,461,2.389,465,4.01,466,3.203,467,3.596,468,2.873,790,3.982,1061,3.646,1062,3.646,1063,3.646,1064,4.317,1065,4.317,1066,5.405,1067,4.317]],["title/interceptors/MockBackendInterceptor.html",[99,2.24,282,2.24]],["body/interceptors/MockBackendInterceptor.html",[3,0.284,4,0.284,9,0.217,11,1.897,21,0.513,22,1.094,24,0.992,25,0.881,28,0.752,29,0.027,31,0.63,32,0.355,33,0.284,34,0.21,41,0.816,46,1.137,63,0.013,64,0.018,65,0.013,94,2.287,97,3.193,98,3.193,104,2.542,105,2.55,116,1.4,132,0.816,155,1.094,156,1.094,158,1.958,161,1.633,220,1.439,261,3.099,262,2.902,263,2.924,264,2.287,265,3.933,266,4.461,267,4.998,268,4.782,269,4.998,271,4.461,272,3.769,273,2.902,274,4.461,275,4.461,276,1.752,277,2.287,278,2.902,279,2.578,280,2.287,281,4.461,282,3.099,283,1.752,284,2.902,285,2.902,286,2.902,287,2.902,288,3.933,289,3.933,290,2.902,291,3.933,292,2.902,293,2.902,294,2.902,295,2.902,296,2.902,297,2.55,298,2.55,299,2.55,300,2.902,301,2.902,302,2.902,303,2.902,304,2.287,305,1.621,306,2.902,307,2.902,308,2.902,309,1.752,310,2.55,311,2.902,312,2.902,1068,2.902,1069,3.437,1070,3.437]],["title/components/PanelComponent.html",[0,0.637,57,1.114]],["body/components/PanelComponent.html",[0,0.991,1,1.12,2,1.878,3,0.28,4,0.28,5,1.482,6,1.482,7,1.482,8,1.482,9,0.214,12,1.482,13,1.379,14,2.867,15,2.668,17,2.019,19,2.019,21,0.783,22,1.083,25,0.872,28,0.741,29,0.027,30,1.199,31,0.35,32,0.35,33,0.28,34,0.153,35,0.913,36,2.019,37,2.019,38,1.482,39,2.464,40,1.482,41,0.919,42,1.482,43,1.12,44,1.482,45,0.978,46,1.12,47,1.12,48,1.482,49,1.046,50,1.482,51,1.12,52,1.482,53,1.12,54,1.482,55,1.12,56,1.482,57,1.862,58,1.482,59,1.046,60,1.285,61,1.482,62,1.482,63,0.013,64,0.018,65,0.013,129,2.512,132,0.593,134,1.285,135,1.199,155,0.795,156,0.795,165,1.425,211,2.253,229,2.019,319,1.878,337,2.046,348,3.168,369,1.726,407,2.859,509,1.874,510,2.046,511,2.046,516,2.253,517,2.046,697,3.488,768,3.068,777,2.859,778,2.859,780,2.859,781,2.859,997,2.859,1071,2.859,1072,5.243,1073,4.61,1074,4.61,1075,4.61,1076,3.386,1077,3.386,1078,3.386,1079,3.386,1080,4.61,1081,3.386,1082,3.386,1083,3.386,1084,5.628,1085,5.628,1086,5.628,1087,5.628,1088,4.61,1089,4.61,1090,3.386,1091,5.628,1092,4.61]],["title/modules/PanelModule.html",[66,0.972,791,2.034]],["body/modules/PanelModule.html",[3,0.311,4,0.311,9,0.238,29,0.027,31,0.683,32,0.389,33,0.311,34,0.17,35,1.015,49,1.936,57,2.22,59,1.936,63,0.014,64,0.019,65,0.014,66,1.087,68,1.429,69,1.648,70,2.819,71,1.919,72,1.775,73,2.421,79,3.467,80,2.334,81,1.919,82,1.775,84,2.334,88,2.334,89,3.178,391,1.919,458,4.179,459,4.669,460,2.991,461,2.083,464,4.179,467,3.293,468,2.504,768,2.504,791,4.113,1093,3.178,1094,3.178,1095,3.178,1096,3.178,1097,3.785,1098,3.764,1099,3.764,1100,3.178,1101,3.178,1102,4.949,1103,3.764,1104,3.764,1105,4.949]],["title/modules/PanelRoutingModule.html",[66,0.972,1097,2.034]],["body/modules/PanelRoutingModule.html",[0,1.052,3,0.373,4,0.373,9,0.286,29,0.027,31,0.649,32,0.467,33,0.373,34,0.204,49,1.719,59,1.719,60,1.716,63,0.017,64,0.021,65,0.017,68,1.716,73,1.98,84,2.133,88,2.623,112,3.818,113,3.64,114,4.126,115,3.008,116,1.842,117,2.287,120,3.818,121,3.818,122,3.818,478,4.696,768,4.008,1097,3.361,1100,3.818,1101,3.818,1106,4.521,1107,6.023,1108,4.521]],["title/classes/Path.html",[34,0.152,117,1.278]],["body/classes/Path.html",[3,0.406,4,0.406,9,0.311,21,0.733,25,1.106,29,0.026,31,0.507,33,0.406,34,0.221,63,0.019,64,0.022,65,0.019,117,2.22,132,1.025,165,1.807,185,4.155,187,4.155,342,2.968,366,2.216,1109,4.148,1110,4.912,1111,4.912]],["title/modules/PipesModule.html",[66,0.972,474,2.034]],["body/modules/PipesModule.html",[3,0.374,4,0.374,9,0.287,29,0.027,31,0.623,32,0.468,33,0.374,34,0.204,35,1.222,63,0.017,64,0.021,65,0.017,66,1.309,68,1.721,69,1.984,70,3.074,71,2.311,72,2.138,73,2.64,80,2.627,81,2.311,82,2.138,84,2.138,88,2.627,147,4.159,460,3.366,461,2.508,474,4.024,1112,3.827,1113,3.827,1114,3.827,1115,4.532,1116,4.532]],["title/classes/Place.html",[34,0.152,366,1.114]],["body/classes/Place.html",[3,0.357,4,0.357,9,0.273,21,0.645,24,1.247,25,1.204,29,0.026,33,0.357,34,0.195,41,1.138,63,0.017,64,0.021,65,0.017,132,1.116,153,1.911,155,1.014,156,1.014,165,1.67,319,2.104,342,2.609,366,1.788,369,3.487,730,3.203,888,4.724,1117,3.646,1118,5.221,1119,5.376,1120,4.317,1121,4.317,1122,6.183]],["title/components/TspComponent.html",[0,0.637,59,1.04]],["body/components/TspComponent.html",[0,0.808,1,0.778,2,1.446,3,0.194,4,0.194,5,1.03,6,1.03,7,1.03,8,1.03,9,0.149,11,1.446,12,1.871,13,0.958,14,2.662,15,2.476,17,1.554,19,1.554,21,0.351,22,0.834,23,3.085,24,0.679,25,1.225,28,1.285,29,0.027,30,1.81,31,0.527,32,0.243,33,0.194,34,0.106,35,0.635,36,1.554,37,1.554,38,1.03,39,2.084,40,1.03,41,0.895,42,1.03,43,0.778,44,1.03,45,0.679,46,0.778,47,0.778,48,1.03,49,0.727,50,1.03,51,0.778,52,1.03,53,0.778,54,1.03,55,0.778,56,1.03,57,0.778,58,1.03,59,1.471,60,1.623,61,1.03,62,1.03,63,0.009,64,0.014,65,0.009,125,1.746,128,2.362,132,1.049,134,1.623,135,1.514,145,2.145,153,1.097,155,1.004,156,1.004,165,1.097,166,1.807,220,1.097,244,1.81,305,1.11,309,1.199,319,2.023,337,1.422,341,3.865,344,1.566,346,1.964,347,3.532,348,3.087,349,2.633,350,2.633,351,3.79,352,2.633,353,3.171,354,3.171,355,3.171,356,3.171,357,2.633,358,3.087,359,3.985,360,2.633,361,2.145,362,2.245,363,3.167,364,2.245,366,1.174,367,1.302,369,2.604,371,1.566,373,3.171,380,1.199,382,1.746,383,1.199,385,1.566,386,1.746,388,1.746,390,1.746,391,1.199,392,1.422,393,1.422,396,1.422,397,1.422,402,1.746,423,1.746,477,2.997,485,5.262,486,1.987,487,1.987,488,1.987,489,1.987,490,1.987,491,1.987,492,1.987,493,1.987,494,1.987,495,1.987,496,1.987,497,1.987,498,1.987,499,2.633,500,1.987,501,1.987,502,1.987,503,1.987,504,1.987,507,2.997,509,1.302,510,2.583,511,1.422,512,2.633,513,3.532,514,2.997,515,1.987,516,2.362,517,2.145,518,1.746,519,1.987,1123,1.987,1124,4.274,1125,3.549,1126,3.549,1127,2.353,1128,2.353,1129,2.353,1130,2.353,1131,2.353,1132,3.549]],["title/injectables/UserLocationService.html",[161,1.04,637,2.034]],["body/injectables/UserLocationService.html",[3,0.34,4,0.34,9,0.26,21,0.614,22,1.231,24,1.187,25,0.991,28,0.9,29,0.027,31,0.596,32,0.425,33,0.34,34,0.185,41,0.721,63,0.016,64,0.02,65,0.016,104,2.613,132,0.721,155,0.966,156,0.966,158,1.36,161,1.62,163,2.276,215,2.276,216,2.276,220,1.271,283,2.097,298,3.889,299,3.889,319,1.783,366,1.36,367,2.276,380,2.672,394,2.276,552,3.473,553,3.473,562,3.473,572,4.426,624,5.13,637,3.167,902,3.473,1068,3.473,1133,4.871,1134,3.473,1135,4.113,1136,4.113,1137,4.113,1138,4.113,1139,4.113,1140,4.113,1141,4.113,1142,5.241,1143,5.241,1144,5.241,1145,4.113,1146,3.473,1147,3.473,1148,4.113]],["title/coverage.html",[1149,3.878]],["body/coverage.html",[0,1.162,1,0.925,9,0.177,10,2.362,29,0.027,34,0.233,43,0.925,45,0.808,47,1.334,49,0.865,51,0.925,53,0.925,55,0.925,57,0.925,59,0.865,63,0.011,64,0.015,65,0.011,95,2.076,97,2.858,98,2.858,99,2.684,104,1.14,117,1.062,124,2.362,132,0.49,146,1.691,147,1.691,149,2.362,161,1.696,162,1.862,164,2.992,198,2.076,199,2.076,201,2.076,220,0.865,229,3.045,261,1.862,263,3.638,264,3.147,277,3.147,279,1.548,280,1.862,282,1.862,309,2.411,313,2.362,314,1.691,315,2.362,341,1.691,343,3.509,344,1.862,345,2.362,346,1.548,362,1.32,364,1.32,366,0.925,398,2.076,399,2.076,476,2.362,521,2.362,522,2.362,605,1.862,607,2.362,613,2.362,637,1.691,698,3.509,702,1.862,703,2.992,747,2.362,799,2.992,880,2.076,1011,2.362,1012,2.362,1015,2.076,1071,2.362,1109,2.362,1117,2.362,1123,2.362,1133,2.362,1134,2.362,1149,2.362,1150,2.362,1151,2.798,1152,2.798,1153,5.716,1154,2.798,1155,4.033,1156,2.798,1157,4.033,1158,3.406,1159,6.668,1160,6.694,1161,2.798,1162,2.798,1163,3.406,1164,4.033,1165,2.362,1166,5.333,1167,5.333,1168,2.362,1169,2.076,1170,2.362,1171,4.729,1172,2.362,1173,2.362,1174,2.362,1175,2.362,1176,2.362,1177,2.362,1178,2.798,1179,4.729,1180,2.798,1181,2.362,1182,2.362,1183,2.362,1184,2.798,1185,2.798]],["title/dependencies.html",[69,1.772,1186,2.812]],["body/dependencies.html",[29,0.027,32,0.489,63,0.018,64,0.022,65,0.018,69,2.072,86,4.829,87,4.243,115,3.149,276,2.413,391,2.413,461,2.619,807,3.997,878,3.997,1187,4.733,1188,6.824,1189,4.733,1190,5.719,1191,4.733,1192,4.733,1193,4.733,1194,4.733,1195,4.733,1196,3.997,1197,4.733,1198,4.733,1199,4.733,1200,4.733,1201,4.733]],["title/miscellaneous/functions.html",[1202,1.871,1203,3.418]],["body/miscellaneous/functions.html",[21,0.729,28,1.275,29,0.026,41,1.021,63,0.019,64,0.022,65,0.019,95,4.325,97,2.952,98,3.522,104,1.99,155,1.369,156,1.369,263,2.704,264,3.878,310,3.625,343,3.625,371,3.878,398,4.325,399,4.622,1163,4.125,1202,3.251,1203,4.125,1204,5.829,1205,4.125,1206,4.885,1207,4.885]],["title/index.html",[21,0.42,1208,2.375,1209,2.375]],["body/index.html",[9,0.16,15,1.525,29,0.026,46,0.836,63,0.01,64,0.014,65,0.01,96,2.133,185,1.681,187,2.491,297,1.874,348,1.526,564,4.446,566,5.281,570,2.133,575,4.519,599,4.656,601,3.308,671,1.681,763,1.874,1146,3.765,1147,2.133,1196,2.133,1210,3.743,1211,2.526,1212,2.526,1213,2.526,1214,2.526,1215,3.743,1216,4.459,1217,2.526,1218,5.265,1219,3.743,1220,2.526,1221,4.459,1222,2.526,1223,4.931,1224,3.743,1225,2.526,1226,4.931,1227,2.526,1228,2.526,1229,2.526,1230,2.526,1231,5.055,1232,2.526,1233,2.526,1234,5.265,1235,6.511,1236,4.931,1237,3.743,1238,2.526,1239,3.743,1240,2.526,1241,2.526,1242,2.526,1243,2.133,1244,2.526,1245,2.526,1246,3.743,1247,2.526,1248,4.459,1249,2.526,1250,2.526,1251,4.459,1252,2.526,1253,2.526,1254,2.526,1255,2.526,1256,2.526,1257,2.526,1258,3.161,1259,3.743,1260,6.091,1261,5.265,1262,4.459,1263,2.526,1264,6.179,1265,3.743,1266,2.526,1267,2.526,1268,2.526,1269,2.526,1270,2.526,1271,2.526,1272,3.743,1273,3.743,1274,2.526,1275,2.526,1276,2.526,1277,2.526,1278,5.265,1279,2.526,1280,2.526,1281,4.931,1282,5.514,1283,2.526,1284,2.526,1285,5.514,1286,4.459,1287,2.526,1288,4.459,1289,2.526,1290,2.526,1291,5.265,1292,2.526,1293,2.526,1294,4.931,1295,3.743,1296,3.743,1297,3.743,1298,3.743,1299,2.526,1300,4.931,1301,2.526,1302,2.526,1303,2.526,1304,3.743,1305,2.526,1306,4.931,1307,4.459,1308,2.526,1309,3.743,1310,2.526,1311,3.743,1312,3.743,1313,3.743,1314,4.459,1315,3.743,1316,2.526,1317,2.526,1318,2.526,1319,2.526,1320,2.526,1321,2.526,1322,2.526,1323,2.526,1324,2.526,1325,2.526,1326,2.526,1327,2.526,1328,2.526,1329,2.526,1330,3.743,1331,3.743,1332,2.526,1333,3.743,1334,2.526,1335,2.526,1336,2.526,1337,2.526,1338,2.526,1339,2.526,1340,3.743,1341,2.526,1342,3.743,1343,2.526,1344,2.526,1345,3.743,1346,2.526,1347,2.526,1348,2.526,1349,2.526,1350,2.526,1351,2.526,1352,2.526,1353,2.526,1354,2.526,1355,2.526,1356,2.526,1357,2.526,1358,2.526,1359,2.526,1360,2.526,1361,2.526,1362,2.526,1363,3.743,1364,2.526,1365,2.526,1366,2.526,1367,2.526,1368,2.526,1369,2.526,1370,2.526]],["title/license.html",[1208,2.375,1209,2.375,1371,2.375]],["body/license.html",[29,0.02,63,0.016,64,0.02,65,0.016,82,2.003,518,3.151,663,3.151,763,3.151,922,3.586,1150,3.586,1169,3.151,1243,3.586,1371,3.586,1372,4.247,1373,5.855,1374,4.247,1375,5.349,1376,5.349,1377,4.247,1378,4.247,1379,4.247,1380,4.247,1381,4.247,1382,4.247,1383,5.349,1384,6.702,1385,4.247,1386,4.247,1387,4.247,1388,5.855,1389,4.247,1390,5.349,1391,4.247,1392,4.247,1393,5.349,1394,4.247,1395,4.247,1396,4.247,1397,4.247,1398,4.247,1399,4.247,1400,4.247,1401,5.349,1402,4.247,1403,4.247,1404,4.247,1405,4.247,1406,4.247,1407,4.247,1408,5.349,1409,5.349,1410,4.247,1411,4.247,1412,4.247,1413,4.247,1414,4.247,1415,4.247,1416,4.247,1417,4.247,1418,4.247,1419,4.247,1420,4.247,1421,4.247,1422,4.247,1423,4.247,1424,4.247,1425,4.247,1426,4.247,1427,4.247,1428,4.247,1429,4.247,1430,4.247,1431,4.247,1432,4.247,1433,4.247,1434,4.247,1435,4.247,1436,4.247,1437,4.247]],["title/modules.html",[68,1.744]],["body/modules.html",[29,0.022,63,0.019,64,0.022,65,0.019,67,3.251,68,1.855,78,2.952,79,2.704,87,4.964,474,2.952,786,3.251,790,2.952,791,2.952,1097,2.952,1438,6.69,1439,6.69,1440,6.816,1441,5.829,1442,5.829]],["title/overview.html",[1443,3.878]],["body/overview.html",[1,2.079,2,1.438,29,0.027,35,0.952,43,2.079,45,1.546,49,1.655,51,2.079,53,1.772,55,2.079,57,2.079,59,1.655,63,0.014,64,0.018,65,0.014,66,1.019,67,4.306,68,1.34,69,1.546,70,1.8,71,1.8,72,1.665,73,1.546,74,2.981,75,2.981,76,2.981,77,2.981,78,3.236,79,3.677,80,2.237,81,1.8,82,1.665,113,2.133,146,2.133,147,3.798,163,1.954,234,2.133,244,2.418,248,2.981,254,2.981,342,2.133,453,2.981,454,2.981,455,2.981,474,3.61,605,2.349,773,2.981,786,4.251,787,2.981,788,2.981,789,2.981,790,3.717,791,4.062,1061,2.981,1062,2.981,1063,2.981,1093,2.981,1094,2.981,1095,2.981,1096,2.981,1097,3.236,1112,2.981,1113,2.981,1114,2.981,1443,2.981,1444,3.53]],["title/routes.html",[113,2.775]],["body/routes.html",[29,0.024,63,0.021,64,0.024,65,0.021,113,3.287]],["title/miscellaneous/variables.html",[1202,1.871,1445,3.418]],["body/miscellaneous/variables.html",[21,0.357,29,0.027,41,0.756,60,0.907,63,0.009,64,0.014,65,0.009,110,3.201,116,1.954,117,2.189,132,1.131,134,2.479,135,2.313,153,1.11,158,0.791,164,1.773,185,3.729,187,3.729,198,2.665,199,2.665,201,2.665,202,2.018,203,3.643,204,3.643,205,3.643,206,2.018,207,2.018,208,2.018,209,2.018,210,2.018,211,1.59,212,2.018,213,3.033,214,2.018,229,1.572,234,1.444,244,1.218,263,1.988,277,3.595,279,1.323,280,2.39,304,3.422,346,1.988,366,0.791,369,2.446,383,1.218,555,2.018,575,1.773,578,3.033,601,1.773,602,2.018,608,4.343,609,4.343,641,3.201,689,2.018,799,1.773,880,2.665,881,2.018,888,3.201,1015,2.665,1118,3.643,1119,3.643,1158,2.018,1165,2.018,1166,2.018,1167,5.22,1168,4.98,1169,4.458,1170,4.98,1172,3.643,1173,3.643,1174,3.643,1175,3.643,1176,3.643,1177,3.643,1181,2.018,1182,2.018,1183,2.018,1202,1.59,1205,5.152,1231,3.033,1258,3.033,1445,2.018,1446,2.39,1447,2.39,1448,2.39,1449,2.39,1450,2.39,1451,2.39,1452,3.591,1453,4.798,1454,3.591,1455,2.39,1456,3.591,1457,2.39,1458,3.591,1459,3.591,1460,3.591,1461,2.39,1462,2.39,1463,2.39,1464,2.39,1465,2.39,1466,2.39,1467,2.39,1468,5.604,1469,2.39,1470,2.39,1471,2.39,1472,2.39,1473,2.39,1474,2.39,1475,2.39,1476,3.591,1477,2.39,1478,2.39,1479,4.315,1480,4.315,1481,4.315,1482,3.591,1483,3.591]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":229,"title":{},"body":{"injectables/DrawerService.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.5",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":210,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["0.6",{"_index":214,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["0.7",{"_index":208,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["0.8.29",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":206,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["0/1",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1080,"title":{},"body":{"components/PanelComponent.html":{}}}],["1",{"_index":244,"title":{},"body":{"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"components/MainComponent.html":{},"injectables/MapDataService.html":{},"components/TspComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).tostring",{"_index":427,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["1)[0",{"_index":413,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["1.5s",{"_index":776,"title":{},"body":{"components/MainComponent.html":{}}}],["1/1",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":235,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{}}}],["100",{"_index":698,"title":{},"body":{"components/InputComponent.html":{},"components/MainComponent.html":{},"coverage.html":{}}}],["1000",{"_index":770,"title":{},"body":{"components/MainComponent.html":{}}}],["10px",{"_index":998,"title":{},"body":{"components/MapComponent.html":{}}}],["127.0.0.1",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":1006,"title":{},"body":{"components/MapComponent.html":{}}}],["188",{"_index":205,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["19",{"_index":1243,"title":{},"body":{"index.html":{},"license.html":{}}}],["1].end",{"_index":1051,"title":{},"body":{"injectables/MapDataService.html":{}}}],["1].end.id",{"_index":1049,"title":{},"body":{"injectables/MapDataService.html":{}}}],["1].replace(\"city",{"_index":426,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["1px",{"_index":1081,"title":{},"body":{"components/PanelComponent.html":{}}}],["1rem",{"_index":512,"title":{},"body":{"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/TspComponent.html":{}}}],["1s",{"_index":785,"title":{},"body":{"components/MainComponent.html":{}}}],["2",{"_index":234,"title":{},"body":{"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"components/MapComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.348773",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.525914",{"_index":963,"title":{},"body":{"components/MapComponent.html":{}}}],["2.6.5",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":256,"title":{},"body":{"injectables/DrawerService.html":{},"components/MainComponent.html":{}}}],["200",{"_index":290,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["2018",{"_index":1375,"title":{},"body":{"license.html":{}}}],["20px",{"_index":1010,"title":{},"body":{"components/MapComponent.html":{}}}],["255",{"_index":213,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["25px",{"_index":999,"title":{},"body":{"components/MapComponent.html":{}}}],["3",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":780,"title":{},"body":{"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["3px",{"_index":1092,"title":{},"body":{"components/PanelComponent.html":{}}}],["4",{"_index":248,"title":{},"body":{"injectables/DrawerService.html":{},"overview.html":{}}}],["4.722300",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":302,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["45",{"_index":1090,"title":{},"body":{"components/PanelComponent.html":{}}}],["46.483440",{"_index":961,"title":{},"body":{"components/MapComponent.html":{}}}],["48.856783",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.119457",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.762460",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":1002,"title":{},"body":{"components/MapComponent.html":{}}}],["5",{"_index":773,"title":{},"body":{"components/MainComponent.html":{},"overview.html":{}}}],["56px",{"_index":784,"title":{},"body":{"components/MainComponent.html":{}}}],["5rem",{"_index":520,"title":{},"body":{"components/GpsComponent.html":{}}}],["6",{"_index":252,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{}}}],["6.175982",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.0",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["640px",{"_index":781,"title":{},"body":{"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["7.2.8",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["7.3.3",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":254,"title":{},"body":{"injectables/DrawerService.html":{},"overview.html":{}}}],["81",{"_index":204,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":1444,"title":{},"body":{"overview.html":{}}}],["90",{"_index":774,"title":{},"body":{"components/MainComponent.html":{}}}],["900px",{"_index":779,"title":{},"body":{"components/MainComponent.html":{}}}],["_",{"_index":674,"title":{},"body":{"components/InputComponent.html":{}}}],["_value",{"_index":631,"title":{},"body":{"components/InputComponent.html":{}}}],["above",{"_index":1407,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":767,"title":{},"body":{"components/MainComponent.html":{}}}],["abstract",{"_index":347,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["accessors",{"_index":636,"title":{},"body":{"components/InputComponent.html":{}}}],["accu.concat(x",{"_index":584,"title":{},"body":{"injectables/HttpService.html":{}}}],["action",{"_index":518,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{},"license.html":{}}}],["active",{"_index":1088,"title":{},"body":{"components/PanelComponent.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["add_circle",{"_index":507,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["addcity",{"_index":353,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["addpath",{"_index":1017,"title":{},"body":{"injectables/MapDataService.html":{}}}],["addpath(...paths",{"_index":1040,"title":{},"body":{"injectables/MapDataService.html":{}}}],["addpath(paths",{"_index":1025,"title":{},"body":{"injectables/MapDataService.html":{}}}],["addpointerslocations",{"_index":1018,"title":{},"body":{"injectables/MapDataService.html":{}}}],["addpointerslocations(...positions",{"_index":1054,"title":{},"body":{"injectables/MapDataService.html":{}}}],["addpointerslocations(positions",{"_index":1027,"title":{},"body":{"injectables/MapDataService.html":{}}}],["and/or",{"_index":1399,"title":{},"body":{"license.html":{}}}],["android",{"_index":1294,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1229,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":1238,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":461,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["angular/compiler",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":391,"title":{},"body":{"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"modules/PanelModule.html":{},"components/TspComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":473,"title":{},"body":{"modules/GlobalModule.html":{}}}],["angular/material/button",{"_index":466,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{}}}],["angular/material/dialog",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"classes/Log.html":{},"injectables/LogService.html":{}}}],["angular/material/icon",{"_index":468,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{}}}],["angular/material/input",{"_index":470,"title":{},"body":{"modules/GlobalModule.html":{}}}],["angular/material/tabs",{"_index":1103,"title":{},"body":{"modules/PanelModule.html":{}}}],["angular/material/toolbar",{"_index":797,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tooltip",{"_index":1067,"title":{},"body":{"modules/MapModule.html":{}}}],["angular/platform",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{},"modules/PanelRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":281,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["api.objecttoreturn.call(undefined",{"_index":292,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["apirest",{"_index":280,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apirest.find(apirest",{"_index":284,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["apirest.method",{"_index":287,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["app.component",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["apparaît",{"_index":1247,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":67,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":78,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appuye",{"_index":1354,"title":{},"body":{"index.html":{}}}],["après",{"_index":1349,"title":{},"body":{"index.html":{}}}],["apt",{"_index":1255,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1435,"title":{},"body":{"license.html":{}}}],["arrivelcity",{"_index":442,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["arrow",{"_index":1004,"title":{},"body":{"components/MapComponent.html":{}}}],["aserror",{"_index":706,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["asinfo",{"_index":707,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["associated",{"_index":1385,"title":{},"body":{"license.html":{}}}],["aswarn",{"_index":708,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["async",{"_index":358,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["au",{"_index":1296,"title":{},"body":{"index.html":{}}}],["aussi",{"_index":1312,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1425,"title":{},"body":{"license.html":{}}}],["auto",{"_index":517,"title":{},"body":{"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["automatiquement",{"_index":1305,"title":{},"body":{"index.html":{}}}],["available",{"_index":1442,"title":{},"body":{"modules.html":{}}}],["avant",{"_index":1321,"title":{},"body":{"index.html":{}}}],["avec",{"_index":1316,"title":{},"body":{"index.html":{}}}],["await",{"_index":450,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["backend",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["backend/api/api.ts",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["backend/api/apirestinterface.ts",{"_index":607,"title":{},"body":{"interfaces/IApiRest.html":{},"coverage.html":{}}}],["backend/api/mock",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["backend/mock",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["background",{"_index":997,"title":{},"body":{"components/MapComponent.html":{},"components/PanelComponent.html":{}}}],["bas",{"_index":1347,"title":{},"body":{"index.html":{}}}],["bien",{"_index":1267,"title":{},"body":{"index.html":{}}}],["block",{"_index":511,"title":{},"body":{"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["blue1",{"_index":202,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["blue2",{"_index":207,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["blue3",{"_index":209,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":291,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["bonus",{"_index":1329,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"components/ButtonComponent.html":{},"components/MainComponent.html":{}}}],["bootstrap",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["border",{"_index":1000,"title":{},"body":{"components/MapComponent.html":{}}}],["box",{"_index":1078,"title":{},"body":{"components/PanelComponent.html":{}}}],["break",{"_index":742,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["browse",{"_index":1440,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1251,"title":{},"body":{"index.html":{}}}],["build:apps",{"_index":1318,"title":{},"body":{"index.html":{}}}],["build:prod",{"_index":1317,"title":{},"body":{"index.html":{}}}],["build:prod(ou",{"_index":1320,"title":{},"body":{"index.html":{}}}],["build:prod:mock",{"_index":1311,"title":{},"body":{"index.html":{}}}],["button",{"_index":125,"title":{},"body":{"components/ButtonComponent.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["button'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["button.component.html",{"_index":127,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":126,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button/button.component",{"_index":462,"title":{},"body":{"modules/GlobalModule.html":{}}}],["buttoncomponent",{"_index":43,"title":{"components/ButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":1374,"title":{},"body":{"license.html":{}}}],["c'est",{"_index":294,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["calculer",{"_index":1132,"title":{},"body":{"components/TspComponent.html":{}}}],["canvas",{"_index":802,"title":{},"body":{"components/MapComponent.html":{}}}],["canvastmp",{"_index":803,"title":{},"body":{"components/MapComponent.html":{}}}],["capitalize",{"_index":150,"title":{},"body":{"pipes/CapitalizePipe.html":{},"components/InputComponent.html":{}}}],["capitalize.pipe",{"_index":1116,"title":{},"body":{"modules/PipesModule.html":{}}}],["capitalizepipe",{"_index":147,"title":{"pipes/CapitalizePipe.html":{}},"body":{"pipes/CapitalizePipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":740,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["catch",{"_index":914,"title":{},"body":{"components/MapComponent.html":{}}}],["catcherror",{"_index":549,"title":{},"body":{"injectables/HttpService.html":{}}}],["catcherror(err",{"_index":577,"title":{},"body":{"injectables/HttpService.html":{}}}],["ce",{"_index":1147,"title":{},"body":{"injectables/UserLocationService.html":{},"index.html":{}}}],["change",{"_index":1013,"title":{},"body":{"injectables/MapDataService.html":{}}}],["charge",{"_index":1380,"title":{},"body":{"license.html":{}}}],["charleville",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["chemins",{"_index":578,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":908,"title":{},"body":{"components/MapComponent.html":{}}}],["circle",{"_index":142,"title":{},"body":{"components/ButtonComponent.html":{}}}],["cites",{"_index":1207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cities",{"_index":346,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cities.filter((city",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city",{"_index":419,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{}}}],["city.name",{"_index":696,"title":{},"body":{"components/InputComponent.html":{}}}],["city.name.indexof(req.params.get('name",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["citycontrolname",{"_index":428,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["citypushed",{"_index":1014,"title":{},"body":{"injectables/MapDataService.html":{}}}],["citytoremove",{"_index":388,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["cl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"index.html":{}}}],["claim",{"_index":1428,"title":{},"body":{"license.html":{}}}],["class",{"_index":34,"title":{"classes/FormPanelUtils.html":{},"classes/Log.html":{},"classes/Path.html":{},"classes/Place.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["classes",{"_index":342,"title":{},"body":{"classes/FormPanelUtils.html":{},"classes/Log.html":{},"classes/Path.html":{},"classes/Place.html":{},"overview.html":{}}}],["clear",{"_index":170,"title":{},"body":{"injectables/DrawerService.html":{}}}],["clearmap",{"_index":815,"title":{},"body":{"components/MapComponent.html":{}}}],["cli",{"_index":1230,"title":{},"body":{"index.html":{}}}],["client",{"_index":1302,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1239,"title":{},"body":{"index.html":{}}}],["close",{"_index":694,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["closepanel",{"_index":752,"title":{},"body":{"components/MainComponent.html":{}}}],["closepopup",{"_index":1009,"title":{},"body":{"components/MapComponent.html":{}}}],["cluster_appmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_globalmodule",{"_index":453,"title":{},"body":{"modules/GlobalModule.html":{},"overview.html":{}}}],["cluster_globalmodule_declarations",{"_index":454,"title":{},"body":{"modules/GlobalModule.html":{},"overview.html":{}}}],["cluster_globalmodule_exports",{"_index":455,"title":{},"body":{"modules/GlobalModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":787,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_declarations",{"_index":788,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_imports",{"_index":789,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mapmodule",{"_index":1061,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declarations",{"_index":1062,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_exports",{"_index":1063,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_panelmodule",{"_index":1093,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_declarations",{"_index":1094,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_exports",{"_index":1096,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_imports",{"_index":1095,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":1112,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1113,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1114,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["code",{"_index":1331,"title":{},"body":{"index.html":{}}}],["color",{"_index":129,"title":{},"body":{"components/ButtonComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{}}}],["colors",{"_index":201,"title":{},"body":{"injectables/DrawerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colors.blue1",{"_index":246,"title":{},"body":{"injectables/DrawerService.html":{}}}],["colors.blue2",{"_index":253,"title":{},"body":{"injectables/DrawerService.html":{}}}],["colors.blue3",{"_index":255,"title":{},"body":{"injectables/DrawerService.html":{}}}],["colors.white",{"_index":251,"title":{},"body":{"injectables/DrawerService.html":{}}}],["column",{"_index":515,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["commandes",{"_index":1295,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":460,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{}}}],["compile",{"_index":1259,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1270,"title":{},"body":{"index.html":{}}}],["compiler",{"_index":1306,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"modules/PanelRoutingModule.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"overview.html":{}}}],["composant/global/erreur",{"_index":727,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["composant/global/global.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["composant/main/main.module#mainmodule",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["composant/main/map/icones/icones",{"_index":200,"title":{},"body":{"injectables/DrawerService.html":{}}}],["conditions",{"_index":1406,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":1287,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1436,"title":{},"body":{"license.html":{}}}],["connu",{"_index":300,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["console.error(this.message",{"_index":741,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["console.info(this.message",{"_index":744,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["console.warn(this.message",{"_index":743,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["const",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"modules/PanelRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/DrawerService.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["constructor(dialog",{"_index":711,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["constructor(dialogref",{"_index":322,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["constructor(http",{"_index":361,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{}}}],["constructor(id",{"_index":1120,"title":{},"body":{"classes/Place.html":{}}}],["constructor(logservice",{"_index":1068,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{}}}],["constructor(private",{"_index":283,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{}}}],["constructor(protected",{"_index":401,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["constructor(public",{"_index":730,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{},"classes/Place.html":{}}}],["constructor(userlocationservice",{"_index":831,"title":{},"body":{"components/MapComponent.html":{}}}],["container",{"_index":804,"title":{},"body":{"components/MapComponent.html":{}}}],["context",{"_index":194,"title":{},"body":{"injectables/DrawerService.html":{}}}],["contract",{"_index":1432,"title":{},"body":{"license.html":{}}}],["control.value",{"_index":415,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["controls",{"_index":409,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["controls.find(control",{"_index":414,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["controls.length",{"_index":411,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["controls.push(controls.splice(1",{"_index":412,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["controlvalueaccessor",{"_index":614,"title":{},"body":{"components/InputComponent.html":{}}}],["copier",{"_index":1322,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1401,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1383,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1373,"title":{},"body":{"license.html":{}}}],["cordova/www",{"_index":1328,"title":{},"body":{"index.html":{}}}],["core",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1149,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createpopup",{"_index":816,"title":{},"body":{"components/MapComponent.html":{}}}],["createpopup(name",{"_index":837,"title":{},"body":{"components/MapComponent.html":{}}}],["createrequestgps",{"_index":523,"title":{},"body":{"injectables/HttpService.html":{}}}],["createrequestgps(positions",{"_index":532,"title":{},"body":{"injectables/HttpService.html":{}}}],["createrequesttsp",{"_index":524,"title":{},"body":{"injectables/HttpService.html":{}}}],["createrequesttsp(positions",{"_index":534,"title":{},"body":{"injectables/HttpService.html":{}}}],["crit",{"_index":1356,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":167,"title":{},"body":{"injectables/DrawerService.html":{}}}],["current",{"_index":348,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"index.html":{}}}],["current_position",{"_index":903,"title":{},"body":{"components/MapComponent.html":{}}}],["custom_elements_schema",{"_index":459,"title":{},"body":{"modules/GlobalModule.html":{},"modules/PanelModule.html":{}}}],["damages",{"_index":1429,"title":{},"body":{"license.html":{}}}],["dans",{"_index":1231,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":320,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{}}}],["data.message",{"_index":334,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["data.service",{"_index":393,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["data.service.ts",{"_index":1012,"title":{},"body":{"injectables/MapDataService.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":1038,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:11",{"_index":1039,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:12",{"_index":1036,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:13",{"_index":1037,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:15",{"_index":1026,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:28",{"_index":1034,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:33",{"_index":1028,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:38",{"_index":1035,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:43",{"_index":1030,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:47",{"_index":1029,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:51",{"_index":1031,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.service.ts:55",{"_index":1033,"title":{},"body":{"injectables/MapDataService.html":{}}}],["data.ts",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data:image/svg+xml;utf8",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["de",{"_index":564,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["deal",{"_index":1387,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1437,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1308,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["decorators",{"_index":326,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"components/MapComponent.html":{}}}],["deep.mat",{"_index":1085,"title":{},"body":{"components/PanelComponent.html":{}}}],["default",{"_index":134,"title":{},"body":{"components/ButtonComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["delete",{"_index":612,"title":{},"body":{"interfaces/IApiRest.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["des",{"_index":601,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dessus",{"_index":1297,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1262,"title":{},"body":{"index.html":{}}}],["devriez",{"_index":1268,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":704,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["dialogref",{"_index":321,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["direction",{"_index":514,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["directions",{"_index":764,"title":{},"body":{"components/MainComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["directives",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["disabled",{"_index":130,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{}}}],["display",{"_index":510,"title":{},"body":{"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["dispo",{"_index":603,"title":{},"body":{"injectables/HttpService.html":{}}}],["disponible",{"_index":1144,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["disponibles",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1397,"title":{},"body":{"license.html":{}}}],["document.getelementbyid(\"mapbox",{"_index":913,"title":{},"body":{"components/MapComponent.html":{}}}],["documentation",{"_index":1150,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["dossier",{"_index":1327,"title":{},"body":{"index.html":{}}}],["down",{"_index":1005,"title":{},"body":{"components/MapComponent.html":{}}}],["drawerservice",{"_index":162,"title":{"injectables/DrawerService.html":{}},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{},"coverage.html":{}}}],["drawlocation",{"_index":817,"title":{},"body":{"components/MapComponent.html":{}}}],["drawmap",{"_index":818,"title":{},"body":{"components/MapComponent.html":{}}}],["drawpaths",{"_index":819,"title":{},"body":{"components/MapComponent.html":{}}}],["drawpositions",{"_index":820,"title":{},"body":{"components/MapComponent.html":{}}}],["drawuserlocation",{"_index":821,"title":{},"body":{"components/MapComponent.html":{}}}],["droite",{"_index":1348,"title":{},"body":{"index.html":{}}}],["du",{"_index":1216,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["défini",{"_index":1369,"title":{},"body":{"index.html":{}}}],["démarre",{"_index":1263,"title":{},"body":{"index.html":{}}}],["dépendances",{"_index":1246,"title":{},"body":{"index.html":{}}}],["e",{"_index":915,"title":{},"body":{"components/MapComponent.html":{}}}],["electron",{"_index":1300,"title":{},"body":{"index.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["elementref",{"_index":762,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["emptybackendinterceptor",{"_index":261,"title":{"interceptors/EmptyBackendInterceptor.html":{}},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{}}}],["en",{"_index":1291,"title":{},"body":{"index.html":{}}}],["end",{"_index":185,"title":{},"body":{"injectables/DrawerService.html":{},"classes/Path.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["end.y",{"_index":260,"title":{},"body":{"injectables/DrawerService.html":{}}}],["endpixels",{"_index":982,"title":{},"body":{"components/MapComponent.html":{}}}],["entrer",{"_index":1360,"title":{},"body":{"index.html":{}}}],["entrycomponents",{"_index":457,"title":{},"body":{"modules/GlobalModule.html":{}}}],["environment",{"_index":277,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.isserveurmock",{"_index":311,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["environment.urlserveur",{"_index":306,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["environments/environment",{"_index":278,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["err",{"_index":562,"title":{},"body":{"injectables/HttpService.html":{},"injectables/UserLocationService.html":{}}}],["err).aserror().and.log",{"_index":604,"title":{},"body":{"injectables/HttpService.html":{}}}],["err).aserror().showpopup().and.log",{"_index":571,"title":{},"body":{"injectables/HttpService.html":{}}}],["err.message).aswarn().and.log",{"_index":1145,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["erreur",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"index.html":{}}}],["erreurpopupcomponent",{"_index":45,"title":{"components/ErreurPopUpComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["error",{"_index":716,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["essential",{"_index":1256,"title":{},"body":{"index.html":{}}}],["est",{"_index":1286,"title":{},"body":{"index.html":{}}}],["et",{"_index":1260,"title":{},"body":{"index.html":{}}}],["event",{"_index":922,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["event.clienty",{"_index":925,"title":{},"body":{"components/MapComponent.html":{}}}],["eventemitter",{"_index":646,"title":{},"body":{"components/InputComponent.html":{}}}],["executer",{"_index":1234,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["exports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["express",{"_index":1416,"title":{},"body":{"license.html":{}}}],["extends",{"_index":477,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["extentions",{"_index":1342,"title":{},"body":{"index.html":{}}}],["f1",{"_index":1355,"title":{},"body":{"index.html":{}}}],["facilitent",{"_index":1334,"title":{},"body":{"index.html":{}}}],["faire",{"_index":598,"title":{},"body":{"injectables/HttpService.html":{}}}],["false",{"_index":641,"title":{},"body":{"components/InputComponent.html":{},"components/MainComponent.html":{},"miscellaneous/variables.html":{}}}],["faut",{"_index":1319,"title":{},"body":{"index.html":{}}}],["fenetre",{"_index":1358,"title":{},"body":{"index.html":{}}}],["fenêtre",{"_index":1345,"title":{},"body":{"index.html":{}}}],["ferme",{"_index":1276,"title":{},"body":{"index.html":{}}}],["fermerpopup",{"_index":822,"title":{},"body":{"components/MapComponent.html":{}}}],["fichier",{"_index":1288,"title":{},"body":{"index.html":{}}}],["fichiers",{"_index":1314,"title":{},"body":{"index.html":{}}}],["field",{"_index":700,"title":{},"body":{"components/InputComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1386,"title":{},"body":{"license.html":{}}}],["fill",{"_index":783,"title":{},"body":{"components/MainComponent.html":{}}}],["filter(o",{"_index":588,"title":{},"body":{"injectables/HttpService.html":{}}}],["filtercities",{"_index":623,"title":{},"body":{"components/InputComponent.html":{}}}],["filtercities(value",{"_index":648,"title":{},"body":{"components/InputComponent.html":{}}}],["filtered_cities",{"_index":620,"title":{},"body":{"components/InputComponent.html":{}}}],["fitness",{"_index":1421,"title":{},"body":{"license.html":{}}}],["flags",{"_index":705,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["flat",{"_index":140,"title":{},"body":{"components/ButtonComponent.html":{}}}],["flex",{"_index":513,"title":{},"body":{"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/TspComponent.html":{}}}],["fn",{"_index":385,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{}}}],["fn.call(this.http",{"_index":449,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["following",{"_index":1405,"title":{},"body":{"license.html":{}}}],["forever",{"_index":1213,"title":{},"body":{"index.html":{}}}],["form",{"_index":499,"title":{},"body":{"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{}}}],["formcontrol",{"_index":390,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formcontrol(undefined",{"_index":423,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formcontrolname",{"_index":418,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/InputComponent.html":{}}}],["formgroup",{"_index":373,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils",{"_index":341,"title":{"classes/FormPanelUtils.html":{}},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["formpanelutils:10",{"_index":496,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:11",{"_index":498,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:12",{"_index":495,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:13",{"_index":493,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:14",{"_index":494,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:15",{"_index":497,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:20",{"_index":490,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:36",{"_index":486,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:42",{"_index":488,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:50",{"_index":492,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:56",{"_index":489,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:63",{"_index":487,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["formpanelutils:73",{"_index":491,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["forms.validators",{"_index":400,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["formsmodule",{"_index":464,"title":{},"body":{"modules/GlobalModule.html":{},"modules/PanelModule.html":{}}}],["forwardref",{"_index":617,"title":{},"body":{"components/InputComponent.html":{}}}],["free",{"_index":1379,"title":{},"body":{"license.html":{}}}],["front",{"_index":1210,"title":{},"body":{"index.html":{}}}],["front.code",{"_index":1341,"title":{},"body":{"index.html":{}}}],["front.git",{"_index":1245,"title":{},"body":{"index.html":{}}}],["full",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PanelRoutingModule.html":{}}}],["function",{"_index":309,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1203,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1404,"title":{},"body":{"license.html":{}}}],["g",{"_index":1237,"title":{},"body":{"index.html":{}}}],["geolocation",{"_index":1143,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["getallpositions",{"_index":525,"title":{},"body":{"injectables/HttpService.html":{}}}],["getcitiesnamefromform",{"_index":354,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["getidfornewcity",{"_index":355,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["getmenuproperties",{"_index":753,"title":{},"body":{"components/MainComponent.html":{}}}],["getnearestposition",{"_index":526,"title":{},"body":{"injectables/HttpService.html":{}}}],["getnearestposition(positionuser",{"_index":537,"title":{},"body":{"injectables/HttpService.html":{}}}],["getpath",{"_index":527,"title":{},"body":{"injectables/HttpService.html":{}}}],["getpath(positions",{"_index":540,"title":{},"body":{"injectables/HttpService.html":{}}}],["getposition",{"_index":823,"title":{},"body":{"components/MapComponent.html":{}}}],["getposition(userposition",{"_index":845,"title":{},"body":{"components/MapComponent.html":{}}}],["getpositionfromforms",{"_index":356,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["getting",{"_index":1208,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettsp",{"_index":528,"title":{},"body":{"injectables/HttpService.html":{}}}],["gettsp(positions",{"_index":542,"title":{},"body":{"injectables/HttpService.html":{}}}],["getuserlocation",{"_index":624,"title":{},"body":{"components/InputComponent.html":{},"injectables/UserLocationService.html":{}}}],["getvalue",{"_index":665,"title":{},"body":{"components/InputComponent.html":{}}}],["getzoomstate",{"_index":824,"title":{},"body":{"components/MapComponent.html":{}}}],["getzoomstate(userposition",{"_index":847,"title":{},"body":{"components/MapComponent.html":{}}}],["git",{"_index":1241,"title":{},"body":{"index.html":{}}}],["global/global.module",{"_index":1104,"title":{},"body":{"modules/PanelModule.html":{}}}],["globalmodule",{"_index":79,"title":{"modules/GlobalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/PanelModule.html":{},"modules.html":{},"overview.html":{}}}],["gps",{"_index":478,"title":{},"body":{"components/GpsComponent.html":{},"modules/PanelRoutingModule.html":{}}}],["gps'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["gps.component.html",{"_index":480,"title":{},"body":{"components/GpsComponent.html":{}}}],["gps.component.scss",{"_index":479,"title":{},"body":{"components/GpsComponent.html":{}}}],["gps/gps.component",{"_index":1100,"title":{},"body":{"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{}}}],["gpscomponent",{"_index":49,"title":{"components/GpsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["granted",{"_index":1378,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1441,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":1082,"title":{},"body":{"components/PanelComponent.html":{}}}],["gyp",{"_index":1250,"title":{},"body":{"index.html":{}}}],["height",{"_index":765,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["heightoffset",{"_index":236,"title":{},"body":{"injectables/DrawerService.html":{}}}],["hereby",{"_index":1377,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1426,"title":{},"body":{"license.html":{}}}],["host",{"_index":509,"title":{},"body":{"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["hostlistener",{"_index":876,"title":{},"body":{"components/MapComponent.html":{}}}],["hostlistener('window:resize",{"_index":894,"title":{},"body":{"components/MapComponent.html":{}}}],["hostlisteners",{"_index":829,"title":{},"body":{"components/MapComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["htmlimageelement",{"_index":195,"title":{},"body":{"injectables/DrawerService.html":{}}}],["http",{"_index":305,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{}}}],["http://localhost:4200",{"_index":1275,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":530,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclientmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":273,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httphandler",{"_index":269,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httpinterceptor",{"_index":274,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httpparams",{"_index":546,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpparams().set('lat",{"_index":556,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpparams().set('name",{"_index":595,"title":{},"body":{"injectables/HttpService.html":{}}}],["httprequest",{"_index":267,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httpresponse",{"_index":275,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["https://code.visualstudio.com/download",{"_index":1338,"title":{},"body":{"index.html":{}}}],["https://gitforwindows.org",{"_index":1222,"title":{},"body":{"index.html":{}}}],["https://github.com/2018",{"_index":1242,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/en",{"_index":1228,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":362,"title":{"injectables/HttpService.html":{}},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["iapirest",{"_index":279,"title":{"interfaces/IApiRest.html":{}},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interfaces/IApiRest.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":141,"title":{},"body":{"components/ButtonComponent.html":{}}}],["id",{"_index":1118,"title":{},"body":{"classes/Place.html":{},"miscellaneous/variables.html":{}}}],["idend",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["idstart",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ils",{"_index":1367,"title":{},"body":{"index.html":{}}}],["image",{"_index":221,"title":{},"body":{"injectables/DrawerService.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{}}}],["implied",{"_index":1417,"title":{},"body":{"license.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["important",{"_index":1091,"title":{},"body":{"components/PanelComponent.html":{}}}],["imports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{}}}],["included",{"_index":1410,"title":{},"body":{"license.html":{}}}],["including",{"_index":1390,"title":{},"body":{"license.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1324,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["inherited",{"_index":485,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["initial",{"_index":934,"title":{},"body":{"components/MapComponent.html":{}}}],["initlocationpointer",{"_index":171,"title":{},"body":{"injectables/DrawerService.html":{}}}],["initmap",{"_index":825,"title":{},"body":{"components/MapComponent.html":{}}}],["initmouseevent",{"_index":826,"title":{},"body":{"components/MapComponent.html":{}}}],["inituserpointer",{"_index":172,"title":{},"body":{"injectables/DrawerService.html":{}}}],["inject",{"_index":330,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["inject(mat_dialog_data",{"_index":327,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["injectable",{"_index":161,"title":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{}},"body":{"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["injectables",{"_index":163,"title":{},"body":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{},"overview.html":{}}}],["inline",{"_index":1003,"title":{},"body":{"components/MapComponent.html":{}}}],["input",{"_index":145,"title":{},"body":{"components/ButtonComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{}}}],["input'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["input.component.html",{"_index":619,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":618,"title":{},"body":{"components/InputComponent.html":{}}}],["input.setvalue(city.name",{"_index":417,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["input/input.component",{"_index":463,"title":{},"body":{"modules/GlobalModule.html":{}}}],["inputcomponent",{"_index":51,"title":{"components/InputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs",{"_index":128,"title":{},"body":{"components/ButtonComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/TspComponent.html":{}}}],["inputvalidators",{"_index":349,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["instalation",{"_index":1215,"title":{},"body":{"index.html":{}}}],["install",{"_index":1236,"title":{},"body":{"index.html":{}}}],["installer",{"_index":1223,"title":{},"body":{"index.html":{}}}],["installées",{"_index":1353,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":265,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["intercept(request",{"_index":266,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["interceptor",{"_index":99,"title":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":264,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptor.ts:13",{"_index":1070,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["interceptor.ts:27",{"_index":270,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{}}}],["interceptor.ts:9",{"_index":1069,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["interceptors",{"_index":262,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["interface",{"_index":605,"title":{"interfaces/IApiRest.html":{}},"body":{"interfaces/IApiRest.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":606,"title":{},"body":{"interfaces/IApiRest.html":{}}}],["ismenuopen",{"_index":751,"title":{},"body":{"components/MainComponent.html":{}}}],["isserveurmock",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issmallscreen",{"_index":754,"title":{},"body":{"components/MainComponent.html":{}}}],["js",{"_index":1196,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["key",{"_index":880,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1415,"title":{},"body":{"license.html":{}}}],["knowcity",{"_index":398,"title":{},"body":{"classes/FormPanelUtils.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["knowcity(cites",{"_index":1206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["knowcity(this.cities",{"_index":405,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["l'app",{"_index":1283,"title":{},"body":{"index.html":{}}}],["l'appli",{"_index":1285,"title":{},"body":{"index.html":{}}}],["l'application",{"_index":1258,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["l'url",{"_index":297,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"index.html":{}}}],["la",{"_index":1226,"title":{},"body":{"index.html":{}}}],["label",{"_index":1087,"title":{},"body":{"components/PanelComponent.html":{}}}],["lance",{"_index":1303,"title":{},"body":{"index.html":{}}}],["lancer",{"_index":1282,"title":{},"body":{"index.html":{}}}],["lat",{"_index":888,"title":{},"body":{"components/MapComponent.html":{},"classes/Place.html":{},"miscellaneous/variables.html":{}}}],["le",{"_index":566,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["left",{"_index":948,"title":{},"body":{"components/MapComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"components/TspComponent.html":{},"overview.html":{}}}],["les",{"_index":575,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["li",{"_index":338,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["liability",{"_index":1430,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1427,"title":{},"body":{"license.html":{}}}],["license",{"_index":1371,"title":{"license.html":{}},"body":{"license.html":{}}}],["lien",{"_index":1336,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1391,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1418,"title":{},"body":{"license.html":{}}}],["linux",{"_index":1253,"title":{},"body":{"index.html":{}}}],["list",{"_index":339,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["listes",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":324,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"components/MapComponent.html":{}}}],["lng",{"_index":889,"title":{},"body":{"components/MapComponent.html":{}}}],["loadchildren",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["location",{"_index":173,"title":{},"body":{"injectables/DrawerService.html":{}}}],["location(position",{"_index":181,"title":{},"body":{"injectables/DrawerService.html":{}}}],["location.service",{"_index":673,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["location.service.ts",{"_index":1134,"title":{},"body":{"injectables/UserLocationService.html":{},"coverage.html":{}}}],["location.service.ts:12",{"_index":1136,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["location.service.ts:8",{"_index":1135,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["locationpointericons",{"_index":199,"title":{},"body":{"injectables/DrawerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationpointerimage",{"_index":168,"title":{},"body":{"injectables/DrawerService.html":{}}}],["log",{"_index":702,"title":{"classes/Log.html":{}},"body":{"classes/Log.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["log(this.dialog",{"_index":729,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["log.service",{"_index":552,"title":{},"body":{"injectables/HttpService.html":{},"injectables/UserLocationService.html":{}}}],["logservice",{"_index":104,"title":{"injectables/LogService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["lon",{"_index":1119,"title":{},"body":{"classes/Place.html":{},"miscellaneous/variables.html":{}}}],["lors",{"_index":296,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["m2gi",{"_index":763,"title":{},"body":{"components/MainComponent.html":{},"index.html":{},"license.html":{}}}],["main",{"_index":748,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["main.component",{"_index":793,"title":{},"body":{"modules/MainModule.html":{}}}],["main.component.html",{"_index":750,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":749,"title":{},"body":{"components/MainComponent.html":{}}}],["maincomponent",{"_index":53,"title":{"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainmodule",{"_index":786,"title":{"modules/MainModule.html":{}},"body":{"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["maintenant",{"_index":1364,"title":{},"body":{"index.html":{}}}],["map",{"_index":671,"title":{},"body":{"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["map'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["map((cityname",{"_index":437,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["map.component",{"_index":1065,"title":{},"body":{"modules/MapModule.html":{}}}],["map.component.html",{"_index":801,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":800,"title":{},"body":{"components/MapComponent.html":{}}}],["map/map.module",{"_index":794,"title":{},"body":{"modules/MainModule.html":{}}}],["mapcomponent",{"_index":55,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapdata",{"_index":363,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["mapdataonchange",{"_index":805,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataservice",{"_index":364,"title":{"injectables/MapDataService.html":{}},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["mapmodule",{"_index":790,"title":{"modules/MapModule.html":{}},"body":{"modules/MainModule.html":{},"modules/MapModule.html":{},"modules.html":{},"overview.html":{}}}],["mapmouseclickstate",{"_index":806,"title":{},"body":{"components/MapComponent.html":{}}}],["mappa",{"_index":807,"title":{},"body":{"components/MapComponent.html":{},"dependencies.html":{}}}],["mappamundi",{"_index":877,"title":{},"body":{"components/MapComponent.html":{}}}],["mappamundi('mapbox",{"_index":883,"title":{},"body":{"components/MapComponent.html":{}}}],["margin",{"_index":516,"title":{},"body":{"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["mat",{"_index":699,"title":{},"body":{"components/InputComponent.html":{},"components/MainComponent.html":{}}}],["mat_dialog_data",{"_index":331,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["matautocompletemodule",{"_index":472,"title":{},"body":{"modules/GlobalModule.html":{}}}],["matbuttonmodule",{"_index":465,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":712,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["matdialogmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{}}}],["matdialogref",{"_index":323,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["math.floor(window.innerheight",{"_index":900,"title":{},"body":{"components/MapComponent.html":{}}}],["math.pi",{"_index":249,"title":{},"body":{"injectables/DrawerService.html":{}}}],["maticonmodule",{"_index":467,"title":{},"body":{"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{}}}],["matinputmodule",{"_index":469,"title":{},"body":{"modules/GlobalModule.html":{}}}],["mattabsmodule",{"_index":1102,"title":{},"body":{"modules/PanelModule.html":{}}}],["mattoolbarmodule",{"_index":796,"title":{},"body":{"modules/MainModule.html":{}}}],["mattooltipmodule",{"_index":1066,"title":{},"body":{"modules/MapModule.html":{}}}],["max",{"_index":778,"title":{},"body":{"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["media",{"_index":777,"title":{},"body":{"components/MainComponent.html":{},"components/PanelComponent.html":{}}}],["merchantability",{"_index":1420,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1395,"title":{},"body":{"license.html":{}}}],["message",{"_index":332,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["method",{"_index":608,"title":{},"body":{"interfaces/IApiRest.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["mettre",{"_index":1313,"title":{},"body":{"index.html":{}}}],["metz",{"_index":1169,"title":{},"body":{"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metz/cl",{"_index":1244,"title":{},"body":{"index.html":{}}}],["michel",{"_index":1212,"title":{},"body":{"index.html":{}}}],["min",{"_index":1089,"title":{},"body":{"components/PanelComponent.html":{}}}],["miscellaneous",{"_index":1202,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1372,"title":{},"body":{"license.html":{}}}],["mock",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["mockbackendinterceptor",{"_index":282,"title":{"interceptors/MockBackendInterceptor.html":{}},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{}}}],["mockbackendinterceptor(logservice",{"_index":312,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["mockbackendinterceptorfactory",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mockbackendinterceptorfactory(logservice",{"_index":310,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/functions.html":{}}}],["mode",{"_index":1292,"title":{},"body":{"index.html":{}}}],["model/path",{"_index":395,"title":{},"body":{"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"injectables/MapDataService.html":{}}}],["model/place",{"_index":394,"title":{},"body":{"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{}}}],["modify",{"_index":1394,"title":{},"body":{"license.html":{}}}],["module",{"_index":66,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["modules",{"_index":68,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["mousedown",{"_index":862,"title":{},"body":{"components/MapComponent.html":{}}}],["mousemove",{"_index":863,"title":{},"body":{"components/MapComponent.html":{}}}],["mouseup",{"_index":921,"title":{},"body":{"components/MapComponent.html":{}}}],["multi",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"components/InputComponent.html":{}}}],["mundi",{"_index":878,"title":{},"body":{"components/MapComponent.html":{},"dependencies.html":{}}}],["my_location",{"_index":693,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["n'est",{"_index":298,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name.slice(1",{"_index":940,"title":{},"body":{"components/MapComponent.html":{}}}],["navigateur",{"_index":1273,"title":{},"body":{"index.html":{}}}],["navigateur\").aswarn().and.log",{"_index":1148,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["navigator.geolocation",{"_index":1137,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["navigator.geolocation.getcurrentposition(position",{"_index":1138,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["nearestpoint",{"_index":689,"title":{},"body":{"components/InputComponent.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":220,"title":{},"body":{"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["next",{"_index":268,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["next.handle(request",{"_index":308,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["ng",{"_index":1084,"title":{},"body":{"components/PanelComponent.html":{}}}],["ng_value_accessor",{"_index":615,"title":{},"body":{"components/InputComponent.html":{}}}],["ngmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules/PipesModule.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["node",{"_index":1224,"title":{},"body":{"index.html":{}}}],["nommée",{"_index":1362,"title":{},"body":{"index.html":{}}}],["none",{"_index":340,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"components/MapComponent.html":{}}}],["noninfringement",{"_index":1424,"title":{},"body":{"license.html":{}}}],["notalreadychoose",{"_index":399,"title":{},"body":{"classes/FormPanelUtils.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["notice",{"_index":1408,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1019,"title":{},"body":{"injectables/MapDataService.html":{}}}],["notifychange",{"_index":625,"title":{},"body":{"components/InputComponent.html":{}}}],["npm",{"_index":1235,"title":{},"body":{"index.html":{}}}],["null",{"_index":416,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/MapComponent.html":{}}}],["number",{"_index":369,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":589,"title":{},"body":{"injectables/HttpService.html":{}}}],["object",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(this.panelform.controls",{"_index":410,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["object.values(this.panelform.value",{"_index":440,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["objecttoreturn",{"_index":609,"title":{},"body":{"interfaces/IApiRest.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":272,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["obtaining",{"_index":1382,"title":{},"body":{"license.html":{}}}],["of(new",{"_index":288,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["ok",{"_index":335,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["onchange",{"_index":1020,"title":{},"body":{"injectables/MapDataService.html":{}}}],["oncitypushed",{"_index":1021,"title":{},"body":{"injectables/MapDataService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["oninputchange",{"_index":626,"title":{},"body":{"components/InputComponent.html":{}}}],["oninputchange(value",{"_index":652,"title":{},"body":{"components/InputComponent.html":{}}}],["oninputremove",{"_index":635,"title":{},"body":{"components/InputComponent.html":{}}}],["onresize",{"_index":895,"title":{},"body":{"components/MapComponent.html":{}}}],["onsubmit",{"_index":359,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["onsubmit(fn",{"_index":382,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["open",{"_index":1339,"title":{},"body":{"index.html":{}}}],["openpanel",{"_index":755,"title":{},"body":{"components/MainComponent.html":{}}}],["optional",{"_index":156,"title":{},"body":{"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":959,"title":{},"body":{"components/MapComponent.html":{}}}],["otherwise",{"_index":1434,"title":{},"body":{"license.html":{}}}],["oups",{"_index":333,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"license.html":{},"overview.html":{}}}],["outils",{"_index":1332,"title":{},"body":{"index.html":{}}}],["outlet",{"_index":1107,"title":{},"body":{"modules/PanelRoutingModule.html":{}}}],["output",{"_index":669,"title":{},"body":{"components/InputComponent.html":{}}}],["outputs",{"_index":634,"title":{},"body":{"components/InputComponent.html":{}}}],["ouvrir",{"_index":1304,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":1083,"title":{},"body":{"components/PanelComponent.html":{}}}],["overview",{"_index":1443,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.start",{"_index":1046,"title":{},"body":{"injectables/MapDataService.html":{}}}],["package",{"_index":1186,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":1370,"title":{},"body":{"index.html":{}}}],["padding",{"_index":337,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["page",{"_index":1272,"title":{},"body":{"index.html":{}}}],["panel",{"_index":768,"title":{},"body":{"components/MainComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{}}}],["panel'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["panel.component",{"_index":1099,"title":{},"body":{"modules/PanelModule.html":{}}}],["panel.component.html",{"_index":1073,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel.component.scss",{"_index":1072,"title":{},"body":{"components/PanelComponent.html":{}}}],["panel/panel.module",{"_index":795,"title":{},"body":{"modules/MainModule.html":{}}}],["panelcomponent",{"_index":57,"title":{"components/PanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panelform",{"_index":350,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["panelmodule",{"_index":791,"title":{"modules/PanelModule.html":{}},"body":{"modules/MainModule.html":{},"modules/PanelModule.html":{},"modules.html":{},"overview.html":{}}}],["panelroutingmodule",{"_index":1097,"title":{"modules/PanelRoutingModule.html":{}},"body":{"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["par",{"_index":1248,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":155,"title":{},"body":{"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":555,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["params.append('id",{"_index":591,"title":{},"body":{"injectables/HttpService.html":{}}}],["paris",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":1422,"title":{},"body":{"license.html":{}}}],["pas",{"_index":299,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{}}}],["passer",{"_index":1279,"title":{},"body":{"index.html":{}}}],["patch",{"_index":611,"title":{},"body":{"interfaces/IApiRest.html":{}}}],["path",{"_index":117,"title":{"classes/Path.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"modules/MainModule.html":{},"injectables/MapDataService.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path(start",{"_index":184,"title":{},"body":{"injectables/DrawerService.html":{}}}],["path.end.id",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.end.lat",{"_index":984,"title":{},"body":{"components/MapComponent.html":{}}}],["path.start.id",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.start.lat",{"_index":981,"title":{},"body":{"components/MapComponent.html":{}}}],["path1",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["path2",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["path3",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["path4",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["path5",{"_index":1176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["path6",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PanelRoutingModule.html":{}}}],["paths",{"_index":1015,"title":{},"body":{"injectables/MapDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paths.find(path",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths.length",{"_index":1042,"title":{},"body":{"injectables/MapDataService.html":{}}}],["paths[0].end",{"_index":1044,"title":{},"body":{"injectables/MapDataService.html":{}}}],["paths[0].start.id",{"_index":1047,"title":{},"body":{"injectables/MapDataService.html":{}}}],["paths[paths.length",{"_index":1048,"title":{},"body":{"injectables/MapDataService.html":{}}}],["pathsbuild",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathsid.end",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathsid.start",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permettre",{"_index":1366,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1376,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1402,"title":{},"body":{"license.html":{}}}],["person",{"_index":1381,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1403,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":146,"title":{"pipes/CapitalizePipe.html":{}},"body":{"pipes/CapitalizePipe.html":{},"injectables/HttpService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":148,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["pipesmodule",{"_index":474,"title":{"modules/PipesModule.html":{}},"body":{"modules/GlobalModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":157,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["pk.eyj1ijoizgfuawvscgf5zxqilcjhijoiy2pvem1legf0mm1hotn3cghmbhm0b3p2ayj9.s0gdr8eabqi56thonkv1sg",{"_index":881,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["place",{"_index":366,"title":{"classes/Place.html":{}},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["place(null",{"_index":927,"title":{},"body":{"components/MapComponent.html":{}}}],["place(undefined",{"_index":902,"title":{},"body":{"components/MapComponent.html":{},"injectables/UserLocationService.html":{}}}],["place[0",{"_index":452,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["placeholder",{"_index":632,"title":{},"body":{"components/InputComponent.html":{}}}],["plus",{"_index":568,"title":{},"body":{"injectables/HttpService.html":{}}}],["point",{"_index":567,"title":{},"body":{"injectables/HttpService.html":{}}}],["pointer",{"_index":174,"title":{},"body":{"injectables/DrawerService.html":{}}}],["pointer(position",{"_index":188,"title":{},"body":{"injectables/DrawerService.html":{}}}],["pointerslocation",{"_index":1016,"title":{},"body":{"injectables/MapDataService.html":{}}}],["pointeruser",{"_index":175,"title":{},"body":{"injectables/DrawerService.html":{}}}],["pointeruser(position",{"_index":190,"title":{},"body":{"injectables/DrawerService.html":{}}}],["pop",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["popup",{"_index":808,"title":{},"body":{"components/MapComponent.html":{}}}],["popupcity",{"_index":809,"title":{},"body":{"components/MapComponent.html":{}}}],["popupposition",{"_index":810,"title":{},"body":{"components/MapComponent.html":{}}}],["popupvalue",{"_index":811,"title":{},"body":{"components/MapComponent.html":{}}}],["portions",{"_index":1412,"title":{},"body":{"license.html":{}}}],["position",{"_index":183,"title":{},"body":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["position.coords.latitude",{"_index":1140,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["position.coords.longitude",{"_index":1141,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["position.id.tostring",{"_index":592,"title":{},"body":{"injectables/HttpService.html":{}}}],["position.lat",{"_index":904,"title":{},"body":{"components/MapComponent.html":{}}}],["position.lng",{"_index":905,"title":{},"body":{"components/MapComponent.html":{}}}],["position.x",{"_index":239,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{}}}],["position.y",{"_index":240,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{}}}],["positionmapstate",{"_index":812,"title":{},"body":{"components/MapComponent.html":{}}}],["positionpixels",{"_index":987,"title":{},"body":{"components/MapComponent.html":{}}}],["positions",{"_index":383,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/TspComponent.html":{},"miscellaneous/variables.html":{}}}],["positions.map((_",{"_index":587,"title":{},"body":{"injectables/HttpService.html":{}}}],["positions.map(position",{"_index":590,"title":{},"body":{"injectables/HttpService.html":{}}}],["positionuser",{"_index":539,"title":{},"body":{"injectables/HttpService.html":{}}}],["positionuser.lat.tostring()).set('lon",{"_index":557,"title":{},"body":{"injectables/HttpService.html":{}}}],["positionuser.lon.tostring",{"_index":558,"title":{},"body":{"injectables/HttpService.html":{}}}],["post",{"_index":610,"title":{},"body":{"interfaces/IApiRest.html":{}}}],["pour",{"_index":1281,"title":{},"body":{"index.html":{}}}],["prendre",{"_index":1225,"title":{},"body":{"index.html":{}}}],["prepare",{"_index":1298,"title":{},"body":{"index.html":{}}}],["primary",{"_index":136,"title":{},"body":{"components/ButtonComponent.html":{}}}],["private",{"_index":166,"title":{},"body":{"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/TspComponent.html":{}}}],["proche",{"_index":569,"title":{},"body":{"injectables/HttpService.html":{}}}],["production",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["produite",{"_index":295,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["project",{"_index":1211,"title":{},"body":{"index.html":{}}}],["projet",{"_index":1217,"title":{},"body":{"index.html":{}}}],["projets",{"_index":1315,"title":{},"body":{"index.html":{}}}],["promise",{"_index":380,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["promise((res",{"_index":553,"title":{},"body":{"injectables/HttpService.html":{},"injectables/UserLocationService.html":{}}}],["promise(async",{"_index":951,"title":{},"body":{"components/MapComponent.html":{}}}],["promise(res",{"_index":594,"title":{},"body":{"injectables/HttpService.html":{}}}],["promise.all",{"_index":435,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["promise.resolve",{"_index":687,"title":{},"body":{"components/InputComponent.html":{}}}],["propagatechange",{"_index":621,"title":{},"body":{"components/InputComponent.html":{}}}],["properties",{"_index":165,"title":{},"body":{"injectables/DrawerService.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{}}}],["protected",{"_index":357,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["provide",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"components/InputComponent.html":{}}}],["provided",{"_index":1413,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":215,"title":{},"body":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["présent",{"_index":1365,"title":{},"body":{"index.html":{}}}],["public",{"_index":319,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["publish",{"_index":1396,"title":{},"body":{"license.html":{}}}],["puis",{"_index":1359,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1423,"title":{},"body":{"license.html":{}}}],["pushcity",{"_index":1022,"title":{},"body":{"injectables/MapDataService.html":{}}}],["pushcity(city",{"_index":1032,"title":{},"body":{"injectables/MapDataService.html":{}}}],["que",{"_index":1350,"title":{},"body":{"index.html":{}}}],["qui",{"_index":1333,"title":{},"body":{"index.html":{}}}],["radius",{"_index":1001,"title":{},"body":{"components/MapComponent.html":{}}}],["rapport",{"_index":1249,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":1105,"title":{},"body":{"modules/PanelModule.html":{}}}],["realposition",{"_index":957,"title":{},"body":{"components/MapComponent.html":{}}}],["realposition.lat",{"_index":960,"title":{},"body":{"components/MapComponent.html":{}}}],["realposition.lon",{"_index":962,"title":{},"body":{"components/MapComponent.html":{}}}],["recharger",{"_index":1357,"title":{},"body":{"index.html":{}}}],["recherche",{"_index":600,"title":{},"body":{"injectables/HttpService.html":{}}}],["rechercher",{"_index":508,"title":{},"body":{"components/GpsComponent.html":{}}}],["recommandés",{"_index":1343,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PanelRoutingModule.html":{}}}],["registeronchange",{"_index":627,"title":{},"body":{"components/InputComponent.html":{}}}],["registeronchange(fn",{"_index":654,"title":{},"body":{"components/InputComponent.html":{}}}],["registerontouched",{"_index":628,"title":{},"body":{"components/InputComponent.html":{}}}],["rej",{"_index":554,"title":{},"body":{"injectables/HttpService.html":{}}}],["rej(undefined",{"_index":579,"title":{},"body":{"injectables/HttpService.html":{}}}],["relative",{"_index":766,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["release",{"_index":1309,"title":{},"body":{"index.html":{}}}],["remove_circle_outline",{"_index":695,"title":{},"body":{"components/InputComponent.html":{}}}],["removebutton",{"_index":633,"title":{},"body":{"components/InputComponent.html":{}}}],["removecitysupp",{"_index":360,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["removecitysupp(citytoremove",{"_index":386,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["removeinput",{"_index":629,"title":{},"body":{"components/InputComponent.html":{}}}],["renderer",{"_index":832,"title":{},"body":{"components/MapComponent.html":{}}}],["renderer2",{"_index":833,"title":{},"body":{"components/MapComponent.html":{}}}],["repo",{"_index":1240,"title":{},"body":{"index.html":{}}}],["req",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params.get('idend",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params.get('idstart",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params.getall('id",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":271,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.clone",{"_index":303,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.method",{"_index":286,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.url",{"_index":307,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.url).aserror().and.showpopup().and.log",{"_index":301,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.url.endswith(apirest.url",{"_index":285,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["res",{"_index":952,"title":{},"body":{"components/MapComponent.html":{}}}],["res(new",{"_index":1139,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["res(paths",{"_index":586,"title":{},"body":{"injectables/HttpService.html":{}}}],["res(paths.reduce((accu",{"_index":582,"title":{},"body":{"injectables/HttpService.html":{}}}],["res(position",{"_index":561,"title":{},"body":{"injectables/HttpService.html":{}}}],["res(positions",{"_index":574,"title":{},"body":{"injectables/HttpService.html":{}}}],["res(undefined",{"_index":572,"title":{},"body":{"injectables/HttpService.html":{},"injectables/UserLocationService.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["resetpaths",{"_index":1023,"title":{},"body":{"injectables/MapDataService.html":{}}}],["resetpointerslocations",{"_index":1024,"title":{},"body":{"injectables/MapDataService.html":{}}}],["ressources",{"_index":1323,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1389,"title":{},"body":{"license.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":158,"title":{},"body":{"pipes/CapitalizePipe.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/UserLocationService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"miscellaneous/functions.html":{}}}],["rgba(255",{"_index":212,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["rgba(63",{"_index":203,"title":{},"body":{"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":771,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["rights",{"_index":1392,"title":{},"body":{"license.html":{}}}],["root",{"_index":216,"title":{},"body":{"injectables/DrawerService.html":{},"injectables/HttpService.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"injectables/MapDataService.html":{},"injectables/UserLocationService.html":{}}}],["routermodule",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{},"modules/PanelRoutingModule.html":{}}}],["routermodule.forchild",{"_index":798,"title":{},"body":{"modules/MainModule.html":{}}}],["routermodule.forchild(routes",{"_index":1108,"title":{},"body":{"modules/PanelRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":113,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/PanelRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/PanelModule.html":{}}}],["routing.module.ts",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PanelRoutingModule.html":{}}}],["row",{"_index":519,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["run",{"_index":1264,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":276,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"injectables/HttpService.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":551,"title":{},"body":{"injectables/HttpService.html":{},"components/InputComponent.html":{}}}],["récuperer",{"_index":565,"title":{},"body":{"injectables/HttpService.html":{}}}],["s'ouvrir",{"_index":1346,"title":{},"body":{"index.html":{}}}],["s'ouvrira",{"_index":1274,"title":{},"body":{"index.html":{}}}],["sans",{"_index":1310,"title":{},"body":{"index.html":{}}}],["schemas",{"_index":458,"title":{},"body":{"modules/GlobalModule.html":{},"modules/PanelModule.html":{}}}],["scripts",{"_index":1363,"title":{},"body":{"index.html":{}}}],["se",{"_index":1325,"title":{},"body":{"index.html":{}}}],["search",{"_index":529,"title":{},"body":{"injectables/HttpService.html":{}}}],["search(name",{"_index":544,"title":{},"body":{"injectables/HttpService.html":{}}}],["searchbyname",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["sell",{"_index":1400,"title":{},"body":{"license.html":{}}}],["serveur",{"_index":1261,"title":{},"body":{"index.html":{}}}],["service.service",{"_index":397,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["service.service.ts",{"_index":522,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["service.service.ts:12",{"_index":531,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:16",{"_index":538,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:28",{"_index":536,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:39",{"_index":541,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:56",{"_index":543,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:73",{"_index":533,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:84",{"_index":535,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.service.ts:90",{"_index":545,"title":{},"body":{"injectables/HttpService.html":{}}}],["services/drawer.service",{"_index":879,"title":{},"body":{"components/MapComponent.html":{}}}],["services/http",{"_index":396,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["services/log.service",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["services/map",{"_index":392,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{}}}],["services/user",{"_index":672,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["set",{"_index":676,"title":{},"body":{"components/InputComponent.html":{},"injectables/LogService.html":{}}}],["set(message",{"_index":728,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["setcontext",{"_index":176,"title":{},"body":{"injectables/DrawerService.html":{}}}],["setcontext(context",{"_index":192,"title":{},"body":{"injectables/DrawerService.html":{}}}],["setcurrenttab",{"_index":1074,"title":{},"body":{"components/PanelComponent.html":{}}}],["setcurrenttab(index",{"_index":1075,"title":{},"body":{"components/PanelComponent.html":{}}}],["setflags",{"_index":709,"title":{},"body":{"classes/Log.html":{}}}],["setflags(flags",{"_index":724,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["setlocalisation",{"_index":827,"title":{},"body":{"components/MapComponent.html":{}}}],["setvalue(val",{"_index":667,"title":{},"body":{"components/InputComponent.html":{}}}],["shadow",{"_index":1079,"title":{},"body":{"components/PanelComponent.html":{}}}],["shall",{"_index":1409,"title":{},"body":{"license.html":{}}}],["showpopup",{"_index":710,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["si",{"_index":1218,"title":{},"body":{"index.html":{}}}],["sinon",{"_index":1290,"title":{},"body":{"index.html":{}}}],["sizex",{"_index":943,"title":{},"body":{"components/MapComponent.html":{}}}],["sizex}px",{"_index":949,"title":{},"body":{"components/MapComponent.html":{}}}],["sizey",{"_index":945,"title":{},"body":{"components/MapComponent.html":{}}}],["sizey}px",{"_index":947,"title":{},"body":{"components/MapComponent.html":{}}}],["software",{"_index":1384,"title":{},"body":{"license.html":{}}}],["soit",{"_index":1351,"title":{},"body":{"index.html":{}}}],["solid",{"_index":1007,"title":{},"body":{"components/MapComponent.html":{}}}],["sont",{"_index":1368,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"modules/GlobalModule.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"modules/MapModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"classes/Path.html":{},"modules/PipesModule.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["sous",{"_index":1361,"title":{},"body":{"index.html":{}}}],["src/.../api.ts",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../drawer.service.ts",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.mock.ts",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forms.validators.ts",{"_index":1204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../icones.ts",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.component.ts",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock",{"_index":1205,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:8",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/composant/global/button/button.component.ts",{"_index":124,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/app/composant/global/button/button.component.ts:10",{"_index":143,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/composant/global/button/button.component.ts:11",{"_index":137,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/composant/global/button/button.component.ts:12",{"_index":133,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/composant/global/button/button.component.ts:16",{"_index":144,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/composant/global/button/button.component.ts:9",{"_index":139,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/composant/global/erreur",{"_index":313,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"coverage.html":{}}}],["src/app/composant/global/global.module.ts",{"_index":456,"title":{},"body":{"modules/GlobalModule.html":{}}}],["src/app/composant/global/input/input.component.ts",{"_index":613,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/app/composant/global/input/input.component.ts:23",{"_index":644,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:24",{"_index":642,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:25",{"_index":645,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:26",{"_index":639,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:27",{"_index":643,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:28",{"_index":640,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:29",{"_index":647,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:30",{"_index":661,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:31",{"_index":664,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:32",{"_index":662,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:34",{"_index":666,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:38",{"_index":668,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:42",{"_index":638,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:46",{"_index":660,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:50",{"_index":656,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:54",{"_index":657,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:56",{"_index":658,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:60",{"_index":651,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:65",{"_index":653,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:73",{"_index":649,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/global/input/input.component.ts:77",{"_index":650,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/composant/main/main.component.ts",{"_index":747,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/composant/main/main.component.ts:11",{"_index":758,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/composant/main/main.component.ts:15",{"_index":759,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/composant/main/main.component.ts:19",{"_index":756,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/composant/main/main.component.ts:23",{"_index":757,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/composant/main/main.component.ts:9",{"_index":760,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/composant/main/main.module.ts",{"_index":792,"title":{},"body":{"modules/MainModule.html":{}}}],["src/app/composant/main/map/icones/icones.ts",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/composant/main/map/map.component.ts",{"_index":799,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/composant/main/map/map.component.ts:105",{"_index":844,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:113",{"_index":853,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:123",{"_index":852,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:127",{"_index":849,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:145",{"_index":846,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:149",{"_index":848,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:153",{"_index":840,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:169",{"_index":841,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:17",{"_index":834,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:179",{"_index":836,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:183",{"_index":843,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:190",{"_index":839,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:199",{"_index":842,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:28",{"_index":855,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:29",{"_index":858,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:30",{"_index":867,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:31",{"_index":871,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:33",{"_index":859,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:34",{"_index":873,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:35",{"_index":874,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:36",{"_index":856,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:37",{"_index":861,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:38",{"_index":875,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:39",{"_index":872,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:40",{"_index":865,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:42",{"_index":864,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:44",{"_index":869,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:45",{"_index":868,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:47",{"_index":851,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:54",{"_index":835,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:73",{"_index":850,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.component.ts:97",{"_index":838,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/composant/main/map/map.module.ts",{"_index":1064,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/composant/main/panel/form",{"_index":343,"title":{},"body":{"classes/FormPanelUtils.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/composant/main/panel/gps/gps.component.ts",{"_index":476,"title":{},"body":{"components/GpsComponent.html":{},"coverage.html":{}}}],["src/app/composant/main/panel/gps/gps.component.ts:13",{"_index":482,"title":{},"body":{"components/GpsComponent.html":{}}}],["src/app/composant/main/panel/gps/gps.component.ts:14",{"_index":481,"title":{},"body":{"components/GpsComponent.html":{}}}],["src/app/composant/main/panel/gps/gps.component.ts:20",{"_index":483,"title":{},"body":{"components/GpsComponent.html":{}}}],["src/app/composant/main/panel/gps/gps.component.ts:28",{"_index":484,"title":{},"body":{"components/GpsComponent.html":{}}}],["src/app/composant/main/panel/panel",{"_index":1106,"title":{},"body":{"modules/PanelRoutingModule.html":{}}}],["src/app/composant/main/panel/panel.component.ts",{"_index":1071,"title":{},"body":{"components/PanelComponent.html":{},"coverage.html":{}}}],["src/app/composant/main/panel/panel.component.ts:11",{"_index":1076,"title":{},"body":{"components/PanelComponent.html":{}}}],["src/app/composant/main/panel/panel.component.ts:9",{"_index":1077,"title":{},"body":{"components/PanelComponent.html":{}}}],["src/app/composant/main/panel/panel.module.ts",{"_index":1098,"title":{},"body":{"modules/PanelModule.html":{}}}],["src/app/composant/main/panel/tsp/tsp.component.ts",{"_index":1123,"title":{},"body":{"components/TspComponent.html":{},"coverage.html":{}}}],["src/app/composant/main/panel/tsp/tsp.component.ts:13",{"_index":1127,"title":{},"body":{"components/TspComponent.html":{}}}],["src/app/composant/main/panel/tsp/tsp.component.ts:14",{"_index":1126,"title":{},"body":{"components/TspComponent.html":{}}}],["src/app/composant/main/panel/tsp/tsp.component.ts:20",{"_index":1128,"title":{},"body":{"components/TspComponent.html":{}}}],["src/app/composant/main/panel/tsp/tsp.component.ts:28",{"_index":1129,"title":{},"body":{"components/TspComponent.html":{}}}],["src/app/mock",{"_index":263,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interfaces/IApiRest.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/path.ts",{"_index":1109,"title":{},"body":{"classes/Path.html":{},"coverage.html":{}}}],["src/app/model/path.ts:4",{"_index":1111,"title":{},"body":{"classes/Path.html":{}}}],["src/app/model/path.ts:5",{"_index":1110,"title":{},"body":{"classes/Path.html":{}}}],["src/app/model/place.ts",{"_index":1117,"title":{},"body":{"classes/Place.html":{},"coverage.html":{}}}],["src/app/model/place.ts:1",{"_index":1121,"title":{},"body":{"classes/Place.html":{}}}],["src/app/model/place.ts:2",{"_index":1122,"title":{},"body":{"classes/Place.html":{}}}],["src/app/pipes/capitalize.pipe.ts",{"_index":149,"title":{},"body":{"pipes/CapitalizePipe.html":{},"coverage.html":{}}}],["src/app/pipes/capitalize.pipe.ts:8",{"_index":154,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["src/app/pipes/pipes.module",{"_index":475,"title":{},"body":{"modules/GlobalModule.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1115,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/services/drawer.service.ts",{"_index":164,"title":{},"body":{"injectables/DrawerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/drawer.service.ts:14",{"_index":197,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer.service.ts:15",{"_index":196,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer.service.ts:16",{"_index":177,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer.service.ts:23",{"_index":180,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer.service.ts:29",{"_index":179,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer.service.ts:35",{"_index":193,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer.service.ts:39",{"_index":178,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer.service.ts:43",{"_index":191,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer.service.ts:49",{"_index":189,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer.service.ts:55",{"_index":182,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/drawer.service.ts:78",{"_index":186,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/services/http",{"_index":521,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/services/log.service.ts",{"_index":703,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["src/app/services/log.service.ts:12",{"_index":746,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log.service.ts:18",{"_index":719,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:19",{"_index":718,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:20",{"_index":714,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:21",{"_index":713,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:23",{"_index":715,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:29",{"_index":720,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:34",{"_index":722,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:39",{"_index":721,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:44",{"_index":725,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:48",{"_index":726,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:55",{"_index":723,"title":{},"body":{"classes/Log.html":{}}}],["src/app/services/log.service.ts:8",{"_index":745,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/map",{"_index":1011,"title":{},"body":{"injectables/MapDataService.html":{},"coverage.html":{}}}],["src/app/services/user",{"_index":1133,"title":{},"body":{"injectables/UserLocationService.html":{},"coverage.html":{}}}],["src/environment.ts",{"_index":1289,"title":{},"body":{"index.html":{}}}],["src/environments/environment.mock.ts",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":187,"title":{},"body":{"injectables/DrawerService.html":{},"classes/Path.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start.y",{"_index":258,"title":{},"body":{"injectables/DrawerService.html":{}}}],["start:android",{"_index":1299,"title":{},"body":{"index.html":{}}}],["start:electron",{"_index":1301,"title":{},"body":{"index.html":{}}}],["start:mock",{"_index":1293,"title":{},"body":{"index.html":{}}}],["started",{"_index":1209,"title":{"index.html":{},"license.html":{}},"body":{}}],["startpixels",{"_index":979,"title":{},"body":{"components/MapComponent.html":{}}}],["startwith",{"_index":670,"title":{},"body":{"components/InputComponent.html":{}}}],["statements",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":289,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["string",{"_index":153,"title":{},"body":{"pipes/CapitalizePipe.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":131,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["subject",{"_index":663,"title":{},"body":{"components/InputComponent.html":{},"injectables/MapDataService.html":{},"license.html":{}}}],["sublicense",{"_index":1398,"title":{},"body":{"license.html":{}}}],["subscribe((paths",{"_index":581,"title":{},"body":{"injectables/HttpService.html":{}}}],["subscribe((position",{"_index":560,"title":{},"body":{"injectables/HttpService.html":{}}}],["subscribe((positions",{"_index":597,"title":{},"body":{"injectables/HttpService.html":{}}}],["subscription",{"_index":860,"title":{},"body":{"components/MapComponent.html":{}}}],["substantial",{"_index":1411,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":1271,"title":{},"body":{"index.html":{}}}],["sudo",{"_index":1254,"title":{},"body":{"index.html":{}}}],["suite",{"_index":1284,"title":{},"body":{"index.html":{}}}],["super(http",{"_index":501,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["super.ngoninit",{"_index":502,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["super.onsubmit(this.http.getpath",{"_index":506,"title":{},"body":{"components/GpsComponent.html":{}}}],["super.onsubmit(this.http.gettsp",{"_index":1131,"title":{},"body":{"components/TspComponent.html":{}}}],["support",{"_index":1438,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":1146,"title":{},"body":{"injectables/UserLocationService.html":{},"index.html":{}}}],["svg",{"_index":1439,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":739,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["tab",{"_index":1086,"title":{},"body":{"components/PanelComponent.html":{}}}],["table",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["tabnumber",{"_index":351,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["take",{"_index":550,"title":{},"body":{"injectables/HttpService.html":{}}}],["take(1",{"_index":580,"title":{},"body":{"injectables/HttpService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["terminal",{"_index":1233,"title":{},"body":{"index.html":{}}}],["terminale",{"_index":1277,"title":{},"body":{"index.html":{}}}],["tes",{"_index":1220,"title":{},"body":{"index.html":{}}}],["tester",{"_index":1257,"title":{},"body":{"index.html":{}}}],["text",{"_index":701,"title":{},"body":{"components/InputComponent.html":{}}}],["this._value",{"_index":675,"title":{},"body":{"components/InputComponent.html":{}}}],["this.addcity",{"_index":1130,"title":{},"body":{"components/TspComponent.html":{}}}],["this.addpointerslocations(...paths.map(p",{"_index":1045,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.addpointerslocations(paths[0].start",{"_index":1043,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.addpointerslocations(paths[paths.length",{"_index":1050,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.and",{"_index":733,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.canvas",{"_index":891,"title":{},"body":{"components/MapComponent.html":{}}}],["this.canvas.nativeelement",{"_index":917,"title":{},"body":{"components/MapComponent.html":{}}}],["this.canvas.nativeelement.height",{"_index":955,"title":{},"body":{"components/MapComponent.html":{}}}],["this.canvas.nativeelement.width",{"_index":954,"title":{},"body":{"components/MapComponent.html":{}}}],["this.canvastmp",{"_index":890,"title":{},"body":{"components/MapComponent.html":{}}}],["this.change.asobservable",{"_index":1057,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.change.next",{"_index":1058,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.citypushed.asobservable",{"_index":1059,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.citypushed.next(city",{"_index":1060,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.clearmap",{"_index":968,"title":{},"body":{"components/MapComponent.html":{}}}],["this.container.nativeelement.children",{"_index":909,"title":{},"body":{"components/MapComponent.html":{}}}],["this.createpopup(city.name",{"_index":931,"title":{},"body":{"components/MapComponent.html":{}}}],["this.createrequesttsp(positions",{"_index":585,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.ctx",{"_index":227,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.arc(position.x",{"_index":247,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.beginpath",{"_index":242,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.clearrect(0",{"_index":228,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.drawimage(this.locationpointerimage",{"_index":241,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.drawimage(this.userpointerimage",{"_index":238,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.lineto(end.x",{"_index":259,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.linewidth",{"_index":243,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.moveto(start.x",{"_index":257,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.stroke",{"_index":250,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.ctx.strokestyle",{"_index":245,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.current",{"_index":407,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/PanelComponent.html":{}}}],["this.dialog.open(erreurpopupcomponent",{"_index":738,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.drawerservice.clear",{"_index":986,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawerservice.location(positionpixels",{"_index":996,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawerservice.path(startpixels",{"_index":985,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawerservice.pointer(positionpixels",{"_index":994,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawerservice.pointeruser(positionpixels",{"_index":990,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawerservice.setcontext(this.canvas.nativeelement.getcontext(\"2d",{"_index":953,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawlocation",{"_index":970,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawmap",{"_index":893,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawpaths",{"_index":972,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawpositions",{"_index":971,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawuserlocation",{"_index":969,"title":{},"body":{"components/MapComponent.html":{}}}],["this.filtercities(value.tolowercase",{"_index":686,"title":{},"body":{"components/InputComponent.html":{}}}],["this.filtered_cities",{"_index":685,"title":{},"body":{"components/InputComponent.html":{}}}],["this.flags",{"_index":737,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.getcitiesnamefromform",{"_index":436,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.getidfornewcity",{"_index":420,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.getposition(this.userposition",{"_index":958,"title":{},"body":{"components/MapComponent.html":{}}}],["this.getpositionfromforms()).map(place",{"_index":451,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.getzoomstate(this.userposition",{"_index":964,"title":{},"body":{"components/MapComponent.html":{}}}],["this.http.get('/nearestpoint",{"_index":559,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get('/positions').subscribe((positions",{"_index":573,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get('/searchbyname",{"_index":596,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get('/tsp",{"_index":593,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.getnearestposition(await",{"_index":690,"title":{},"body":{"components/InputComponent.html":{}}}],["this.http.getnearestposition(new",{"_index":926,"title":{},"body":{"components/MapComponent.html":{}}}],["this.http.search(cityname",{"_index":438,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.http.search(nearestpoint.name))[0].name",{"_index":692,"title":{},"body":{"components/InputComponent.html":{}}}],["this.http.search(value",{"_index":688,"title":{},"body":{"components/InputComponent.html":{}}}],["this.info",{"_index":732,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.initlocationpointer",{"_index":218,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.initmap",{"_index":892,"title":{},"body":{"components/MapComponent.html":{}}}],["this.initmouseevent",{"_index":973,"title":{},"body":{"components/MapComponent.html":{}}}],["this.inituserpointer",{"_index":217,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.inputvalidators",{"_index":402,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["this.locationpointerimage",{"_index":224,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.locationpointerimage.onload",{"_index":226,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.locationpointerimage.src",{"_index":225,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.logservice.set(\"impossible",{"_index":563,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.logservice.set(\"la",{"_index":1142,"title":{},"body":{"injectables/UserLocationService.html":{}}}],["this.logservice.set(\"une",{"_index":293,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["this.map",{"_index":896,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.frompointtolatlng(event.clientx",{"_index":924,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.frompointtolatlng(math.floor(window.innerwidth",{"_index":899,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.latlngtopixel(path.end.lon",{"_index":983,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.latlngtopixel(path.start.lon",{"_index":980,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.latlngtopixel(position.lon",{"_index":993,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.latlngtopixel(this.popupposition.lat",{"_index":941,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.latlngtopixel(this.userposition.lat",{"_index":988,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.onchange",{"_index":907,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.onchange(updatedraw",{"_index":974,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.overlay(this.canvas.nativeelement",{"_index":966,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.zoom",{"_index":898,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.addpath(...await",{"_index":448,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.mapdata.onchange().subscribe(updatedraw",{"_index":976,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.oncitypushed().subscribe((city",{"_index":406,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.mapdata.paths",{"_index":977,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.paths.foreach(path",{"_index":978,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.pointerslocation",{"_index":991,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.pointerslocation.foreach(position",{"_index":992,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.pushcity(this.popupcity",{"_index":950,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdata.resetpaths",{"_index":446,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.mapdata.resetpointerslocations",{"_index":447,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.mapdataonchange",{"_index":975,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapdataonchange.unsubscribe",{"_index":906,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapmouseclickstate",{"_index":920,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mappa",{"_index":882,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mappa.tilemap(options",{"_index":965,"title":{},"body":{"components/MapComponent.html":{}}}],["this.message",{"_index":731,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.ngoninit",{"_index":918,"title":{},"body":{"components/MapComponent.html":{}}}],["this.notify",{"_index":1052,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.notifychange",{"_index":679,"title":{},"body":{"components/InputComponent.html":{}}}],["this.oninputchange(val",{"_index":678,"title":{},"body":{"components/InputComponent.html":{}}}],["this.oninputremove.emit(this.formcontrolname",{"_index":682,"title":{},"body":{"components/InputComponent.html":{}}}],["this.panelform",{"_index":503,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["this.panelform.addcontrol(formcontrolname",{"_index":422,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.panelform.removecontrol(citycontrolname",{"_index":434,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.paths",{"_index":1053,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.paths.push(...paths",{"_index":1041,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.pointerslocation",{"_index":1056,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.pointerslocation.push(...positions",{"_index":1055,"title":{},"body":{"injectables/MapDataService.html":{}}}],["this.popup.nativeelement.offsetheight",{"_index":946,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popup.nativeelement.offsetwidth",{"_index":944,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupcity",{"_index":930,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupposition",{"_index":923,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupposition.lat",{"_index":928,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupposition.lng",{"_index":942,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupposition.lng)).then",{"_index":929,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupvalue.nativeelement.childnodes.length",{"_index":935,"title":{},"body":{"components/MapComponent.html":{}}}],["this.popupvalue.nativeelement.childnodes[0",{"_index":937,"title":{},"body":{"components/MapComponent.html":{}}}],["this.positionmapstate",{"_index":901,"title":{},"body":{"components/MapComponent.html":{}}}],["this.positions.foreach(position",{"_index":995,"title":{},"body":{"components/MapComponent.html":{}}}],["this.propagatechange",{"_index":681,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this._value",{"_index":684,"title":{},"body":{"components/InputComponent.html":{}}}],["this.renderer.appendchild(this.container.nativeelement",{"_index":916,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.appendchild(this.popupvalue.nativeelement",{"_index":938,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.createtext(name.charat(0).touppercase",{"_index":939,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.listen(this.container.nativeelement",{"_index":919,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.removechild(document.getelementsbytagname(\"body\").item(0",{"_index":912,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.removechild(this.container.nativeelement",{"_index":910,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.removechild(this.popupvalue.nativeelement",{"_index":936,"title":{},"body":{"components/MapComponent.html":{}}}],["this.renderer.setstyle(this.popup.nativeelement",{"_index":933,"title":{},"body":{"components/MapComponent.html":{}}}],["this.setflags('error",{"_index":734,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.setflags('info",{"_index":736,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.setflags('warn",{"_index":735,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["this.tabnumber",{"_index":408,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.updatepopupposition",{"_index":932,"title":{},"body":{"components/MapComponent.html":{}}}],["this.userlocationservice.getuserlocation",{"_index":691,"title":{},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{}}}],["this.userpointerimage",{"_index":219,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.userpointerimage.height",{"_index":237,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.userpointerimage.onload",{"_index":223,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.userpointerimage.src",{"_index":222,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.userpointerimage.width",{"_index":233,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.userposition",{"_index":956,"title":{},"body":{"components/MapComponent.html":{}}}],["this.userposition.lon",{"_index":989,"title":{},"body":{"components/MapComponent.html":{}}}],["this.value",{"_index":680,"title":{},"body":{"components/InputComponent.html":{}}}],["this.valuechanges.next(this._value",{"_index":683,"title":{},"body":{"components/InputComponent.html":{}}}],["this.villessupp",{"_index":431,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.villessupp.filter(v",{"_index":432,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.villessupp.find((ville",{"_index":429,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.villessupp.length",{"_index":424,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.villessupp.push(formcontrolname",{"_index":421,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.villessupp[this.villessupp.length",{"_index":425,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["this.zoomstate",{"_index":897,"title":{},"body":{"components/MapComponent.html":{}}}],["throwerror",{"_index":547,"title":{},"body":{"injectables/HttpService.html":{}}}],["tonight",{"_index":1214,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":782,"title":{},"body":{"components/MainComponent.html":{}}}],["tools",{"_index":1252,"title":{},"body":{"index.html":{}}}],["top",{"_index":772,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["tort",{"_index":1433,"title":{},"body":{"license.html":{}}}],["tous",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tout",{"_index":1265,"title":{},"body":{"index.html":{}}}],["toutes",{"_index":1352,"title":{},"body":{"index.html":{}}}],["transform",{"_index":151,"title":{},"body":{"pipes/CapitalizePipe.html":{},"components/InputComponent.html":{}}}],["transform(value",{"_index":152,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["transition",{"_index":775,"title":{},"body":{"components/MainComponent.html":{}}}],["transparent",{"_index":1008,"title":{},"body":{"components/MapComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["trouvent",{"_index":1326,"title":{},"body":{"index.html":{}}}],["true",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/InputComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":911,"title":{},"body":{"components/MapComponent.html":{}}}],["tsp",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"modules/PanelRoutingModule.html":{},"components/TspComponent.html":{},"miscellaneous/variables.html":{}}}],["tsp.component.html",{"_index":1125,"title":{},"body":{"components/TspComponent.html":{}}}],["tsp.component.scss",{"_index":1124,"title":{},"body":{"components/TspComponent.html":{}}}],["tsp/tsp.component",{"_index":1101,"title":{},"body":{"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{}}}],["tspcomponent",{"_index":59,"title":{"components/TspComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"modules/PanelModule.html":{},"modules/PanelRoutingModule.html":{},"components/TspComponent.html":{},"coverage.html":{},"overview.html":{}}}],["type",{"_index":132,"title":{},"body":{"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"injectables/DrawerService.html":{},"interceptors/EmptyBackendInterceptor.html":{},"components/ErreurPopUpComponent.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"injectables/HttpService.html":{},"interfaces/IApiRest.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PanelComponent.html":{},"classes/Path.html":{},"classes/Place.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["télécharger",{"_index":1337,"title":{},"body":{"index.html":{}}}],["ul",{"_index":336,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["un",{"_index":1232,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":367,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/TspComponent.html":{},"injectables/UserLocationService.html":{}}}],["une",{"_index":599,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["up",{"_index":316,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["up.component",{"_index":471,"title":{},"body":{"modules/GlobalModule.html":{},"classes/Log.html":{},"injectables/LogService.html":{}}}],["up.component.html",{"_index":318,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up.component.scss",{"_index":317,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up.component.ts",{"_index":315,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:12",{"_index":329,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up.component.ts:13",{"_index":328,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up.component.ts:9",{"_index":325,"title":{},"body":{"components/ErreurPopUpComponent.html":{}}}],["up/erreur",{"_index":314,"title":{},"body":{"components/ErreurPopUpComponent.html":{},"modules/GlobalModule.html":{},"classes/Log.html":{},"injectables/LogService.html":{},"coverage.html":{}}}],["updatedraw",{"_index":967,"title":{},"body":{"components/MapComponent.html":{}}}],["updatepopupposition",{"_index":828,"title":{},"body":{"components/MapComponent.html":{}}}],["url",{"_index":304,"title":{},"body":{"interceptors/EmptyBackendInterceptor.html":{},"interfaces/IApiRest.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["urlserveur",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1393,"title":{},"body":{"license.html":{}}}],["useexisting",{"_index":616,"title":{},"body":{"components/InputComponent.html":{}}}],["usefactory",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["userlocationservice",{"_index":637,"title":{"injectables/UserLocationService.html":{}},"body":{"components/InputComponent.html":{},"components/MapComponent.html":{},"injectables/UserLocationService.html":{},"coverage.html":{}}}],["userpointericons",{"_index":198,"title":{},"body":{"injectables/DrawerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userpointerimage",{"_index":169,"title":{},"body":{"injectables/DrawerService.html":{}}}],["userposition",{"_index":813,"title":{},"body":{"components/MapComponent.html":{}}}],["utils",{"_index":500,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["utils.ts",{"_index":345,"title":{},"body":{"classes/FormPanelUtils.html":{},"coverage.html":{}}}],["utils.ts:10",{"_index":374,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:11",{"_index":375,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:12",{"_index":372,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:13",{"_index":368,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:14",{"_index":370,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:15",{"_index":365,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:20",{"_index":381,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:36",{"_index":376,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:42",{"_index":378,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:50",{"_index":387,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:56",{"_index":379,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:63",{"_index":377,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils.ts:73",{"_index":384,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["utils/form",{"_index":344,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{},"coverage.html":{}}}],["utils/forms.validators.ts",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["v",{"_index":433,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["va",{"_index":1278,"title":{},"body":{"index.html":{}}}],["val",{"_index":655,"title":{},"body":{"components/InputComponent.html":{}}}],["validatorfn",{"_index":371,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":389,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["validators.minlength(1",{"_index":404,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["validators.required",{"_index":403,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["value",{"_index":135,"title":{},"body":{"components/ButtonComponent.html":{},"pipes/CapitalizePipe.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"injectables/LogService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":677,"title":{},"body":{"components/InputComponent.html":{}}}],["value.charat(0).touppercase",{"_index":159,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["value.slice(1",{"_index":160,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["valuechanges",{"_index":622,"title":{},"body":{"components/InputComponent.html":{}}}],["values",{"_index":439,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["values.length",{"_index":441,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["values.splice(1",{"_index":444,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["values.splice(values.length",{"_index":445,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["values[1",{"_index":443,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/ErreurPopUpComponent.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["variable",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1445,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vas",{"_index":1266,"title":{},"body":{"index.html":{}}}],["version",{"_index":1227,"title":{},"body":{"index.html":{}}}],["via",{"_index":1344,"title":{},"body":{"index.html":{}}}],["vie",{"_index":1335,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":761,"title":{},"body":{"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["viewchild(\"container",{"_index":885,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild(\"map",{"_index":884,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild(\"popup",{"_index":886,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild(\"popupvalue",{"_index":887,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild('container",{"_index":857,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild('map",{"_index":854,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild('popup",{"_index":866,"title":{},"body":{"components/MapComponent.html":{}}}],["viewchild('popupvalue",{"_index":870,"title":{},"body":{"components/MapComponent.html":{}}}],["ville",{"_index":430,"title":{},"body":{"classes/FormPanelUtils.html":{}}}],["villearrivee",{"_index":505,"title":{},"body":{"components/GpsComponent.html":{}}}],["villedepart",{"_index":504,"title":{},"body":{"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["villes",{"_index":602,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["villessupp",{"_index":352,"title":{},"body":{"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/TspComponent.html":{}}}],["void",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/DrawerService.html":{},"classes/FormPanelUtils.html":{},"components/GpsComponent.html":{},"components/InputComponent.html":{},"classes/Log.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"injectables/MapDataService.html":{},"components/PanelComponent.html":{},"components/TspComponent.html":{}}}],["voir",{"_index":1269,"title":{},"body":{"index.html":{}}}],["votre",{"_index":570,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["vous",{"_index":1219,"title":{},"body":{"index.html":{}}}],["vs",{"_index":1330,"title":{},"body":{"index.html":{}}}],["vscode",{"_index":1280,"title":{},"body":{"index.html":{}}}],["warn",{"_index":717,"title":{},"body":{"classes/Log.html":{},"injectables/LogService.html":{}}}],["warranties",{"_index":1419,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1414,"title":{},"body":{"license.html":{}}}],["web",{"_index":1307,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1431,"title":{},"body":{"license.html":{}}}],["white",{"_index":211,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{},"miscellaneous/variables.html":{}}}],["width",{"_index":697,"title":{},"body":{"components/InputComponent.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{},"components/PanelComponent.html":{}}}],["widthoffset",{"_index":232,"title":{},"body":{"injectables/DrawerService.html":{}}}],["window.innerheight",{"_index":231,"title":{},"body":{"injectables/DrawerService.html":{},"components/MapComponent.html":{}}}],["window.innerwidth",{"_index":230,"title":{},"body":{"injectables/DrawerService.html":{},"components/MainComponent.html":{},"components/MapComponent.html":{}}}],["window:resize",{"_index":830,"title":{},"body":{"components/MapComponent.html":{}}}],["windows",{"_index":1221,"title":{},"body":{"index.html":{}}}],["without",{"_index":1388,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":1340,"title":{},"body":{"index.html":{}}}],["writevalue",{"_index":630,"title":{},"body":{"components/InputComponent.html":{}}}],["writevalue(val",{"_index":659,"title":{},"body":{"components/InputComponent.html":{}}}],["x",{"_index":583,"title":{},"body":{"injectables/HttpService.html":{}}}],["z",{"_index":769,"title":{},"body":{"components/MainComponent.html":{}}}],["zip",{"_index":548,"title":{},"body":{"injectables/HttpService.html":{}}}],["zip(...this.createrequestgps(positions",{"_index":576,"title":{},"body":{"injectables/HttpService.html":{}}}],["zone.js",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/GlobalModule.html":{},"modules/MainModule.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"modules/PanelModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["zoomstate",{"_index":814,"title":{},"body":{"components/MapComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-app\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cl-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGlobalModule\n\nGlobalModule\n\nAppModule -->\n\nGlobalModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GlobalModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { mockBackEndInterceptorFactory } from './mock-backend/mock-backend-interceptor';\nimport { AppComponent } from './app.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { GlobalModule } from './composant/global/global.module';\nimport { LogService } from 'services/log.service';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatDialogModule,\n    GlobalModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useFactory: mockBackEndInterceptorFactory,\n      deps: [LogService],\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent],\n  declarations: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: \"app\",\n    loadChildren: './composant/main/main.module#MainModule',\n  },\n  {\n    path: \"\",\n    redirectTo: \"app\",\n    pathMatch: \"full\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/global/button/button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                disabled\n                            \n                            \n                                style\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/global/button/button.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : \"primary\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/button/button.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/button/button.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n                \n                    \n                        Type :     \"flat\" | \"icon\" | \"circle\"\n\n                    \n                \n                \n                    \n                        Default value : 'flat'\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/button/button.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : 'button'\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/button/button.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/button/button.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'cl-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n  @Input() disabled: boolean;\n  @Input() style: 'flat' | 'icon' | 'circle' = 'flat';\n  @Input() color = \"primary\";\n  @Input() type = 'button';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n\n    \n\n\n\n    \n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizePipe.html":{"url":"pipes/CapitalizePipe.html","title":"pipe - CapitalizePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/capitalize.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalize\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/capitalize.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: string): string {\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DrawerService.html":{"url":"injectables/DrawerService.html","title":"injectable - DrawerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DrawerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/drawer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ctx\n                            \n                            \n                                    Private\n                                locationPointerImage\n                            \n                            \n                                    Private\n                                userPointerImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Private\n                                initLocationPointer\n                            \n                            \n                                    Private\n                                initUserPointer\n                            \n                            \n                                location\n                            \n                            \n                                path\n                            \n                            \n                                pointer\n                            \n                            \n                                pointerUser\n                            \n                            \n                                setContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/drawer.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initLocationPointer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initLocationPointer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initUserPointer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initUserPointer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            location\n                        \n                        \n                    \n                \n            \n            \n                \nlocation(position: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath(start: any, end: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointer\n                        \n                        \n                    \n                \n            \n            \n                \npointer(position: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointerUser\n                        \n                        \n                    \n                \n            \n            \n                \npointerUser(position: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setContext\n                        \n                        \n                    \n                \n            \n            \n                \nsetContext(context: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/drawer.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ctx\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/drawer.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locationPointerImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLImageElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/drawer.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userPointerImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLImageElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/drawer.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserPointerIcons, LocationPointerIcons } from '../composant/main/map/icones/icones';\n\nconst COLORS = {\n  blue1: \"rgba(63, 81, 188, 0.9)\",\n  blue2: \"rgba(63, 81, 188, 0.7)\",\n  blue3: \"rgba(63, 81, 188, 0.5)\",\n  white: \"rgba(255, 255, 255, 0.6)\",\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class DrawerService {\n  private userPointerImage: HTMLImageElement;\n  private locationPointerImage: HTMLImageElement;\n  private ctx;\n\n  constructor() {\n    this.initUserPointer();\n    this.initLocationPointer();\n  }\n\n  private initUserPointer() {\n    this.userPointerImage = new Image();\n    this.userPointerImage.src = UserPointerIcons;\n    this.userPointerImage.onload = () => { };\n  }\n\n  private initLocationPointer() {\n    this.locationPointerImage = new Image();\n    this.locationPointerImage.src = LocationPointerIcons;\n    this.locationPointerImage.onload = () => { };\n  }\n\n  setContext(context: any) {\n    this.ctx = context;\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n  }\n\n  pointerUser(position: any) {\n    const widthOffset = this.userPointerImage.width / 2 - 10;\n    const heightOffset = this.userPointerImage.height / 2;\n    this.ctx.drawImage(this.userPointerImage, position.x - widthOffset, position.y - heightOffset);\n  }\n\n  pointer(position: any) {\n    const widthOffset = this.userPointerImage.width / 2 - 10;\n    const heightOffset = this.userPointerImage.height / 2;\n    this.ctx.drawImage(this.locationPointerImage, position.x - widthOffset, position.y - heightOffset);\n  }\n\n  location(position: any) {\n    this.ctx.beginPath();\n    this.ctx.lineWidth = \"1\";\n    this.ctx.strokeStyle = COLORS.blue1;\n    this.ctx.arc(position.x, position.y, 4, 0, 2 * Math.PI);\n    this.ctx.stroke();\n    this.ctx.beginPath();\n    this.ctx.lineWidth = \"2\";\n    this.ctx.strokeStyle = COLORS.white;\n    this.ctx.arc(position.x, position.y, 6, 0, 2 * Math.PI);\n    this.ctx.stroke();\n    this.ctx.beginPath();\n    this.ctx.lineWidth = \"2\";\n    this.ctx.strokeStyle = COLORS.blue2;\n    this.ctx.arc(position.x, position.y, 8, 0, 2 * Math.PI);\n    this.ctx.stroke();\n    this.ctx.beginPath();\n    this.ctx.lineWidth = \"1\";\n    this.ctx.strokeStyle = COLORS.blue3;\n    this.ctx.arc(position.x, position.y, 20, 0, 2 * Math.PI);\n    this.ctx.stroke();\n  }\n\n  path(start: any, end: any) {\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = COLORS.blue1;\n    this.ctx.moveTo(start.x, start.y);\n    this.ctx.lineTo(end.x, end.y);\n    this.ctx.stroke();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/EmptyBackendInterceptor.html":{"url":"interceptors/EmptyBackendInterceptor.html","title":"interceptor - EmptyBackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  EmptyBackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mock-backend/mock-backend-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/mock-backend/mock-backend-interceptor.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LogService } from 'services/log.service';\nimport { environment } from '../../environments/environment';\nimport { IApiRest, ApiRest } from './api';\n\n@Injectable()\nclass MockBackendInterceptor implements HttpInterceptor {\n\n    constructor(private logService: LogService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        const api: IApiRest = ApiRest.find(apiRest => request.url.endsWith(apiRest.url) && request.method === apiRest.method);\n        if (api) {\n            return of(new HttpResponse({ status: 200, body: api.objectToReturn.call(undefined, request) }));\n        } else {\n            this.logService.set(\"Une erreur c'est produite lors \", \" : l'url n'est pas connu : \" + request.url).asError().and.showPopUp().and.log();\n            return of(new HttpResponse({ status: 404, body: {} }));\n        }\n    }\n}\n\n@Injectable()\nclass EmptyBackendInterceptor implements HttpInterceptor {\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        request = request.clone({\n            url: \"http://\" + environment.urlServeur + request.url\n        });\n        return next.handle(request);\n    }\n}\n\nexport function mockBackEndInterceptorFactory(logService: LogService) {\n    if (environment.isServeurMock) {\n        return new MockBackendInterceptor(logService);\n    } else {\n        return new EmptyBackendInterceptor();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErreurPopUpComponent.html":{"url":"components/ErreurPopUpComponent.html","title":"component - ErreurPopUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErreurPopUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-erreur-pop-up\n            \n\n            \n                styleUrls\n                ./erreur-pop-up.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./erreur-pop-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'cl-erreur-pop-up',\n  templateUrl: './erreur-pop-up.component.html',\n  styleUrls: ['./erreur-pop-up.component.scss']\n})\nexport class ErreurPopUpComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: { message: string }\n  ) { }\n}\n\n    \n\n    \n        Oups...\n\n  {{data.message}}\n\n\n  Ok\n\n    \n\n    \n                \n                    ./erreur-pop-up.component.scss\n                \n                ul {\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Oups...  {{data.message}}  Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErreurPopUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormPanelUtils.html":{"url":"classes/FormPanelUtils.html","title":"class - FormPanelUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormPanelUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/composant/main/panel/form-utils/form-utils.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cities\n                            \n                            \n                                    Abstract\n                                current\n                            \n                            \n                                    Public\n                                inputValidators\n                            \n                            \n                                    Public\n                                panelForm\n                            \n                            \n                                    Abstract\n                                tabNumber\n                            \n                            \n                                    Public\n                                villesSupp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCity\n                            \n                            \n                                    Private\n                                getCitiesNameFromForm\n                            \n                            \n                                    Public\n                                getIdForNewCity\n                            \n                            \n                                    Private\n                                getPositionFromForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                removeCitySupp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, mapData: MapDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/main/panel/form-utils/form-utils.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapData\n                                                  \n                                                        \n                                                                        MapDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputValidators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValidatorFn[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            panelForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            tabNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            villesSupp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCitiesNameFromForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCitiesNameFromForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIdForNewCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIdForNewCity()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPositionFromForms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPositionFromForms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(fn: (positions: Place[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeCitySupp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCitySupp(cityToRemove)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/form-utils/form-utils.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cityToRemove\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormGroup, ValidatorFn, Validators, FormControl } from '@angular/forms';\nimport { MapDataService } from 'services/map-data.service';\nimport { OnInit } from '@angular/core';\nimport { Place } from 'model/place';\nimport { Path } from 'model/path';\nimport { HttpService } from 'services/http-service.service';\nimport { knowCity, notAlreadyChoose } from './forms.validators';\n\nexport abstract class FormPanelUtils implements OnInit {\n    public panelForm: FormGroup;\n    public villesSupp: string[] = [];\n    public inputValidators: ValidatorFn[];\n    public cities: Place[] = undefined;\n    abstract current: number;\n    abstract tabNumber: number;\n\n    constructor(protected http: HttpService, protected mapData: MapDataService) {\n    }\n\n    ngOnInit() {\n        this.inputValidators = [Validators.required, Validators.minLength(1), knowCity(this.cities), notAlreadyChoose()];\n        this.mapData.onCityPushed().subscribe((city: Place) => {\n            if (this.current === this.tabNumber) {\n                const controls = Object.values(this.panelForm.controls);\n                if (controls.length > 2) {\n                    controls.push(controls.splice(1, 1)[0]);\n                }\n                const input = controls.find(control => control.value === \"\" || control.value === null);\n                if (input) {\n                    input.setValue(city.name);\n                }\n            }\n        });\n    }\n\n    public addCity() {\n        const formControlName = `city-${this.getIdForNewCity()}`;\n        this.villesSupp.push(formControlName);\n        this.panelForm.addControl(formControlName, new FormControl(undefined, this.inputValidators));\n    }\n\n    public getIdForNewCity(): string {\n        if (this.villesSupp.length !== 0) {\n            return (+(this.villesSupp[this.villesSupp.length - 1].replace(\"city-\", \"\")) + 1).toString();\n        } else {\n            return \"0\";\n        }\n    }\n\n    public removeCitySupp(cityToRemove) {\n        const cityControlName = this.villesSupp.find((ville: string) => ville === cityToRemove);\n        this.villesSupp = this.villesSupp.filter(v => v !== cityControlName);\n        this.panelForm.removeControl(cityControlName);\n    }\n\n    private getPositionFromForms(): Promise {\n        return Promise.all(\n            this.getCitiesNameFromForm()\n                .map((cityName: string) => this.http.search(cityName))\n        );\n    }\n\n    private getCitiesNameFromForm() {\n        const values = Object.values(this.panelForm.value);\n        if (values.length > 2) {\n            const arrivelCity = values[1];\n            values.splice(1, 1);\n            values.splice(values.length, 0, arrivelCity);\n        }\n        return values;\n    }\n\n    protected async onSubmit(fn: (positions: Place[]) => Promise) {\n        this.mapData.resetPaths();\n        this.mapData.resetPointersLocations();\n        this.mapData.addPath(...await fn.call(this.http, (await this.getPositionFromForms()).map(place => place[0])));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GlobalModule.html":{"url":"modules/GlobalModule.html","title":"module - GlobalModule","body":"\n                   \n\n\n\n\n    Modules\n    GlobalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GlobalModule\n\n\n\ncluster_GlobalModule_declarations\n\n\n\ncluster_GlobalModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nGlobalModule\n\nGlobalModule\n\nGlobalModule -->\n\nButtonComponent->GlobalModule\n\n\n\n\n\nErreurPopUpComponent\n\nErreurPopUpComponent\n\nGlobalModule -->\n\nErreurPopUpComponent->GlobalModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nGlobalModule -->\n\nInputComponent->GlobalModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nGlobalModule->ButtonComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nGlobalModule->InputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/composant/global/global.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            ErreurPopUpComponent\n                        \n                        \n                            InputComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ErreurPopUpComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            InputComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from './button/button.component';\nimport { InputComponent } from './input/input.component';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ErreurPopUpComponent } from './erreur-pop-up/erreur-pop-up.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    InputComponent,\n    ErreurPopUpComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    PipesModule\n  ],\n  exports: [\n    ButtonComponent,\n    InputComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  entryComponents: [\n    ErreurPopUpComponent\n  ]\n})\nexport class GlobalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GpsComponent.html":{"url":"components/GpsComponent.html","title":"component - GpsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GpsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/main/panel/gps/gps.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FormPanelUtils\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-gps\n            \n\n            \n                styleUrls\n                ./gps.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./gps.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tabNumber\n                            \n                            \n                                    Public\n                                cities\n                            \n                            \n                                    Abstract\n                                current\n                            \n                            \n                                    Public\n                                inputValidators\n                            \n                            \n                                    Public\n                                panelForm\n                            \n                            \n                                    Abstract\n                                tabNumber\n                            \n                            \n                                    Public\n                                villesSupp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                addCity\n                            \n                            \n                                    Private\n                                getCitiesNameFromForm\n                            \n                            \n                                    Public\n                                getIdForNewCity\n                            \n                            \n                                    Private\n                                getPositionFromForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                removeCitySupp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, mapData: MapDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/main/panel/gps/gps.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapData\n                                                  \n                                                        \n                                                                        MapDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        current\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/main/panel/gps/gps.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/gps/gps.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/gps/gps.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCity()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCitiesNameFromForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCitiesNameFromForm()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIdForNewCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIdForNewCity()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPositionFromForms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPositionFromForms()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(fn: (positions: Place[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:73\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeCitySupp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCitySupp(cityToRemove)\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cityToRemove\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/gps/gps.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputValidators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValidatorFn[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            panelForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            tabNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            villesSupp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { HttpService } from 'services/http-service.service';\nimport { MapDataService } from 'services/map-data.service';\nimport { FormPanelUtils } from '../form-utils/form-utils';\n\n@Component({\n  selector: 'cl-gps',\n  templateUrl: './gps.component.html',\n  styleUrls: ['./gps.component.scss']\n})\nexport class GpsComponent extends FormPanelUtils implements OnInit {\n  @Input() current: number;\n  public tabNumber = 0;\n\n  constructor(http: HttpService, mapData: MapDataService) {\n    super(http, mapData);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.panelForm = new FormGroup({\n      villeDepart: new FormControl(undefined, this.inputValidators),\n      villeArrivee: new FormControl(undefined, this.inputValidators)\n    });\n  }\n\n  public async onSubmit() {\n    super.onSubmit(this.http.getPath);\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n    \n      add_circle\n    \n  \n  Rechercher\n\n    \n\n    \n                \n                    ./gps.component.scss\n                \n                :host {\n    display: block;\n    padding: 1rem;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    >* {\n        margin: auto;\n    }\n    #action-button {\n        display: flex;\n        flex-direction: row;\n        margin: .5rem auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  add_circle        Rechercher'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GpsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http-service.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createRequestGPS\n                            \n                            \n                                    Private\n                                createRequestTSP\n                            \n                            \n                                    Public\n                                getAllPositions\n                            \n                            \n                                    Public\n                                getNearestPosition\n                            \n                            \n                                    Public\n                                getPath\n                            \n                            \n                                getTSP\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http-service.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createRequestGPS\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRequestGPS(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http-service.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createRequestTSP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRequestTSP(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http-service.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllPositions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPositions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http-service.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNearestPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNearestPosition(positionUser: Place)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http-service.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positionUser\n                                    \n                                                Place\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPath(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http-service.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTSP\n                        \n                        \n                    \n                \n            \n            \n                \ngetTSP(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http-service.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http-service.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Path } from 'model/path';\nimport { Place } from 'model/place';\nimport { Observable, throwError, zip } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { LogService } from './log.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient, private logService: LogService) { }\n\n  public getNearestPosition(positionUser: Place): Promise {\n    return new Promise((res, rej) => {\n      const params = new HttpParams().set('lat', positionUser.lat.toString()).set('lon', positionUser.lon.toString());\n      this.http.get('/nearestpoint', { params: params }).subscribe((position: Place) => {\n        res(position);\n      }, err => {\n        this.logService.set(\"Impossible de récuperer le point le plus proche de votre position\", err).asError().showPopUp().and.log();\n        res(undefined);\n      });\n    });\n  }\n\n  public getAllPositions(): Promise {\n    return new Promise((res, rej) => {\n      this.http.get('/positions').subscribe((positions: Place[]) => {\n        res(positions);\n      }, err => {\n        this.logService.set(\"Impossible de récuperer les positions\", err).asError().showPopUp().and.log();\n        res(undefined);\n      });\n    });\n  }\n\n  public getPath(positions: Place[]): Promise {\n    return new Promise((res, rej) => {\n      zip(...this.createRequestGPS(positions))\n        .pipe(\n          catchError(err => {\n            this.logService.set(\"Impossible de récuperer les chemins\", err).asError().showPopUp().and.log();\n            rej(undefined);\n            return throwError({});\n          }),\n          take(1)\n        )\n        .subscribe((paths: Path[][]) => {\n          res(paths.reduce((accu, x) => accu.concat(x), []));\n        });\n    });\n  }\n\n  getTSP(positions: Place[]): Promise {\n    return new Promise((res, rej) => {\n      this.createRequestTSP(positions)\n        .pipe(\n          catchError(err => {\n            this.logService.set(\"Impossible de récuperer les chemins\", err).asError().showPopUp().and.log();\n            rej(undefined);\n            return throwError({});\n          }),\n          take(1)\n        )\n        .subscribe((paths: Path[]) => {\n          res(paths);\n        });\n    });\n  }\n\n  private createRequestGPS(positions: Place[]): Observable[] {\n    return positions.map((_, i) => {\n      if (i ('/path', { params: params });\n      }\n    }).filter(o => o);\n  }\n\n  private createRequestTSP(positions: Place[]): Observable {\n    let params: HttpParams = new HttpParams();\n    positions.map(position => params = params.append('id', position.id.toString()));\n    return this.http.get('/tsp', { params: params });\n  }\n\n  public search(name: string): Promise {\n    return new Promise(res => {\n      const params: HttpParams = new HttpParams().set('name', name);\n      this.http.get('/searchbyname', { params: params }).subscribe((positions: any[]) => {\n        res(positions);\n      }, err => {\n        this.logService.set(\"Impossible de faire une recherche des villes dispo\", err).asError().and.log();\n        res(undefined);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IApiRest.html":{"url":"interfaces/IApiRest.html","title":"interface - IApiRest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IApiRest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mock-backend/api/apiRestInterface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        method\n                                \n                                \n                                        objectToReturn\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:     \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectToReturn\n                                    \n                                \n                                \n                                    \n                                        objectToReturn:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IApiRest {\n    url: string;\n    method: 'GET' | 'POST' | 'PATCH' | 'DELETE';\n    objectToReturn: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/global/input/input.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                cl-input\n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filtered_cities\n                            \n                            \n                                    Private\n                                propagateChange\n                            \n                            \n                                    Private\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterCities\n                            \n                            \n                                    Public\n                                    Async\n                                getUserLocation\n                            \n                            \n                                    Private\n                                notifyChange\n                            \n                            \n                                    Public\n                                onInputChange\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                removeInput\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                _value\n                            \n                            \n                                cities\n                            \n                            \n                                disabled\n                            \n                            \n                                formControlName\n                            \n                            \n                                placeholder\n                            \n                            \n                                removeButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onInputRemove\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, userLocationService: UserLocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/global/input/input.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        _value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cities\n                    \n                \n                \n                    \n                        Type :         Place[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeButton\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onInputRemove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            filterCities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterCities(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            notifyChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notifyChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onInputChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onInputChange(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: (val: string) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeInput()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(val: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/global/input/input.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filtered_cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            valueChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/global/input/input.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/composant/global/input/input.component.ts:34\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/composant/global/input/input.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, forwardRef, Output, EventEmitter, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport { HttpService } from 'services/http-service.service';\nimport { MapDataService } from 'services/map-data.service';\nimport { Place } from 'model/place';\nimport { UserLocationService } from 'services/user-location.service';\n\n@Component({\n  selector: 'cl-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent implements ControlValueAccessor {\n  @Input() placeholder: string;\n  @Input() disabled = false;\n  @Input() removeButton = false;\n  @Input() _value: string;\n  @Input() formControlName: string;\n  @Input() cities: Place[];\n  @Output() onInputRemove: EventEmitter = new EventEmitter();\n  public filtered_cities: Promise;\n  private valueChanges: Subject = new Subject();\n  private propagateChange = (_: any) => { };\n\n  get value(): string {\n    return this._value;\n  }\n\n  set value(val: string) {\n    this._value = val;\n    this.onInputChange(val);\n    this.notifyChange();\n  }\n\n  constructor(private http: HttpService, private userLocationService: UserLocationService) { }\n\n  public writeValue(val: string) {\n    this.value = val;\n  }\n\n  public registerOnChange(fn: (val: string) => void) {\n    this.propagateChange = fn;\n  }\n\n  public registerOnTouched() { }\n\n  public removeInput() {\n    this.onInputRemove.emit(this.formControlName);\n  }\n\n  private notifyChange() {\n    this.valueChanges.next(this._value);\n    this.propagateChange(this._value);\n  }\n\n  public onInputChange(value: string) {\n    if (value) {\n      this.filtered_cities = this.filterCities(value.toLowerCase());\n    } else {\n      this.filtered_cities = Promise.resolve([]);\n    }\n  }\n\n  private filterCities(value: string): Promise {\n    return this.http.search(value);\n  }\n\n  public async getUserLocation() {\n    const nearestPoint: Place = await this.http.getNearestPosition(await this.userLocationService.getUserLocation());\n    this.value = (await this.http.search(nearestPoint.name))[0].name;\n  }\n}\n\n    \n\n    \n        \n    \n        my_location\n    \n    \n    \n        close\n    \n    \n        remove_circle_outline\n    \n    \n        \n            {{city.name | capitalize}}\n        \n    \n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                :host {\n    width: 100%;\n}\n\nmat-form-field {\n    width: 100%;\n}\n\ninput {\n    text-transform: capitalize;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            my_location                    close                remove_circle_outline                            {{city.name | capitalize}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Log.html":{"url":"classes/Log.html","title":"class - Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                and\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                flags\n                            \n                            \n                                    Private\n                                info\n                            \n                            \n                                    Private\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asError\n                            \n                            \n                                    Public\n                                asInfo\n                            \n                            \n                                    Public\n                                asWarn\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Private\n                                setFlags\n                            \n                            \n                                    Public\n                                showPopUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, message: string, info: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/log.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            and\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Log\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/log.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/log.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            flags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"error\" | \"warn\" | \"info\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/log.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            info\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/log.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/log.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            asError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    asError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            asInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    asInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            asWarn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    asWarn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setFlags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFlags(flags: \"error\" | \"warn\" | \"info\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flags\n                                    \n                                            \"error\" | \"warn\" | \"info\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showPopUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showPopUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ErreurPopUpComponent } from \"../composant/global/erreur-pop-up/erreur-pop-up.component\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogService {\n    constructor(private dialog: MatDialog) {\n    }\n\n    set(message: string, info: any = {}) {\n        return new Log(this.dialog, message, info);\n    }\n}\n\nclass Log {\n    private message: string;\n    private info: any;\n    public and: Log;\n    private flags: 'error' | 'warn' | 'info';\n\n    constructor(public dialog: MatDialog, message: string, info: any) {\n        this.message = message;\n        this.info = info;\n        this.and = this;\n    }\n\n    public asError() {\n        this.setFlags('error');\n        return this;\n    }\n\n    public asWarn() {\n        this.setFlags('warn');\n        return this;\n    }\n\n    public asInfo() {\n        this.setFlags('info');\n        return this;\n    }\n\n    private setFlags(flags: 'error' | 'warn' | 'info') {\n        this.flags = flags;\n    }\n\n    public showPopUp() {\n        this.dialog.open(ErreurPopUpComponent, {\n            data: { message: this.message }\n        });\n        return this;\n    }\n\n    public log() {\n        switch (this.flags) {\n            case \"error\":\n                console.error(this.message, this.info);\n                break;\n            case \"warn\":\n                console.warn(this.message, this.info);\n                break;\n            case \"info\":\n                console.info(this.message, this.info);\n                break;\n        }\n        return this;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/log.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(message: string, info: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    info\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Log\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ErreurPopUpComponent } from \"../composant/global/erreur-pop-up/erreur-pop-up.component\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogService {\n    constructor(private dialog: MatDialog) {\n    }\n\n    set(message: string, info: any = {}) {\n        return new Log(this.dialog, message, info);\n    }\n}\n\nclass Log {\n    private message: string;\n    private info: any;\n    public and: Log;\n    private flags: 'error' | 'warn' | 'info';\n\n    constructor(public dialog: MatDialog, message: string, info: any) {\n        this.message = message;\n        this.info = info;\n        this.and = this;\n    }\n\n    public asError() {\n        this.setFlags('error');\n        return this;\n    }\n\n    public asWarn() {\n        this.setFlags('warn');\n        return this;\n    }\n\n    public asInfo() {\n        this.setFlags('info');\n        return this;\n    }\n\n    private setFlags(flags: 'error' | 'warn' | 'info') {\n        this.flags = flags;\n    }\n\n    public showPopUp() {\n        this.dialog.open(ErreurPopUpComponent, {\n            data: { message: this.message }\n        });\n        return this;\n    }\n\n    public log() {\n        switch (this.flags) {\n            case \"error\":\n                console.error(this.message, this.info);\n                break;\n            case \"warn\":\n                console.warn(this.message, this.info);\n                break;\n            case \"info\":\n                console.info(this.message, this.info);\n                break;\n        }\n        return this;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/main/main.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-main\n            \n\n            \n                styleUrls\n                ./main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isMenuOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePanel\n                            \n                            \n                                getMenuProperties\n                            \n                            \n                                    Public\n                                isSmallScreen\n                            \n                            \n                                openPanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closePanel\n                        \n                        \n                    \n                \n            \n            \n                \nclosePanel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/main.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMenuProperties\n                        \n                        \n                    \n                \n            \n            \n                \ngetMenuProperties()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/main.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { 'display': string; 'width': string; } | { 'display'?: undefined; 'width'?: undefined; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isSmallScreen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isSmallScreen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/main.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPanel\n                        \n                        \n                    \n                \n            \n            \n                \nopenPanel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/main.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isMenuOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/main.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'cl-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent {\n  private isMenuOpen = false;\n\n  public isSmallScreen() {\n    return window.innerWidth \n    \n\n    \n        \n    M2GI Map\n    \n    \n        directions\n    \n    \n        map\n    \n\n\n\n    \n\n    \n                \n                    ./main.component.scss\n                \n                :host {\n    display: block;\n    height: 100%;\n    width: 100%;\n    position: relative;\n}\n\ncl-map {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n}\n\ncl-panel {\n    z-index: 1000;\n    right: 1rem;\n    top: 5%;\n    width: 20%;\n    height: 90%;\n    position: absolute;\n    transition: width 1.5s;\n}\n\n@media (max-width: 900px) {\n    cl-panel {\n        width: 30%;\n    }\n}\n\n@media (max-width: 640px) {\n    mat-toolbar {\n        width: 100%;\n    }\n    #fill {\n        flex: 1 1 auto;\n    }\n    cl-panel {\n        z-index: 1000;\n        top: 56px;\n        right: 0;\n        height: 100%;\n        position: absolute;\n        transition: width 1s;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    M2GI Map                directions                map    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_imports\n\n\n\n\nMainComponent\n\nMainComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainComponent->MainModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nMainModule -->\n\nMapModule->MainModule\n\n\n\n\n\nPanelModule\n\nPanelModule\n\nMainModule -->\n\nPanelModule->MainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/composant/main/main.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MapModule\n                        \n                        \n                            PanelModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainComponent } from './main.component';\nimport { MapModule } from './map/map.module';\nimport { PanelModule } from './panel/panel.module';\nimport { RouterModule } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [MainComponent],\n  imports: [\n    MapModule,\n    PanelModule,\n    CommonModule,\n    RouterModule.forChild([{\n      path: \"\",\n      component: MainComponent\n    }]),\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule\n  ]\n})\nexport class MainModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/main/map/map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvas\n                            \n                            \n                                    Private\n                                canvasTmp\n                            \n                            \n                                container\n                            \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Private\n                                mapDataOnChange\n                            \n                            \n                                    Private\n                                mapMouseClickState\n                            \n                            \n                                    Private\n                                mappa\n                            \n                            \n                                popup\n                            \n                            \n                                    Private\n                                popupCity\n                            \n                            \n                                    Private\n                                popupPosition\n                            \n                            \n                                popupValue\n                            \n                            \n                                    Private\n                                positionMapState\n                            \n                            \n                                    Private\n                                positions\n                            \n                            \n                                    Private\n                                userPosition\n                            \n                            \n                                    Private\n                                zoomState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMap\n                            \n                            \n                                    Private\n                                createPopUp\n                            \n                            \n                                    Private\n                                drawLocation\n                            \n                            \n                                    Private\n                                drawMap\n                            \n                            \n                                    Private\n                                drawPaths\n                            \n                            \n                                    Private\n                                drawPositions\n                            \n                            \n                                    Private\n                                    Async\n                                drawUserLocation\n                            \n                            \n                                    Public\n                                fermerPopUp\n                            \n                            \n                                    Private\n                                getPosition\n                            \n                            \n                                    Private\n                                getZoomState\n                            \n                            \n                                    Private\n                                initMap\n                            \n                            \n                                initMouseEvent\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                setLocalisation\n                            \n                            \n                                    Private\n                                updatePopUpPosition\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userLocationService: UserLocationService, drawerService: DrawerService, mapData: MapDataService, renderer: Renderer2, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/main/map/map.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userLocationService\n                                                  \n                                                        \n                                                                        UserLocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drawerService\n                                                  \n                                                        \n                                                                        DrawerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapData\n                                                  \n                                                        \n                                                                        MapDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:54\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createPopUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPopUp(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawPaths\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawPaths()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            drawPositions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawPositions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            drawUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    drawUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fermerPopUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fermerPopUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPosition(userPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPosition\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Place\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getZoomState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getZoomState(userPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPosition\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initMouseEvent\n                        \n                        \n                    \n                \n            \n            \n                \ninitMouseEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocalisation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocalisation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updatePopUpPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePopUpPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/map/map.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('map')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasTmp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapDataOnChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapMouseClickState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     undefined | \"mouseDown\" | \"mouseMove\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappa\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popupCity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popupPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popupValue')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            positionMapState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            positions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            zoomState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/map/map.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, HostListener, Renderer2 } from '@angular/core';\nimport * as mappaMundi from 'mappa-mundi';\nimport { Place } from 'model/place';\nimport { UserLocationService } from 'services/user-location.service';\nimport { DrawerService } from 'services/drawer.service';\nimport { MapDataService } from 'services/map-data.service';\nimport { Subscription } from 'rxjs';\nimport { HttpService } from 'services/http-service.service';\n\nconst KEY = 'pk.eyJ1IjoiZGFuaWVscGF5ZXQiLCJhIjoiY2pvem1leGF0Mm1hOTN3cGhmbHM0b3p2ayJ9.s0Gdr8eabQi56tHONKv1Sg';\n\n@Component({\n  selector: 'cl-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  constructor(\n    private userLocationService: UserLocationService,\n    private drawerService: DrawerService,\n    private mapData: MapDataService,\n    private renderer: Renderer2,\n    private http: HttpService\n  ) {\n    this.mappa = new mappaMundi('Mapbox', KEY);\n  }\n  @ViewChild(\"map\") canvas: ElementRef;\n  @ViewChild(\"container\") container: ElementRef;\n  @ViewChild(\"popup\") popup: ElementRef;\n  @ViewChild(\"popupValue\") popupValue: ElementRef;\n\n  private map;\n  private positions: Place[] = [];\n  private userPosition: Place;\n  private canvasTmp: ElementRef;\n  private mapDataOnChange: Subscription;\n  private zoomState: number = undefined;\n  private positionMapState: Place = undefined;\n  private mappa;\n\n  private mapMouseClickState: undefined | \"mouseDown\" | \"mouseMove\";\n\n  private popupPosition: { lat: number, lng: number };\n  private popupCity: Place;\n\n  async ngOnInit() {\n    this.canvasTmp = this.canvas;\n    await this.initMap();\n    this.drawMap();\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    if (this.map) {\n      this.zoomState = this.map.zoom();\n      const position = this.map.fromPointToLatLng(Math.floor(window.innerWidth / 2), Math.floor(window.innerHeight / 2));\n      this.positionMapState = new Place(undefined, \"current_Position\", position.lat, position.lng);\n      this.mapDataOnChange.unsubscribe();\n      this.map.onChange(() => { });\n    }\n    for (const child of this.container.nativeElement.children) {\n      this.renderer.removeChild(this.container.nativeElement, child);\n    }\n    this.canvas = this.canvasTmp;\n    try {\n      this.renderer.removeChild(document.getElementsByTagName(\"body\").item(0), document.getElementById(\"Mapbox\"));\n    } catch (e) { }\n    this.renderer.appendChild(this.container.nativeElement, this.canvas.nativeElement);\n    this.ngOnInit();\n  }\n\n  initMouseEvent() {\n    this.renderer.listen(this.container.nativeElement, 'mousedown', () => {\n      this.mapMouseClickState = \"mouseDown\";\n    });\n    this.renderer.listen(this.container.nativeElement, 'mousemove', () => {\n      if (this.mapMouseClickState === \"mouseDown\") {\n        this.mapMouseClickState = \"mouseMove\";\n      }\n    });\n    this.renderer.listen(this.container.nativeElement, 'mouseup', (event) => {\n      if (this.mapMouseClickState === \"mouseDown\") {\n        this.mapMouseClickState = \"mouseMove\";\n        this.popupPosition = this.map.fromPointToLatLng(event.clientX, event.clientY);\n        this.http.getNearestPosition(new Place(null, null, this.popupPosition.lat, this.popupPosition.lng)).then(\n          (city: Place) => {\n            this.popupCity = city;\n            this.createPopUp(city.name);\n            this.updatePopUpPosition();\n          });\n        this.mapMouseClickState = undefined;\n      }\n    });\n  }\n\n  private createPopUp(name: string) {\n    this.renderer.setStyle(this.popup.nativeElement, \"display\", \"initial\");\n    if (this.popupValue.nativeElement.childNodes.length > 0) {\n      this.renderer.removeChild(this.popupValue.nativeElement, this.popupValue.nativeElement.childNodes[0]);\n    }\n    this.renderer.appendChild(this.popupValue.nativeElement, this.renderer.createText(name.charAt(0).toUpperCase() + name.slice(1)));\n  }\n\n  public fermerPopUp() {\n    this.renderer.setStyle(this.popup.nativeElement, \"display\", \"none\");\n    if (this.popupValue.nativeElement.childNodes.length > 0) {\n      this.renderer.removeChild(this.popupValue.nativeElement, this.popupValue.nativeElement.childNodes[0]);\n    }\n    this.popupPosition = undefined;\n  }\n\n  private updatePopUpPosition() {\n    if (this.popupPosition) {\n      const position = this.map.latLngToPixel(this.popupPosition.lat, this.popupPosition.lng);\n      const sizeX = this.popup.nativeElement.offsetWidth / 2;\n      const sizeY = this.popup.nativeElement.offsetHeight;\n      this.renderer.setStyle(this.popup.nativeElement, \"top\", `${position.y - sizeY}px`);\n      this.renderer.setStyle(this.popup.nativeElement, \"left\", `${position.x - sizeX}px`);\n    }\n  }\n\n  public setLocalisation() {\n    this.mapData.pushCity(this.popupCity);\n  }\n\n  private initMap(): Promise {\n    return new Promise(async (res) => {\n      this.drawerService.setContext(this.canvas.nativeElement.getContext(\"2d\"));\n      this.canvas.nativeElement.width = window.innerWidth;\n      this.canvas.nativeElement.height = window.innerHeight;\n      this.userPosition = await this.userLocationService.getUserLocation();\n      const realPosition = this.getPosition(this.userPosition);\n      const options = {\n        lat: realPosition ? realPosition.lat : 46.483440,\n        lng: realPosition ? realPosition.lon : 2.525914,\n        zoom: this.getZoomState(this.userPosition)\n      };\n      this.map = this.mappa.tileMap(options);\n      this.map.overlay(this.canvas.nativeElement);\n      res();\n    });\n  }\n\n  private getPosition(userPosition): Place {\n    return this.positionMapState || userPosition;\n  }\n\n  private getZoomState(userPosition): number {\n    return this.zoomState || (userPosition ? 10 : 6);\n  }\n\n  private drawMap() {\n    const updateDraw = () => {\n      this.clearMap();\n      this.drawUserLocation();\n      this.drawLocation();\n      this.drawPositions();\n      this.drawPaths();\n      this.updatePopUpPosition();\n      this.initMouseEvent();\n    };\n    if (this.map) {\n      this.map.onChange(updateDraw);\n      this.mapDataOnChange = this.mapData.onChange().subscribe(updateDraw);\n    }\n  }\n\n  private drawPaths() {\n    if (this.mapData.paths) {\n      this.mapData.paths.forEach(path => {\n        const startPixels = this.map.latLngToPixel(path.start.lon, path.start.lat);\n        const endPixels = this.map.latLngToPixel(path.end.lon, path.end.lat);\n        this.drawerService.path(startPixels, endPixels);\n      });\n    }\n  }\n\n  private clearMap() {\n    this.drawerService.clear();\n  }\n\n  private async drawUserLocation() {\n    if (this.userPosition) {\n      const positionPixels = this.map.latLngToPixel(this.userPosition.lat, this.userPosition.lon);\n      this.drawerService.pointerUser(positionPixels);\n    }\n  }\n\n  private drawLocation() {\n    if (this.mapData.pointersLocation) {\n      this.mapData.pointersLocation.forEach(position => {\n        const positionPixels = this.map.latLngToPixel(position.lon, position.lat);\n        this.drawerService.pointer(positionPixels);\n      });\n    }\n  }\n\n  private drawPositions() {\n    this.positions.forEach(position => {\n      const positionPixels = this.map.latLngToPixel(position.lon, position.lat);\n      this.drawerService.location(positionPixels);\n    });\n  }\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n        \n            my_location\n        \n        \n    \n    \n        close\n    \n    \n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                :host {\n    display: block;\n}\n\n.popUp {\n    background-color: white;\n    padding: 10px 25px 10px 10px;\n    border-radius: 4px;\n    display: inline-block;\n}\n\n.arrow-down {\n    width: 0;\n    height: 0;\n    border-left: 15px solid transparent;\n    border-right: 15px solid transparent;\n    border-top: 15px solid white;\n    margin: auto;\n}\n\n.closePopUp {\n    position: relative;\n    right: 20px;\n    top: -20px;\n    background: white;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            my_location                                close        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapDataService.html":{"url":"injectables/MapDataService.html","title":"injectable - MapDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/map-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Private\n                                cityPushed\n                            \n                            \n                                    Public\n                                paths\n                            \n                            \n                                    Public\n                                pointersLocation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPath\n                            \n                            \n                                addPointersLocations\n                            \n                            \n                                    Private\n                                notify\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onCityPushed\n                            \n                            \n                                    Public\n                                pushCity\n                            \n                            \n                                resetPaths\n                            \n                            \n                                resetPointersLocations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPath\n                        \n                        \n                    \n                \n            \n            \n                \naddPath(paths: Path[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map-data.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                                Path[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPointersLocations\n                        \n                        \n                    \n                \n            \n            \n                \naddPointersLocations(positions: Place[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map-data.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                Place[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            notify\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notify()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map-data.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map-data.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onCityPushed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onCityPushed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map-data.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pushCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pushCity(city: Place)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map-data.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                Place\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPaths\n                        \n                        \n                    \n                \n            \n            \n                \nresetPaths()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map-data.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPointersLocations\n                        \n                        \n                    \n                \n            \n            \n                \nresetPointersLocations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/map-data.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cityPushed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map-data.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            paths\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pointersLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Path } from 'model/path';\nimport { Place } from 'model/place';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapDataService {\n  public paths: Path[] = [];\n  public pointersLocation: Place[] = [];\n  private change: Subject = new Subject();\n  private cityPushed: Subject = new Subject();\n\n  addPath(...paths: Path[]) {\n    this.paths.push(...paths);\n    if (paths.length === 1) {\n      this.addPointersLocations(paths[0].start, paths[0].end);\n    } else {\n      this.addPointersLocations(...paths.map(p => p.start));\n      if (paths[0].start.id !== paths[paths.length - 1].end.id) {\n        this.addPointersLocations(paths[paths.length - 1].end);\n      }\n    }\n    this.notify();\n  }\n\n  resetPaths() {\n    this.paths = [];\n    this.notify();\n  }\n\n  addPointersLocations(...positions: Place[]) {\n    this.pointersLocation.push(...positions);\n    this.notify();\n  }\n\n  resetPointersLocations() {\n    this.pointersLocation = [];\n    this.notify();\n  }\n\n  public onChange() {\n    return this.change.asObservable();\n  }\n\n  private notify() {\n    this.change.next();\n  }\n\n  public onCityPushed() {\n    return this.cityPushed.asObservable();\n  }\n\n  public pushCity(city: Place) {\n    this.cityPushed.next(city);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n    Modules\n    MapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/composant/main/map/map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [MapComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule\n  ],\n  exports: [\n    MapComponent\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/MockBackendInterceptor.html":{"url":"interceptors/MockBackendInterceptor.html","title":"interceptor - MockBackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  MockBackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/mock-backend/mock-backend-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mock-backend/mock-backend-interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/mock-backend/mock-backend-interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LogService } from 'services/log.service';\nimport { environment } from '../../environments/environment';\nimport { IApiRest, ApiRest } from './api';\n\n@Injectable()\nclass MockBackendInterceptor implements HttpInterceptor {\n\n    constructor(private logService: LogService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        const api: IApiRest = ApiRest.find(apiRest => request.url.endsWith(apiRest.url) && request.method === apiRest.method);\n        if (api) {\n            return of(new HttpResponse({ status: 200, body: api.objectToReturn.call(undefined, request) }));\n        } else {\n            this.logService.set(\"Une erreur c'est produite lors \", \" : l'url n'est pas connu : \" + request.url).asError().and.showPopUp().and.log();\n            return of(new HttpResponse({ status: 404, body: {} }));\n        }\n    }\n}\n\n@Injectable()\nclass EmptyBackendInterceptor implements HttpInterceptor {\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        request = request.clone({\n            url: \"http://\" + environment.urlServeur + request.url\n        });\n        return next.handle(request);\n    }\n}\n\nexport function mockBackEndInterceptorFactory(logService: LogService) {\n    if (environment.isServeurMock) {\n        return new MockBackendInterceptor(logService);\n    } else {\n        return new EmptyBackendInterceptor();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PanelComponent.html":{"url":"components/PanelComponent.html","title":"component - PanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/main/panel/panel.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-panel\n            \n\n            \n                styleUrls\n                ./panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setCurrentTab\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrentTab\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentTab(index)\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/panel.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/panel.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cl-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent {\n  public current = 0;\n\n  public setCurrentTab(index) {\n    this.current = index;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./panel.component.scss\n                \n                :host {\n    display: block;\n    background-color: white;\n    box-shadow: 0px 0px 1px grey;\n    overflow: auto;\n}\n\n::ng-deep.mat-tab-label,\n::ng-deep.mat-tab-label-active {\n    min-width: 45% !important;\n    padding: 3px !important;\n    margin: 3px !important;\n}\n\n@media (max-width: 640px) {\n    ::ng-deep.mat-tab-label,\n    ::ng-deep.mat-tab-label-active {\n        min-width: 30% !important;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PanelModule.html":{"url":"modules/PanelModule.html","title":"module - PanelModule","body":"\n                   \n\n\n\n\n    Modules\n    PanelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PanelModule\n\n\n\ncluster_PanelModule_declarations\n\n\n\ncluster_PanelModule_imports\n\n\n\ncluster_PanelModule_exports\n\n\n\n\nGpsComponent\n\nGpsComponent\n\n\n\nPanelModule\n\nPanelModule\n\nPanelModule -->\n\nGpsComponent->PanelModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nPanelModule -->\n\nPanelComponent->PanelModule\n\n\n\n\n\nTspComponent\n\nTspComponent\n\nPanelModule -->\n\nTspComponent->PanelModule\n\n\n\n\n\nPanelComponent \n\nPanelComponent \n\nPanelComponent  -->\n\nPanelModule->PanelComponent \n\n\n\n\n\nGlobalModule\n\nGlobalModule\n\nPanelModule -->\n\nGlobalModule->PanelModule\n\n\n\n\n\nPanelRoutingModule\n\nPanelRoutingModule\n\nPanelModule -->\n\nPanelRoutingModule->PanelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/composant/main/panel/panel.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GpsComponent\n                        \n                        \n                            PanelComponent\n                        \n                        \n                            TspComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GlobalModule\n                        \n                        \n                            PanelRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PanelComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PanelRoutingModule } from './panel-routing.module';\nimport { PanelComponent } from './panel.component';\nimport { GpsComponent } from './gps/gps.component';\nimport { TspComponent } from './tsp/tsp.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { GlobalModule } from '../../global/global.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [PanelComponent, GpsComponent, TspComponent],\n  imports: [\n    CommonModule,\n    PanelRoutingModule,\n    MatTabsModule,\n    GlobalModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule\n  ],\n  exports: [\n    PanelComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class PanelModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PanelRoutingModule.html":{"url":"modules/PanelRoutingModule.html","title":"module - PanelRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PanelRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/composant/main/panel/panel-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GpsComponent } from './gps/gps.component';\nimport { TspComponent } from './tsp/tsp.component';\n\nconst routes: Routes = [{\n  path: \"*\",\n  pathMatch: \"full\",\n  redirectTo: \"gps\",\n  outlet: 'panel'\n},\n{\n  path: \"gps\",\n  component: GpsComponent,\n  outlet: 'panel'\n},\n{\n  path: \"tsp\",\n  component: TspComponent,\n  outlet: 'panel'\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PanelRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Path.html":{"url":"classes/Path.html","title":"class - Path","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Path\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/path.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/path.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/path.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Place } from './place';\n\nexport class Path {\n  start: Place;\n  end: Place;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nCapitalizePipe\n\nCapitalizePipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nCapitalizePipe->PipesModule\n\n\n\n\n\nCapitalizePipe \n\nCapitalizePipe \n\nCapitalizePipe  -->\n\nPipesModule->CapitalizePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CapitalizePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CapitalizePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CapitalizePipe } from './capitalize.pipe';\n\n@NgModule({\n  declarations: [CapitalizePipe],\n  exports: [CapitalizePipe],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PipesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Place.html":{"url":"classes/Place.html","title":"class - Place","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Place\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/place.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lon\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, lat: number, lon: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/place.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lat\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lon\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/place.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/place.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/place.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/place.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Place {\n  constructor(public id: number, public name: string, public lat: number, public lon: number) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TspComponent.html":{"url":"components/TspComponent.html","title":"component - TspComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TspComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/composant/main/panel/tsp/tsp.component.ts\n\n\n\n    \n        Extends\n    \n    \n                FormPanelUtils\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cl-tsp\n            \n\n            \n                styleUrls\n                ./tsp.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tsp.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tabNumber\n                            \n                            \n                                    Public\n                                cities\n                            \n                            \n                                    Abstract\n                                current\n                            \n                            \n                                    Public\n                                inputValidators\n                            \n                            \n                                    Public\n                                panelForm\n                            \n                            \n                                    Abstract\n                                tabNumber\n                            \n                            \n                                    Public\n                                villesSupp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                addCity\n                            \n                            \n                                    Private\n                                getCitiesNameFromForm\n                            \n                            \n                                    Public\n                                getIdForNewCity\n                            \n                            \n                                    Private\n                                getPositionFromForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                    Async\n                                onSubmit\n                            \n                            \n                                    Public\n                                removeCitySupp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, mapData: MapDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/composant/main/panel/tsp/tsp.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapData\n                                                  \n                                                        \n                                                                        MapDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        current\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/composant/main/panel/tsp/tsp.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/tsp/tsp.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/composant/main/panel/tsp/tsp.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCity()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCitiesNameFromForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCitiesNameFromForm()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIdForNewCity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIdForNewCity()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPositionFromForms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPositionFromForms()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit(fn: (positions: Place[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:73\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeCitySupp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCitySupp(cityToRemove)\n                \n            \n\n\n            \n                \n                    Inherited from         FormPanelUtils\n\n                \n            \n            \n                \n                        Defined in         FormPanelUtils:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cityToRemove\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/composant/main/panel/tsp/tsp.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputValidators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValidatorFn[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            panelForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            tabNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            villesSupp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         FormPanelUtils\n\n                                \n                            \n                        \n                            \n                                    Defined in         FormPanelUtils:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { HttpService } from 'services/http-service.service';\nimport { MapDataService } from 'services/map-data.service';\nimport { FormPanelUtils } from '../form-utils/form-utils';\n\n@Component({\n  selector: 'cl-tsp',\n  templateUrl: './tsp.component.html',\n  styleUrls: ['./tsp.component.scss']\n})\nexport class TspComponent extends FormPanelUtils implements OnInit {\n  @Input() current: number;\n  public tabNumber = 1;\n\n  constructor(http: HttpService, mapData: MapDataService) {\n    super(http, mapData);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.panelForm = new FormGroup({\n      villeDepart: new FormControl(undefined, this.inputValidators)\n    });\n    this.addCity();\n  }\n\n  public async onSubmit() {\n    super.onSubmit(this.http.getTSP);\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n  \n\n  \n    \n      add_circle\n    \n  \n\n  Calculer\n\n    \n\n    \n                \n                    ./tsp.component.scss\n                \n                :host {\n    display: block;\n    padding: 1rem;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    >* {\n        margin: auto;\n    }\n    #action-button {\n        display: flex;\n        flex-direction: row;\n        margin: 1rem auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  add_circle        Calculer'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'cl-app'},{'name': 'ButtonComponent', 'selector': 'cl-button'},{'name': 'ErreurPopUpComponent', 'selector': 'cl-erreur-pop-up'},{'name': 'GpsComponent', 'selector': 'cl-gps'},{'name': 'InputComponent', 'selector': 'cl-input'},{'name': 'MainComponent', 'selector': 'cl-main'},{'name': 'MapComponent', 'selector': 'cl-map'},{'name': 'PanelComponent', 'selector': 'cl-panel'},{'name': 'TspComponent', 'selector': 'cl-tsp'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TspComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserLocationService.html":{"url":"injectables/UserLocationService.html","title":"injectable - UserLocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserLocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-location.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUserLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-location.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-location.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Place } from 'model/place';\nimport { LogService } from './log.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLocationService {\n\n  constructor(private logService: LogService) { }\n\n  public getUserLocation(): Promise {\n    return new Promise((res) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          res(new Place(undefined, undefined, position.coords.latitude, position.coords.longitude));\n        },\n          err => {\n            this.logService.set(\"La geolocation n'est pas disponible :\", err.message).asWarn().and.log();\n            res(undefined);\n          });\n      } else {\n        this.logService.set(\"La geolocation n'est pas disponible sur ce navigateur\").asWarn().and.log();\n        res(undefined);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/composant/global/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/composant/global/erreur-pop-up/erreur-pop-up.component.ts\n            \n            component\n            ErreurPopUpComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/composant/global/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/composant/main/main.component.ts\n            \n            component\n            MainComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/composant/main/map/icones/icones.ts\n            \n            variable\n            LocationPointerIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/composant/main/map/icones/icones.ts\n            \n            variable\n            UserPointerIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/composant/main/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/composant/main/map/map.component.ts\n            \n            variable\n            KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/form-utils/form-utils.ts\n            \n            class\n            FormPanelUtils\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/form-utils/forms.validators.ts\n            \n            function\n            knowCity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/form-utils/forms.validators.ts\n            \n            function\n            notAlreadyChoose\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/gps/gps.component.ts\n            \n            component\n            GpsComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/panel.component.ts\n            \n            component\n            PanelComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/composant/main/panel/tsp/tsp.component.ts\n            \n            component\n            TspComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/api.ts\n            \n            variable\n            ApiRest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/apiRestInterface.ts\n            \n            interface\n            IApiRest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            CHARLEVILLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            cities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            METZ\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            PARIS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path1\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path5\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            path6\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/api/mock-data.ts\n            \n            variable\n            paths\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/mock-backend/mock-backend-interceptor.ts\n            \n            interceptor\n            EmptyBackendInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/mock-backend/mock-backend-interceptor.ts\n            \n            interceptor\n            MockBackendInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/mock-backend/mock-backend-interceptor.ts\n            \n            function\n            mockBackEndInterceptorFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/path.ts\n            \n            class\n            Path\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/place.ts\n            \n            class\n            Place\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pipes/capitalize.pipe.ts\n            \n            pipe\n            CapitalizePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/drawer.service.ts\n            \n            injectable\n            DrawerService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/drawer.service.ts\n            \n            variable\n            COLORS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/http-service.service.ts\n            \n            injectable\n            HttpService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            class\n            Log\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/log.service.ts\n            \n            injectable\n            LogService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/map-data.service.ts\n            \n            injectable\n            MapDataService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/user-location.service.ts\n            \n            injectable\n            UserLocationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.mock.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.8\n        \n            @angular/cdk : ^7.3.3\n        \n            @angular/common : ~7.2.8\n        \n            @angular/compiler : ~7.2.8\n        \n            @angular/core : ~7.2.8\n        \n            @angular/forms : ~7.2.8\n        \n            @angular/http : ~7.2.8\n        \n            @angular/material : ^7.3.3\n        \n            @angular/platform-browser : ~7.2.8\n        \n            @angular/platform-browser-dynamic : ~7.2.8\n        \n            @angular/router : ~7.2.8\n        \n            core-js : ^2.6.5\n        \n            mappa-mundi : 0.0.5\n        \n            rxjs : ~6.4.0\n        \n            zone.js : ~0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            knowCity   (src/.../forms.validators.ts)\n                        \n                        \n                            mockBackEndInterceptorFactory   (src/.../mock-backend-interceptor.ts)\n                        \n                        \n                            notAlreadyChoose   (src/.../forms.validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/composant/main/panel/form-utils/forms.validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            knowCity\n                        \n                        \n                    \n                \n            \n            \n                \nknowCity(cites)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cites\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            notAlreadyChoose\n                        \n                        \n                    \n                \n            \n            \n                \nnotAlreadyChoose()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    src/app/mock-backend/mock-backend-interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            mockBackEndInterceptorFactory\n                        \n                        \n                    \n                \n            \n            \n                \nmockBackEndInterceptorFactory(logService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCL-front\nFront end of the map project\nMichel forever tonight.\nInstalation du projet :\nSi vous êtes sur windows :\n\nhttps://gitforwindows.org/\n\nInstaller node :\n\nprendre la version \"current\": https://nodejs.org/en/.\n\nInstaller Angular Cli\nDans un terminal executer : \n~~~~\nnpm install -g @angular/cli~~~~\nClone du repo\n~~~~\ngit clone https://github.com/2018-19-M2GI-Metz/CL-front.git\n~~~~\nInstalation des dépendances\n~~~~\nnpm install\n~~~~\nSi une erreur apparaît par rapport a node-gyp, executer :\n~~~~\nWindows:\nnpm install -g windows-build-tools\nLinux:\nsudo apt install build-essential\n~~~~\nTester si l'application compile et le serveur dev démarre\n~~~~\nnpm run start\n~~~~\nSi tout vas bien vous devriez voir \"Compiled successfully\" et une page de votre navigateur s'ouvrira sur http://localhost:4200.\nFerme le terminale, on va passer par vscode pour lancer l'app par la suite.\nDev\nLancer l'appli pour le dev\n\nSi le serveur est lancer : npm start +\n  configuration de l'url du serveur dans le fichier src/environment.ts\nSinon en mode mock : npm run start:mock\n\n-Lancer l'appli android : executer une des commandes au dessus + npm run prepare + npm run start:android\n-Lancer l'appli electron : executer une des commandes au dessus + npm run prepare + npm run start:electron\nLe client ce lance est ouvrir automatiquement une page dans le navigateur.\nCompiler\n\ncompiler (web) en debug : npm run build\ncompiler (web) en release sans serveur: npm run build:prod:mock + \n(Va aussi mettre les fichiers de l'appli dans les projets android et electron)\ncompiler en release avec serveur: npm run build:prod + \n(Va aussi mettre les fichiers de l'appli dans les projets android et electron)\nnpm build:apps : compile l'appli android et electron. Faut executer npm run build:prod(ou npm run build:prod:mock) avant pour copier les dépendances et les ressources. \n\nLes fichiers web (index.html, *.js,...) se trouvent dans le dossier cordova/www.\nBonus : Installer VS Code et les outils qui facilitent la vie\nLien pour télécharger : https://code.visualstudio.com/Download\n\nDans VS Code, file, open workspace et ouvrir le fichier \"cl-front.code-workspace\",\n\nInstaller les extentions recommandés, via le fenêtre qui va s'ouvrir en bas à droite.\n\nAprès que le extentions soit toutes installées, appuye sur F1 et écrit \"recharger la fenetre\", puis entrer.\n\nune sous fenêtre nommée \"npm scripts\" est maintenant présent et va permettre dans lancer tout les scripts de l'application (ils sont défini dans le fichier package.json ).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 2018-19-M2GI-Metz\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GlobalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PanelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PanelRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GlobalModule\n\n\n\ncluster_GlobalModule_declarations\n\n\n\ncluster_GlobalModule_exports\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_PanelModule\n\n\n\ncluster_PanelModule_declarations\n\n\n\ncluster_PanelModule_imports\n\n\n\ncluster_PanelModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGlobalModule\n\nGlobalModule\n\nAppModule -->\n\nGlobalModule->AppModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nGlobalModule->ButtonComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nGlobalModule->InputComponent \n\n\n\n\n\nPanelModule\n\nPanelModule\n\nPanelModule -->\n\nGlobalModule->PanelModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nGlobalModule -->\n\nButtonComponent->GlobalModule\n\n\n\n\n\nErreurPopUpComponent\n\nErreurPopUpComponent\n\nGlobalModule -->\n\nErreurPopUpComponent->GlobalModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nGlobalModule -->\n\nInputComponent->GlobalModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainComponent->MainModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nMainModule -->\n\nMapModule->MainModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\nMainModule -->\n\nPanelModule->MainModule\n\n\n\n\n\nPanelComponent \n\nPanelComponent \n\nPanelComponent  -->\n\nPanelModule->PanelComponent \n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nGpsComponent\n\nGpsComponent\n\nPanelModule -->\n\nGpsComponent->PanelModule\n\n\n\n\n\nPanelComponent\n\nPanelComponent\n\nPanelModule -->\n\nPanelComponent->PanelModule\n\n\n\n\n\nTspComponent\n\nTspComponent\n\nPanelModule -->\n\nTspComponent->PanelModule\n\n\n\n\n\nPanelRoutingModule\n\nPanelRoutingModule\n\nPanelModule -->\n\nPanelRoutingModule->PanelModule\n\n\n\n\n\nCapitalizePipe\n\nCapitalizePipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nCapitalizePipe->PipesModule\n\n\n\n\n\nCapitalizePipe \n\nCapitalizePipe \n\nCapitalizePipe  -->\n\nPipesModule->CapitalizePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiRest   (src/.../api.ts)\n                        \n                        \n                            CHARLEVILLE   (src/.../mock-data.ts)\n                        \n                        \n                            cities   (src/.../mock-data.ts)\n                        \n                        \n                            COLORS   (src/.../drawer.service.ts)\n                        \n                        \n                            environment   (src/.../environment.mock.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            KEY   (src/.../map.component.ts)\n                        \n                        \n                            LocationPointerIcons   (src/.../icones.ts)\n                        \n                        \n                            METZ   (src/.../mock-data.ts)\n                        \n                        \n                            PARIS   (src/.../mock-data.ts)\n                        \n                        \n                            path1   (src/.../mock-data.ts)\n                        \n                        \n                            path2   (src/.../mock-data.ts)\n                        \n                        \n                            path3   (src/.../mock-data.ts)\n                        \n                        \n                            path4   (src/.../mock-data.ts)\n                        \n                        \n                            path5   (src/.../mock-data.ts)\n                        \n                        \n                            path6   (src/.../mock-data.ts)\n                        \n                        \n                            paths   (src/.../mock-data.ts)\n                        \n                        \n                            UserPointerIcons   (src/.../icones.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock-backend/api/api.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiRest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IApiRest[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        url: \"/nearestpoint\",\n        method: \"GET\",\n        objectToReturn: () => METZ\n    },\n    {\n        url: \"/positions\",\n        method: \"GET\",\n        objectToReturn: (req) => [PARIS, METZ, CHARLEVILLE]\n    },\n    {\n        url: \"/path\",\n        method: \"GET\",\n        objectToReturn: (req) => {\n            const idStart: number = +req.params.get('idStart');\n            const idEnd: number = +req.params.get('idEnd');\n            return paths.find(path => path.start.id === idStart && path.end.id === idEnd);\n        }\n    },\n    {\n        url: \"/tsp\",\n        method: \"GET\",\n        objectToReturn: (req) => {\n            const params: string[] = req.params.getAll('id');\n            const pathsBuild: { start: number, end: number }[] = [];\n            for (let i = 0; i  paths.find(path => path.start.id === pathsId.start && path.end.id === pathsId.end));\n        }\n    },\n    {\n        url: \"/searchbyname\",\n        method: \"GET\",\n        objectToReturn: (req) => cities.filter((city) => city.name.indexOf(req.params.get('name')) >= 0)\n    }\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/mock-backend/api/mock-data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CHARLEVILLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: \"charleville\", id: 3, lon: 49.762460, lat: 4.722300 }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Place[]\n\n                        \n                    \n                    \n                        \n                            Default value : [PARIS, METZ, CHARLEVILLE]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            METZ\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: \"metz\", id: 2, lon: 49.119457, lat: 6.175982 }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PARIS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: \"paris\", id: 1, lon: 48.856783, lat: 2.348773 }\n                        \n                    \n\n                \n                    \n                        Villes disponibles dans l'application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { start: PARIS, end: METZ }\n                        \n                    \n\n                \n                    \n                        Tous les chemins disponibles dans l'application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { start: METZ, end: CHARLEVILLE }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { start: CHARLEVILLE, end: PARIS }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { start: CHARLEVILLE, end: METZ }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { start: METZ, end: PARIS }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path6\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path\n\n                        \n                    \n                    \n                        \n                            Default value : { start: PARIS, end: CHARLEVILLE }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paths\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Path[]\n\n                        \n                    \n                    \n                        \n                            Default value : [path1, path2, path3, path4, path5, path6]\n                        \n                    \n\n                \n                    \n                        Listes des chemins.\n\n                    \n                \n\n            \n        \n\n    src/app/services/drawer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COLORS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  blue1: \"rgba(63, 81, 188, 0.9)\",\n  blue2: \"rgba(63, 81, 188, 0.7)\",\n  blue3: \"rgba(63, 81, 188, 0.5)\",\n  white: \"rgba(255, 255, 255, 0.6)\",\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    isServeurMock: true,\n    urlServeur: \"\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  isServeurMock: false,\n  urlServeur: \"127.0.0.1\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  isServeurMock: true,\n  urlServeur: \"127.0.0.1\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/composant/main/map/map.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'pk.eyJ1IjoiZGFuaWVscGF5ZXQiLCJhIjoiY2pvem1leGF0Mm1hOTN3cGhmbHM0b3p2ayJ9.s0Gdr8eabQi56tHONKv1Sg'\n                        \n                    \n\n\n            \n        \n\n    src/app/composant/main/map/icones/icones.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LocationPointerIcons\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `data:image/svg+xml;utf8,`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPointerIcons\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `data:image/svg+xml;utf8,`\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
